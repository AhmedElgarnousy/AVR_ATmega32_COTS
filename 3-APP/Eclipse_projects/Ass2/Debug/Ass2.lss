
Ass2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001822  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00001822  00001896  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000013c8  00000000  00000000  000018a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000ebe  00000000  00000000  00002c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00003b2e  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003b40  2**2
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000040  00000000  00000000  00003b80  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000532  00000000  00000000  00003bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000004cb  00000000  00000000  000040f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000115  00000000  00000000  000045bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001f4  00000000  00000000  000046d2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e2       	ldi	r30, 0x22	; 34
      68:	f8 e1       	ldi	r31, 0x18	; 24
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a0 37       	cpi	r26, 0x70	; 112
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 41 00 	call	0x82	; 0x82 <main>
      7a:	0c 94 0f 0c 	jmp	0x181e	; 0x181e <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include"BIT_MATH.h"
//Assignment2


void main()
{
      82:	0f 93       	push	r16
      84:	1f 93       	push	r17
      86:	cf 93       	push	r28
      88:	df 93       	push	r29
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	c5 57       	subi	r28, 0x75	; 117
      90:	d1 40       	sbci	r29, 0x01	; 1
      92:	0f b6       	in	r0, 0x3f	; 63
      94:	f8 94       	cli
      96:	de bf       	out	0x3e, r29	; 62
      98:	0f be       	out	0x3f, r0	; 63
      9a:	cd bf       	out	0x3d, r28	; 61
	DDRA=0;//for 8 DIP switch
      9c:	8a e3       	ldi	r24, 0x3A	; 58
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	dc 01       	movw	r26, r24
      a2:	1c 92       	st	X, r1
	PORTA=0xff;// internal pullup resistor activation for all pins in portB
      a4:	8b e3       	ldi	r24, 0x3B	; 59
      a6:	90 e0       	ldi	r25, 0x00	; 0
      a8:	2f ef       	ldi	r18, 0xFF	; 255
      aa:	fc 01       	movw	r30, r24
      ac:	20 83       	st	Z, r18
	DDRB=0xff;
      ae:	87 e3       	ldi	r24, 0x37	; 55
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	2f ef       	ldi	r18, 0xFF	; 255
      b4:	dc 01       	movw	r26, r24
      b6:	2c 93       	st	X, r18
	u8 i;/*counter*/
	while(1)
	{
		switch (PINA)
      b8:	89 e3       	ldi	r24, 0x39	; 57
      ba:	90 e0       	ldi	r25, 0x00	; 0
      bc:	fc 01       	movw	r30, r24
      be:	80 81       	ld	r24, Z
      c0:	88 2f       	mov	r24, r24
      c2:	90 e0       	ldi	r25, 0x00	; 0
      c4:	8e 3f       	cpi	r24, 0xFE	; 254
      c6:	91 05       	cpc	r25, r1
      c8:	e9 f1       	breq	.+122    	; 0x144 <main+0xc2>
      ca:	8f 3f       	cpi	r24, 0xFF	; 255
      cc:	91 05       	cpc	r25, r1
      ce:	14 f0       	brlt	.+4      	; 0xd4 <main+0x52>
      d0:	0c 94 ed 0a 	jmp	0x15da	; 0x15da <__stack+0xd7b>
      d4:	8d 3f       	cpi	r24, 0xFD	; 253
      d6:	91 05       	cpc	r25, r1
      d8:	09 f4       	brne	.+2      	; 0xdc <main+0x5a>
      da:	ad c1       	rjmp	.+858    	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
      dc:	8e 3f       	cpi	r24, 0xFE	; 254
      de:	91 05       	cpc	r25, r1
      e0:	14 f0       	brlt	.+4      	; 0xe6 <main+0x64>
      e2:	0c 94 ed 0a 	jmp	0x15da	; 0x15da <__stack+0xd7b>
      e6:	8b 3f       	cpi	r24, 0xFB	; 251
      e8:	91 05       	cpc	r25, r1
      ea:	09 f4       	brne	.+2      	; 0xee <main+0x6c>
      ec:	7e c2       	rjmp	.+1276   	; 0x5ea <__FUSE_REGION_LENGTH__+0x1ea>
      ee:	8c 3f       	cpi	r24, 0xFC	; 252
      f0:	91 05       	cpc	r25, r1
      f2:	14 f0       	brlt	.+4      	; 0xf8 <main+0x76>
      f4:	0c 94 ed 0a 	jmp	0x15da	; 0x15da <__stack+0xd7b>
      f8:	87 3f       	cpi	r24, 0xF7	; 247
      fa:	91 05       	cpc	r25, r1
      fc:	09 f4       	brne	.+2      	; 0x100 <main+0x7e>
      fe:	4f c3       	rjmp	.+1694   	; 0x79e <__FUSE_REGION_LENGTH__+0x39e>
     100:	88 3f       	cpi	r24, 0xF8	; 248
     102:	91 05       	cpc	r25, r1
     104:	14 f0       	brlt	.+4      	; 0x10a <main+0x88>
     106:	0c 94 ed 0a 	jmp	0x15da	; 0x15da <__stack+0xd7b>
     10a:	8f 3e       	cpi	r24, 0xEF	; 239
     10c:	91 05       	cpc	r25, r1
     10e:	09 f4       	brne	.+2      	; 0x112 <main+0x90>
     110:	6f c3       	rjmp	.+1758   	; 0x7f0 <__FUSE_REGION_LENGTH__+0x3f0>
     112:	80 3f       	cpi	r24, 0xF0	; 240
     114:	91 05       	cpc	r25, r1
     116:	14 f0       	brlt	.+4      	; 0x11c <main+0x9a>
     118:	0c 94 ed 0a 	jmp	0x15da	; 0x15da <__stack+0xd7b>
     11c:	8f 3d       	cpi	r24, 0xDF	; 223
     11e:	91 05       	cpc	r25, r1
     120:	09 f4       	brne	.+2      	; 0x124 <main+0xa2>
     122:	89 c4       	rjmp	.+2322   	; 0xa36 <__stack+0x1d7>
     124:	80 3e       	cpi	r24, 0xE0	; 224
     126:	91 05       	cpc	r25, r1
     128:	14 f0       	brlt	.+4      	; 0x12e <main+0xac>
     12a:	0c 94 ed 0a 	jmp	0x15da	; 0x15da <__stack+0xd7b>
     12e:	8f 37       	cpi	r24, 0x7F	; 127
     130:	91 05       	cpc	r25, r1
     132:	11 f4       	brne	.+4      	; 0x138 <main+0xb6>
     134:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__stack+0x8bb>
     138:	8f 3b       	cpi	r24, 0xBF	; 191
     13a:	91 05       	cpc	r25, r1
     13c:	09 f4       	brne	.+2      	; 0x140 <main+0xbe>
     13e:	c3 c6       	rjmp	.+3462   	; 0xec6 <__stack+0x667>
     140:	0c 94 ed 0a 	jmp	0x15da	; 0x15da <__stack+0xd7b>
		{
			/*flashing every 500ms*/
			case 0b11111110:
			PORTB=0xff;
     144:	88 e3       	ldi	r24, 0x38	; 56
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	2f ef       	ldi	r18, 0xFF	; 255
     14a:	dc 01       	movw	r26, r24
     14c:	2c 93       	st	X, r18
     14e:	80 e0       	ldi	r24, 0x00	; 0
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	a8 ec       	ldi	r26, 0xC8	; 200
     154:	b2 e4       	ldi	r27, 0x42	; 66
     156:	88 8b       	std	Y+16, r24	; 0x10
     158:	99 8b       	std	Y+17, r25	; 0x11
     15a:	aa 8b       	std	Y+18, r26	; 0x12
     15c:	bb 8b       	std	Y+19, r27	; 0x13

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	4a e7       	ldi	r20, 0x7A	; 122
     164:	55 e4       	ldi	r21, 0x45	; 69
     166:	68 89       	ldd	r22, Y+16	; 0x10
     168:	79 89       	ldd	r23, Y+17	; 0x11
     16a:	8a 89       	ldd	r24, Y+18	; 0x12
     16c:	9b 89       	ldd	r25, Y+19	; 0x13
     16e:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     172:	ca 52       	subi	r28, 0x2A	; 42
     174:	df 4f       	sbci	r29, 0xFF	; 255
     176:	68 83       	st	Y, r22
     178:	79 83       	std	Y+1, r23	; 0x01
     17a:	8a 83       	std	Y+2, r24	; 0x02
     17c:	9b 83       	std	Y+3, r25	; 0x03
     17e:	c6 5d       	subi	r28, 0xD6	; 214
     180:	d0 40       	sbci	r29, 0x00	; 0
     182:	ca 52       	subi	r28, 0x2A	; 42
     184:	df 4f       	sbci	r29, 0xFF	; 255
     186:	88 81       	ld	r24, Y
     188:	99 81       	ldd	r25, Y+1	; 0x01
     18a:	aa 81       	ldd	r26, Y+2	; 0x02
     18c:	bb 81       	ldd	r27, Y+3	; 0x03
     18e:	c6 5d       	subi	r28, 0xD6	; 214
     190:	d0 40       	sbci	r29, 0x00	; 0
     192:	8c 8b       	std	Y+20, r24	; 0x14
     194:	9d 8b       	std	Y+21, r25	; 0x15
     196:	ae 8b       	std	Y+22, r26	; 0x16
     198:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     19a:	20 e0       	ldi	r18, 0x00	; 0
     19c:	30 e0       	ldi	r19, 0x00	; 0
     19e:	40 e8       	ldi	r20, 0x80	; 128
     1a0:	5f e3       	ldi	r21, 0x3F	; 63
     1a2:	6c 89       	ldd	r22, Y+20	; 0x14
     1a4:	7d 89       	ldd	r23, Y+21	; 0x15
     1a6:	8e 89       	ldd	r24, Y+22	; 0x16
     1a8:	9f 89       	ldd	r25, Y+23	; 0x17
     1aa:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__cmpsf2>
     1ae:	88 23       	and	r24, r24
     1b0:	2c f4       	brge	.+10     	; 0x1bc <main+0x13a>
		__ticks = 1;
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	99 8f       	std	Y+25, r25	; 0x19
     1b8:	88 8f       	std	Y+24, r24	; 0x18
     1ba:	75 c0       	rjmp	.+234    	; 0x2a6 <main+0x224>
	else if (__tmp > 65535)
     1bc:	20 e0       	ldi	r18, 0x00	; 0
     1be:	3f ef       	ldi	r19, 0xFF	; 255
     1c0:	4f e7       	ldi	r20, 0x7F	; 127
     1c2:	57 e4       	ldi	r21, 0x47	; 71
     1c4:	6c 89       	ldd	r22, Y+20	; 0x14
     1c6:	7d 89       	ldd	r23, Y+21	; 0x15
     1c8:	8e 89       	ldd	r24, Y+22	; 0x16
     1ca:	9f 89       	ldd	r25, Y+23	; 0x17
     1cc:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__gesf2>
     1d0:	18 16       	cp	r1, r24
     1d2:	0c f0       	brlt	.+2      	; 0x1d6 <main+0x154>
     1d4:	52 c0       	rjmp	.+164    	; 0x27a <main+0x1f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1d6:	20 e0       	ldi	r18, 0x00	; 0
     1d8:	30 e0       	ldi	r19, 0x00	; 0
     1da:	40 e2       	ldi	r20, 0x20	; 32
     1dc:	51 e4       	ldi	r21, 0x41	; 65
     1de:	68 89       	ldd	r22, Y+16	; 0x10
     1e0:	79 89       	ldd	r23, Y+17	; 0x11
     1e2:	8a 89       	ldd	r24, Y+18	; 0x12
     1e4:	9b 89       	ldd	r25, Y+19	; 0x13
     1e6:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     1ea:	c6 52       	subi	r28, 0x26	; 38
     1ec:	df 4f       	sbci	r29, 0xFF	; 255
     1ee:	68 83       	st	Y, r22
     1f0:	79 83       	std	Y+1, r23	; 0x01
     1f2:	8a 83       	std	Y+2, r24	; 0x02
     1f4:	9b 83       	std	Y+3, r25	; 0x03
     1f6:	ca 5d       	subi	r28, 0xDA	; 218
     1f8:	d0 40       	sbci	r29, 0x00	; 0
     1fa:	c6 52       	subi	r28, 0x26	; 38
     1fc:	df 4f       	sbci	r29, 0xFF	; 255
     1fe:	88 81       	ld	r24, Y
     200:	99 81       	ldd	r25, Y+1	; 0x01
     202:	aa 81       	ldd	r26, Y+2	; 0x02
     204:	bb 81       	ldd	r27, Y+3	; 0x03
     206:	ca 5d       	subi	r28, 0xDA	; 218
     208:	d0 40       	sbci	r29, 0x00	; 0
     20a:	ce 54       	subi	r28, 0x4E	; 78
     20c:	df 4f       	sbci	r29, 0xFF	; 255
     20e:	88 83       	st	Y, r24
     210:	99 83       	std	Y+1, r25	; 0x01
     212:	aa 83       	std	Y+2, r26	; 0x02
     214:	bb 83       	std	Y+3, r27	; 0x03
     216:	c2 5b       	subi	r28, 0xB2	; 178
     218:	d0 40       	sbci	r29, 0x00	; 0
     21a:	ce 54       	subi	r28, 0x4E	; 78
     21c:	df 4f       	sbci	r29, 0xFF	; 255
     21e:	68 81       	ld	r22, Y
     220:	79 81       	ldd	r23, Y+1	; 0x01
     222:	8a 81       	ldd	r24, Y+2	; 0x02
     224:	9b 81       	ldd	r25, Y+3	; 0x03
     226:	c2 5b       	subi	r28, 0xB2	; 178
     228:	d0 40       	sbci	r29, 0x00	; 0
     22a:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     22e:	c2 52       	subi	r28, 0x22	; 34
     230:	df 4f       	sbci	r29, 0xFF	; 255
     232:	68 83       	st	Y, r22
     234:	79 83       	std	Y+1, r23	; 0x01
     236:	8a 83       	std	Y+2, r24	; 0x02
     238:	9b 83       	std	Y+3, r25	; 0x03
     23a:	ce 5d       	subi	r28, 0xDE	; 222
     23c:	d0 40       	sbci	r29, 0x00	; 0
     23e:	c2 52       	subi	r28, 0x22	; 34
     240:	df 4f       	sbci	r29, 0xFF	; 255
     242:	a8 81       	ld	r26, Y
     244:	b9 81       	ldd	r27, Y+1	; 0x01
     246:	ce 5d       	subi	r28, 0xDE	; 222
     248:	d0 40       	sbci	r29, 0x00	; 0
     24a:	b9 8f       	std	Y+25, r27	; 0x19
     24c:	a8 8f       	std	Y+24, r26	; 0x18
		while(__ticks)
     24e:	10 c0       	rjmp	.+32     	; 0x270 <main+0x1ee>
     250:	80 e9       	ldi	r24, 0x90	; 144
     252:	91 e0       	ldi	r25, 0x01	; 1
     254:	9b 8f       	std	Y+27, r25	; 0x1b
     256:	8a 8f       	std	Y+26, r24	; 0x1a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     258:	8a 8d       	ldd	r24, Y+26	; 0x1a
     25a:	9b 8d       	ldd	r25, Y+27	; 0x1b
     25c:	01 97       	sbiw	r24, 0x01	; 1
     25e:	f1 f7       	brne	.-4      	; 0x25c <main+0x1da>
     260:	9b 8f       	std	Y+27, r25	; 0x1b
     262:	8a 8f       	std	Y+26, r24	; 0x1a
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     264:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     266:	88 8d       	ldd	r24, Y+24	; 0x18
     268:	99 8d       	ldd	r25, Y+25	; 0x19
     26a:	01 97       	sbiw	r24, 0x01	; 1
     26c:	99 8f       	std	Y+25, r25	; 0x19
     26e:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     270:	88 8d       	ldd	r24, Y+24	; 0x18
     272:	99 8d       	ldd	r25, Y+25	; 0x19
     274:	89 2b       	or	r24, r25
     276:	61 f7       	brne	.-40     	; 0x250 <main+0x1ce>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
		}
		return;
     278:	21 c0       	rjmp	.+66     	; 0x2bc <main+0x23a>
	}
	else
		__ticks = (uint16_t)__tmp;
     27a:	6c 89       	ldd	r22, Y+20	; 0x14
     27c:	7d 89       	ldd	r23, Y+21	; 0x15
     27e:	8e 89       	ldd	r24, Y+22	; 0x16
     280:	9f 89       	ldd	r25, Y+23	; 0x17
     282:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     286:	ce 51       	subi	r28, 0x1E	; 30
     288:	df 4f       	sbci	r29, 0xFF	; 255
     28a:	68 83       	st	Y, r22
     28c:	79 83       	std	Y+1, r23	; 0x01
     28e:	8a 83       	std	Y+2, r24	; 0x02
     290:	9b 83       	std	Y+3, r25	; 0x03
     292:	c2 5e       	subi	r28, 0xE2	; 226
     294:	d0 40       	sbci	r29, 0x00	; 0
     296:	ce 51       	subi	r28, 0x1E	; 30
     298:	df 4f       	sbci	r29, 0xFF	; 255
     29a:	e8 81       	ld	r30, Y
     29c:	f9 81       	ldd	r31, Y+1	; 0x01
     29e:	c2 5e       	subi	r28, 0xE2	; 226
     2a0:	d0 40       	sbci	r29, 0x00	; 0
     2a2:	f9 8f       	std	Y+25, r31	; 0x19
     2a4:	e8 8f       	std	Y+24, r30	; 0x18
     2a6:	88 8d       	ldd	r24, Y+24	; 0x18
     2a8:	99 8d       	ldd	r25, Y+25	; 0x19
     2aa:	9d 8f       	std	Y+29, r25	; 0x1d
     2ac:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2ae:	8c 8d       	ldd	r24, Y+28	; 0x1c
     2b0:	9d 8d       	ldd	r25, Y+29	; 0x1d
     2b2:	01 97       	sbiw	r24, 0x01	; 1
     2b4:	f1 f7       	brne	.-4      	; 0x2b2 <main+0x230>
     2b6:	9d 8f       	std	Y+29, r25	; 0x1d
     2b8:	8c 8f       	std	Y+28, r24	; 0x1c
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     2ba:	00 00       	nop
			_delay_ms(100);
			PORTB=0;
     2bc:	88 e3       	ldi	r24, 0x38	; 56
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	dc 01       	movw	r26, r24
     2c2:	1c 92       	st	X, r1
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	aa ef       	ldi	r26, 0xFA	; 250
     2ca:	b3 e4       	ldi	r27, 0x43	; 67
     2cc:	8a 83       	std	Y+2, r24	; 0x02
     2ce:	9b 83       	std	Y+3, r25	; 0x03
     2d0:	ac 83       	std	Y+4, r26	; 0x04
     2d2:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     2d4:	20 e0       	ldi	r18, 0x00	; 0
     2d6:	30 e0       	ldi	r19, 0x00	; 0
     2d8:	4a e7       	ldi	r20, 0x7A	; 122
     2da:	55 e4       	ldi	r21, 0x45	; 69
     2dc:	6a 81       	ldd	r22, Y+2	; 0x02
     2de:	7b 81       	ldd	r23, Y+3	; 0x03
     2e0:	8c 81       	ldd	r24, Y+4	; 0x04
     2e2:	9d 81       	ldd	r25, Y+5	; 0x05
     2e4:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     2e8:	ca 51       	subi	r28, 0x1A	; 26
     2ea:	df 4f       	sbci	r29, 0xFF	; 255
     2ec:	68 83       	st	Y, r22
     2ee:	79 83       	std	Y+1, r23	; 0x01
     2f0:	8a 83       	std	Y+2, r24	; 0x02
     2f2:	9b 83       	std	Y+3, r25	; 0x03
     2f4:	c6 5e       	subi	r28, 0xE6	; 230
     2f6:	d0 40       	sbci	r29, 0x00	; 0
     2f8:	ca 51       	subi	r28, 0x1A	; 26
     2fa:	df 4f       	sbci	r29, 0xFF	; 255
     2fc:	88 81       	ld	r24, Y
     2fe:	99 81       	ldd	r25, Y+1	; 0x01
     300:	aa 81       	ldd	r26, Y+2	; 0x02
     302:	bb 81       	ldd	r27, Y+3	; 0x03
     304:	c6 5e       	subi	r28, 0xE6	; 230
     306:	d0 40       	sbci	r29, 0x00	; 0
     308:	8e 83       	std	Y+6, r24	; 0x06
     30a:	9f 83       	std	Y+7, r25	; 0x07
     30c:	a8 87       	std	Y+8, r26	; 0x08
     30e:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     310:	20 e0       	ldi	r18, 0x00	; 0
     312:	30 e0       	ldi	r19, 0x00	; 0
     314:	40 e8       	ldi	r20, 0x80	; 128
     316:	5f e3       	ldi	r21, 0x3F	; 63
     318:	6e 81       	ldd	r22, Y+6	; 0x06
     31a:	7f 81       	ldd	r23, Y+7	; 0x07
     31c:	88 85       	ldd	r24, Y+8	; 0x08
     31e:	99 85       	ldd	r25, Y+9	; 0x09
     320:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__cmpsf2>
     324:	88 23       	and	r24, r24
     326:	2c f4       	brge	.+10     	; 0x332 <main+0x2b0>
		__ticks = 1;
     328:	81 e0       	ldi	r24, 0x01	; 1
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	9b 87       	std	Y+11, r25	; 0x0b
     32e:	8a 87       	std	Y+10, r24	; 0x0a
     330:	75 c0       	rjmp	.+234    	; 0x41c <__FUSE_REGION_LENGTH__+0x1c>
	else if (__tmp > 65535)
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	3f ef       	ldi	r19, 0xFF	; 255
     336:	4f e7       	ldi	r20, 0x7F	; 127
     338:	57 e4       	ldi	r21, 0x47	; 71
     33a:	6e 81       	ldd	r22, Y+6	; 0x06
     33c:	7f 81       	ldd	r23, Y+7	; 0x07
     33e:	88 85       	ldd	r24, Y+8	; 0x08
     340:	99 85       	ldd	r25, Y+9	; 0x09
     342:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__gesf2>
     346:	18 16       	cp	r1, r24
     348:	0c f0       	brlt	.+2      	; 0x34c <main+0x2ca>
     34a:	52 c0       	rjmp	.+164    	; 0x3f0 <main+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     34c:	20 e0       	ldi	r18, 0x00	; 0
     34e:	30 e0       	ldi	r19, 0x00	; 0
     350:	40 e2       	ldi	r20, 0x20	; 32
     352:	51 e4       	ldi	r21, 0x41	; 65
     354:	6a 81       	ldd	r22, Y+2	; 0x02
     356:	7b 81       	ldd	r23, Y+3	; 0x03
     358:	8c 81       	ldd	r24, Y+4	; 0x04
     35a:	9d 81       	ldd	r25, Y+5	; 0x05
     35c:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     360:	c6 51       	subi	r28, 0x16	; 22
     362:	df 4f       	sbci	r29, 0xFF	; 255
     364:	68 83       	st	Y, r22
     366:	79 83       	std	Y+1, r23	; 0x01
     368:	8a 83       	std	Y+2, r24	; 0x02
     36a:	9b 83       	std	Y+3, r25	; 0x03
     36c:	ca 5e       	subi	r28, 0xEA	; 234
     36e:	d0 40       	sbci	r29, 0x00	; 0
     370:	c6 51       	subi	r28, 0x16	; 22
     372:	df 4f       	sbci	r29, 0xFF	; 255
     374:	88 81       	ld	r24, Y
     376:	99 81       	ldd	r25, Y+1	; 0x01
     378:	aa 81       	ldd	r26, Y+2	; 0x02
     37a:	bb 81       	ldd	r27, Y+3	; 0x03
     37c:	ca 5e       	subi	r28, 0xEA	; 234
     37e:	d0 40       	sbci	r29, 0x00	; 0
     380:	c2 55       	subi	r28, 0x52	; 82
     382:	df 4f       	sbci	r29, 0xFF	; 255
     384:	88 83       	st	Y, r24
     386:	99 83       	std	Y+1, r25	; 0x01
     388:	aa 83       	std	Y+2, r26	; 0x02
     38a:	bb 83       	std	Y+3, r27	; 0x03
     38c:	ce 5a       	subi	r28, 0xAE	; 174
     38e:	d0 40       	sbci	r29, 0x00	; 0
     390:	c2 55       	subi	r28, 0x52	; 82
     392:	df 4f       	sbci	r29, 0xFF	; 255
     394:	68 81       	ld	r22, Y
     396:	79 81       	ldd	r23, Y+1	; 0x01
     398:	8a 81       	ldd	r24, Y+2	; 0x02
     39a:	9b 81       	ldd	r25, Y+3	; 0x03
     39c:	ce 5a       	subi	r28, 0xAE	; 174
     39e:	d0 40       	sbci	r29, 0x00	; 0
     3a0:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     3a4:	c2 51       	subi	r28, 0x12	; 18
     3a6:	df 4f       	sbci	r29, 0xFF	; 255
     3a8:	68 83       	st	Y, r22
     3aa:	79 83       	std	Y+1, r23	; 0x01
     3ac:	8a 83       	std	Y+2, r24	; 0x02
     3ae:	9b 83       	std	Y+3, r25	; 0x03
     3b0:	ce 5e       	subi	r28, 0xEE	; 238
     3b2:	d0 40       	sbci	r29, 0x00	; 0
     3b4:	c2 51       	subi	r28, 0x12	; 18
     3b6:	df 4f       	sbci	r29, 0xFF	; 255
     3b8:	a8 81       	ld	r26, Y
     3ba:	b9 81       	ldd	r27, Y+1	; 0x01
     3bc:	ce 5e       	subi	r28, 0xEE	; 238
     3be:	d0 40       	sbci	r29, 0x00	; 0
     3c0:	bb 87       	std	Y+11, r27	; 0x0b
     3c2:	aa 87       	std	Y+10, r26	; 0x0a
		while(__ticks)
     3c4:	10 c0       	rjmp	.+32     	; 0x3e6 <main+0x364>
     3c6:	80 e9       	ldi	r24, 0x90	; 144
     3c8:	91 e0       	ldi	r25, 0x01	; 1
     3ca:	9d 87       	std	Y+13, r25	; 0x0d
     3cc:	8c 87       	std	Y+12, r24	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3ce:	8c 85       	ldd	r24, Y+12	; 0x0c
     3d0:	9d 85       	ldd	r25, Y+13	; 0x0d
     3d2:	01 97       	sbiw	r24, 0x01	; 1
     3d4:	f1 f7       	brne	.-4      	; 0x3d2 <main+0x350>
     3d6:	9d 87       	std	Y+13, r25	; 0x0d
     3d8:	8c 87       	std	Y+12, r24	; 0x0c
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     3da:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3dc:	8a 85       	ldd	r24, Y+10	; 0x0a
     3de:	9b 85       	ldd	r25, Y+11	; 0x0b
     3e0:	01 97       	sbiw	r24, 0x01	; 1
     3e2:	9b 87       	std	Y+11, r25	; 0x0b
     3e4:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3e6:	8a 85       	ldd	r24, Y+10	; 0x0a
     3e8:	9b 85       	ldd	r25, Y+11	; 0x0b
     3ea:	89 2b       	or	r24, r25
     3ec:	61 f7       	brne	.-40     	; 0x3c6 <main+0x344>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
		}
		return;
     3ee:	21 c0       	rjmp	.+66     	; 0x432 <__FUSE_REGION_LENGTH__+0x32>
	}
	else
		__ticks = (uint16_t)__tmp;
     3f0:	6e 81       	ldd	r22, Y+6	; 0x06
     3f2:	7f 81       	ldd	r23, Y+7	; 0x07
     3f4:	88 85       	ldd	r24, Y+8	; 0x08
     3f6:	99 85       	ldd	r25, Y+9	; 0x09
     3f8:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     3fc:	ce 50       	subi	r28, 0x0E	; 14
     3fe:	df 4f       	sbci	r29, 0xFF	; 255
     400:	68 83       	st	Y, r22
     402:	79 83       	std	Y+1, r23	; 0x01
     404:	8a 83       	std	Y+2, r24	; 0x02
     406:	9b 83       	std	Y+3, r25	; 0x03
     408:	c2 5f       	subi	r28, 0xF2	; 242
     40a:	d0 40       	sbci	r29, 0x00	; 0
     40c:	ce 50       	subi	r28, 0x0E	; 14
     40e:	df 4f       	sbci	r29, 0xFF	; 255
     410:	e8 81       	ld	r30, Y
     412:	f9 81       	ldd	r31, Y+1	; 0x01
     414:	c2 5f       	subi	r28, 0xF2	; 242
     416:	d0 40       	sbci	r29, 0x00	; 0
     418:	fb 87       	std	Y+11, r31	; 0x0b
     41a:	ea 87       	std	Y+10, r30	; 0x0a
     41c:	8a 85       	ldd	r24, Y+10	; 0x0a
     41e:	9b 85       	ldd	r25, Y+11	; 0x0b
     420:	9f 87       	std	Y+15, r25	; 0x0f
     422:	8e 87       	std	Y+14, r24	; 0x0e
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     424:	8e 85       	ldd	r24, Y+14	; 0x0e
     426:	9f 85       	ldd	r25, Y+15	; 0x0f
     428:	01 97       	sbiw	r24, 0x01	; 1
     42a:	f1 f7       	brne	.-4      	; 0x428 <__FUSE_REGION_LENGTH__+0x28>
     42c:	9f 87       	std	Y+15, r25	; 0x0f
     42e:	8e 87       	std	Y+14, r24	; 0x0e
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     430:	00 00       	nop
			_delay_ms(500);
			break;
     432:	0c 94 f2 0a 	jmp	0x15e4	; 0x15e4 <__stack+0xd85>

			/*shifting left every 250 ms  */
			case 0b11111101:
			PORTB=0;
     436:	88 e3       	ldi	r24, 0x38	; 56
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	dc 01       	movw	r26, r24
     43c:	1c 92       	st	X, r1
			for(i=0;i<8;i++)
     43e:	19 82       	std	Y+1, r1	; 0x01
     440:	ce c0       	rjmp	.+412    	; 0x5de <__FUSE_REGION_LENGTH__+0x1de>
			{
				PORTB+=(1<<i);
     442:	88 e3       	ldi	r24, 0x38	; 56
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	fc 01       	movw	r30, r24
     448:	40 81       	ld	r20, Z
     44a:	89 81       	ldd	r24, Y+1	; 0x01
     44c:	28 2f       	mov	r18, r24
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	02 c0       	rjmp	.+4      	; 0x45a <__FUSE_REGION_LENGTH__+0x5a>
     456:	88 0f       	add	r24, r24
     458:	99 1f       	adc	r25, r25
     45a:	2a 95       	dec	r18
     45c:	e2 f7       	brpl	.-8      	; 0x456 <__FUSE_REGION_LENGTH__+0x56>
     45e:	28 2f       	mov	r18, r24
     460:	88 e3       	ldi	r24, 0x38	; 56
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	24 0f       	add	r18, r20
     466:	dc 01       	movw	r26, r24
     468:	2c 93       	st	X, r18
     46a:	80 e0       	ldi	r24, 0x00	; 0
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	a8 ec       	ldi	r26, 0xC8	; 200
     470:	b2 e4       	ldi	r27, 0x42	; 66
     472:	8e 8f       	std	Y+30, r24	; 0x1e
     474:	9f 8f       	std	Y+31, r25	; 0x1f
     476:	a8 a3       	std	Y+32, r26	; 0x20
     478:	b9 a3       	std	Y+33, r27	; 0x21

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	4a e7       	ldi	r20, 0x7A	; 122
     480:	55 e4       	ldi	r21, 0x45	; 69
     482:	6e 8d       	ldd	r22, Y+30	; 0x1e
     484:	7f 8d       	ldd	r23, Y+31	; 0x1f
     486:	88 a1       	ldd	r24, Y+32	; 0x20
     488:	99 a1       	ldd	r25, Y+33	; 0x21
     48a:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     48e:	ca 50       	subi	r28, 0x0A	; 10
     490:	df 4f       	sbci	r29, 0xFF	; 255
     492:	68 83       	st	Y, r22
     494:	79 83       	std	Y+1, r23	; 0x01
     496:	8a 83       	std	Y+2, r24	; 0x02
     498:	9b 83       	std	Y+3, r25	; 0x03
     49a:	c6 5f       	subi	r28, 0xF6	; 246
     49c:	d0 40       	sbci	r29, 0x00	; 0
     49e:	ca 50       	subi	r28, 0x0A	; 10
     4a0:	df 4f       	sbci	r29, 0xFF	; 255
     4a2:	88 81       	ld	r24, Y
     4a4:	99 81       	ldd	r25, Y+1	; 0x01
     4a6:	aa 81       	ldd	r26, Y+2	; 0x02
     4a8:	bb 81       	ldd	r27, Y+3	; 0x03
     4aa:	c6 5f       	subi	r28, 0xF6	; 246
     4ac:	d0 40       	sbci	r29, 0x00	; 0
     4ae:	8a a3       	std	Y+34, r24	; 0x22
     4b0:	9b a3       	std	Y+35, r25	; 0x23
     4b2:	ac a3       	std	Y+36, r26	; 0x24
     4b4:	bd a3       	std	Y+37, r27	; 0x25
	if (__tmp < 1.0)
     4b6:	20 e0       	ldi	r18, 0x00	; 0
     4b8:	30 e0       	ldi	r19, 0x00	; 0
     4ba:	40 e8       	ldi	r20, 0x80	; 128
     4bc:	5f e3       	ldi	r21, 0x3F	; 63
     4be:	6a a1       	ldd	r22, Y+34	; 0x22
     4c0:	7b a1       	ldd	r23, Y+35	; 0x23
     4c2:	8c a1       	ldd	r24, Y+36	; 0x24
     4c4:	9d a1       	ldd	r25, Y+37	; 0x25
     4c6:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__cmpsf2>
     4ca:	88 23       	and	r24, r24
     4cc:	2c f4       	brge	.+10     	; 0x4d8 <__FUSE_REGION_LENGTH__+0xd8>
		__ticks = 1;
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	9f a3       	std	Y+39, r25	; 0x27
     4d4:	8e a3       	std	Y+38, r24	; 0x26
     4d6:	75 c0       	rjmp	.+234    	; 0x5c2 <__FUSE_REGION_LENGTH__+0x1c2>
	else if (__tmp > 65535)
     4d8:	20 e0       	ldi	r18, 0x00	; 0
     4da:	3f ef       	ldi	r19, 0xFF	; 255
     4dc:	4f e7       	ldi	r20, 0x7F	; 127
     4de:	57 e4       	ldi	r21, 0x47	; 71
     4e0:	6a a1       	ldd	r22, Y+34	; 0x22
     4e2:	7b a1       	ldd	r23, Y+35	; 0x23
     4e4:	8c a1       	ldd	r24, Y+36	; 0x24
     4e6:	9d a1       	ldd	r25, Y+37	; 0x25
     4e8:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__gesf2>
     4ec:	18 16       	cp	r1, r24
     4ee:	0c f0       	brlt	.+2      	; 0x4f2 <__FUSE_REGION_LENGTH__+0xf2>
     4f0:	52 c0       	rjmp	.+164    	; 0x596 <__FUSE_REGION_LENGTH__+0x196>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4f2:	20 e0       	ldi	r18, 0x00	; 0
     4f4:	30 e0       	ldi	r19, 0x00	; 0
     4f6:	40 e2       	ldi	r20, 0x20	; 32
     4f8:	51 e4       	ldi	r21, 0x41	; 65
     4fa:	6e 8d       	ldd	r22, Y+30	; 0x1e
     4fc:	7f 8d       	ldd	r23, Y+31	; 0x1f
     4fe:	88 a1       	ldd	r24, Y+32	; 0x20
     500:	99 a1       	ldd	r25, Y+33	; 0x21
     502:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     506:	c6 50       	subi	r28, 0x06	; 6
     508:	df 4f       	sbci	r29, 0xFF	; 255
     50a:	68 83       	st	Y, r22
     50c:	79 83       	std	Y+1, r23	; 0x01
     50e:	8a 83       	std	Y+2, r24	; 0x02
     510:	9b 83       	std	Y+3, r25	; 0x03
     512:	ca 5f       	subi	r28, 0xFA	; 250
     514:	d0 40       	sbci	r29, 0x00	; 0
     516:	c6 50       	subi	r28, 0x06	; 6
     518:	df 4f       	sbci	r29, 0xFF	; 255
     51a:	88 81       	ld	r24, Y
     51c:	99 81       	ldd	r25, Y+1	; 0x01
     51e:	aa 81       	ldd	r26, Y+2	; 0x02
     520:	bb 81       	ldd	r27, Y+3	; 0x03
     522:	ca 5f       	subi	r28, 0xFA	; 250
     524:	d0 40       	sbci	r29, 0x00	; 0
     526:	ca 54       	subi	r28, 0x4A	; 74
     528:	df 4f       	sbci	r29, 0xFF	; 255
     52a:	88 83       	st	Y, r24
     52c:	99 83       	std	Y+1, r25	; 0x01
     52e:	aa 83       	std	Y+2, r26	; 0x02
     530:	bb 83       	std	Y+3, r27	; 0x03
     532:	c6 5b       	subi	r28, 0xB6	; 182
     534:	d0 40       	sbci	r29, 0x00	; 0
     536:	ca 54       	subi	r28, 0x4A	; 74
     538:	df 4f       	sbci	r29, 0xFF	; 255
     53a:	68 81       	ld	r22, Y
     53c:	79 81       	ldd	r23, Y+1	; 0x01
     53e:	8a 81       	ldd	r24, Y+2	; 0x02
     540:	9b 81       	ldd	r25, Y+3	; 0x03
     542:	c6 5b       	subi	r28, 0xB6	; 182
     544:	d0 40       	sbci	r29, 0x00	; 0
     546:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     54a:	c2 50       	subi	r28, 0x02	; 2
     54c:	df 4f       	sbci	r29, 0xFF	; 255
     54e:	68 83       	st	Y, r22
     550:	79 83       	std	Y+1, r23	; 0x01
     552:	8a 83       	std	Y+2, r24	; 0x02
     554:	9b 83       	std	Y+3, r25	; 0x03
     556:	ce 5f       	subi	r28, 0xFE	; 254
     558:	d0 40       	sbci	r29, 0x00	; 0
     55a:	c2 50       	subi	r28, 0x02	; 2
     55c:	df 4f       	sbci	r29, 0xFF	; 255
     55e:	a8 81       	ld	r26, Y
     560:	b9 81       	ldd	r27, Y+1	; 0x01
     562:	ce 5f       	subi	r28, 0xFE	; 254
     564:	d0 40       	sbci	r29, 0x00	; 0
     566:	bf a3       	std	Y+39, r27	; 0x27
     568:	ae a3       	std	Y+38, r26	; 0x26
		while(__ticks)
     56a:	10 c0       	rjmp	.+32     	; 0x58c <__FUSE_REGION_LENGTH__+0x18c>
     56c:	80 e9       	ldi	r24, 0x90	; 144
     56e:	91 e0       	ldi	r25, 0x01	; 1
     570:	99 a7       	std	Y+41, r25	; 0x29
     572:	88 a7       	std	Y+40, r24	; 0x28
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     574:	88 a5       	ldd	r24, Y+40	; 0x28
     576:	99 a5       	ldd	r25, Y+41	; 0x29
     578:	01 97       	sbiw	r24, 0x01	; 1
     57a:	f1 f7       	brne	.-4      	; 0x578 <__FUSE_REGION_LENGTH__+0x178>
     57c:	99 a7       	std	Y+41, r25	; 0x29
     57e:	88 a7       	std	Y+40, r24	; 0x28
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     580:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     582:	8e a1       	ldd	r24, Y+38	; 0x26
     584:	9f a1       	ldd	r25, Y+39	; 0x27
     586:	01 97       	sbiw	r24, 0x01	; 1
     588:	9f a3       	std	Y+39, r25	; 0x27
     58a:	8e a3       	std	Y+38, r24	; 0x26
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     58c:	8e a1       	ldd	r24, Y+38	; 0x26
     58e:	9f a1       	ldd	r25, Y+39	; 0x27
     590:	89 2b       	or	r24, r25
     592:	61 f7       	brne	.-40     	; 0x56c <__FUSE_REGION_LENGTH__+0x16c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
		}
		return;
     594:	21 c0       	rjmp	.+66     	; 0x5d8 <__FUSE_REGION_LENGTH__+0x1d8>
	}
	else
		__ticks = (uint16_t)__tmp;
     596:	6a a1       	ldd	r22, Y+34	; 0x22
     598:	7b a1       	ldd	r23, Y+35	; 0x23
     59a:	8c a1       	ldd	r24, Y+36	; 0x24
     59c:	9d a1       	ldd	r25, Y+37	; 0x25
     59e:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     5a2:	ce 5f       	subi	r28, 0xFE	; 254
     5a4:	de 4f       	sbci	r29, 0xFE	; 254
     5a6:	68 83       	st	Y, r22
     5a8:	79 83       	std	Y+1, r23	; 0x01
     5aa:	8a 83       	std	Y+2, r24	; 0x02
     5ac:	9b 83       	std	Y+3, r25	; 0x03
     5ae:	c2 50       	subi	r28, 0x02	; 2
     5b0:	d1 40       	sbci	r29, 0x01	; 1
     5b2:	ce 5f       	subi	r28, 0xFE	; 254
     5b4:	de 4f       	sbci	r29, 0xFE	; 254
     5b6:	e8 81       	ld	r30, Y
     5b8:	f9 81       	ldd	r31, Y+1	; 0x01
     5ba:	c2 50       	subi	r28, 0x02	; 2
     5bc:	d1 40       	sbci	r29, 0x01	; 1
     5be:	ff a3       	std	Y+39, r31	; 0x27
     5c0:	ee a3       	std	Y+38, r30	; 0x26
     5c2:	8e a1       	ldd	r24, Y+38	; 0x26
     5c4:	9f a1       	ldd	r25, Y+39	; 0x27
     5c6:	9b a7       	std	Y+43, r25	; 0x2b
     5c8:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     5ca:	8a a5       	ldd	r24, Y+42	; 0x2a
     5cc:	9b a5       	ldd	r25, Y+43	; 0x2b
     5ce:	01 97       	sbiw	r24, 0x01	; 1
     5d0:	f1 f7       	brne	.-4      	; 0x5ce <__FUSE_REGION_LENGTH__+0x1ce>
     5d2:	9b a7       	std	Y+43, r25	; 0x2b
     5d4:	8a a7       	std	Y+42, r24	; 0x2a
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     5d6:	00 00       	nop
			break;

			/*shifting left every 250 ms  */
			case 0b11111101:
			PORTB=0;
			for(i=0;i<8;i++)
     5d8:	89 81       	ldd	r24, Y+1	; 0x01
     5da:	8f 5f       	subi	r24, 0xFF	; 255
     5dc:	89 83       	std	Y+1, r24	; 0x01
     5de:	89 81       	ldd	r24, Y+1	; 0x01
     5e0:	88 30       	cpi	r24, 0x08	; 8
     5e2:	08 f4       	brcc	.+2      	; 0x5e6 <__FUSE_REGION_LENGTH__+0x1e6>
     5e4:	2e cf       	rjmp	.-420    	; 0x442 <__FUSE_REGION_LENGTH__+0x42>
			{
				PORTB+=(1<<i);
				_delay_ms(100);
			}

			break;
     5e6:	0c 94 f2 0a 	jmp	0x15e4	; 0x15e4 <__stack+0xd85>

			/*shifting right every 250 ms*/
			case 0b11111011:
			PORTB=0;
     5ea:	88 e3       	ldi	r24, 0x38	; 56
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	dc 01       	movw	r26, r24
     5f0:	1c 92       	st	X, r1
			for(i=8;i>0;i--)
     5f2:	88 e0       	ldi	r24, 0x08	; 8
     5f4:	89 83       	std	Y+1, r24	; 0x01
     5f6:	ce c0       	rjmp	.+412    	; 0x794 <__FUSE_REGION_LENGTH__+0x394>
			{
				PORTB+=(1>>i);
     5f8:	88 e3       	ldi	r24, 0x38	; 56
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	fc 01       	movw	r30, r24
     5fe:	40 81       	ld	r20, Z
     600:	89 81       	ldd	r24, Y+1	; 0x01
     602:	28 2f       	mov	r18, r24
     604:	30 e0       	ldi	r19, 0x00	; 0
     606:	81 e0       	ldi	r24, 0x01	; 1
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	02 c0       	rjmp	.+4      	; 0x610 <__FUSE_REGION_LENGTH__+0x210>
     60c:	95 95       	asr	r25
     60e:	87 95       	ror	r24
     610:	2a 95       	dec	r18
     612:	e2 f7       	brpl	.-8      	; 0x60c <__FUSE_REGION_LENGTH__+0x20c>
     614:	28 2f       	mov	r18, r24
     616:	88 e3       	ldi	r24, 0x38	; 56
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	24 0f       	add	r18, r20
     61c:	dc 01       	movw	r26, r24
     61e:	2c 93       	st	X, r18
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	a8 ec       	ldi	r26, 0xC8	; 200
     626:	b2 e4       	ldi	r27, 0x42	; 66
     628:	8c a7       	std	Y+44, r24	; 0x2c
     62a:	9d a7       	std	Y+45, r25	; 0x2d
     62c:	ae a7       	std	Y+46, r26	; 0x2e
     62e:	bf a7       	std	Y+47, r27	; 0x2f

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	4a e7       	ldi	r20, 0x7A	; 122
     636:	55 e4       	ldi	r21, 0x45	; 69
     638:	6c a5       	ldd	r22, Y+44	; 0x2c
     63a:	7d a5       	ldd	r23, Y+45	; 0x2d
     63c:	8e a5       	ldd	r24, Y+46	; 0x2e
     63e:	9f a5       	ldd	r25, Y+47	; 0x2f
     640:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     644:	ca 5f       	subi	r28, 0xFA	; 250
     646:	de 4f       	sbci	r29, 0xFE	; 254
     648:	68 83       	st	Y, r22
     64a:	79 83       	std	Y+1, r23	; 0x01
     64c:	8a 83       	std	Y+2, r24	; 0x02
     64e:	9b 83       	std	Y+3, r25	; 0x03
     650:	c6 50       	subi	r28, 0x06	; 6
     652:	d1 40       	sbci	r29, 0x01	; 1
     654:	ca 5f       	subi	r28, 0xFA	; 250
     656:	de 4f       	sbci	r29, 0xFE	; 254
     658:	88 81       	ld	r24, Y
     65a:	99 81       	ldd	r25, Y+1	; 0x01
     65c:	aa 81       	ldd	r26, Y+2	; 0x02
     65e:	bb 81       	ldd	r27, Y+3	; 0x03
     660:	c6 50       	subi	r28, 0x06	; 6
     662:	d1 40       	sbci	r29, 0x01	; 1
     664:	88 ab       	std	Y+48, r24	; 0x30
     666:	99 ab       	std	Y+49, r25	; 0x31
     668:	aa ab       	std	Y+50, r26	; 0x32
     66a:	bb ab       	std	Y+51, r27	; 0x33
	if (__tmp < 1.0)
     66c:	20 e0       	ldi	r18, 0x00	; 0
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	40 e8       	ldi	r20, 0x80	; 128
     672:	5f e3       	ldi	r21, 0x3F	; 63
     674:	68 a9       	ldd	r22, Y+48	; 0x30
     676:	79 a9       	ldd	r23, Y+49	; 0x31
     678:	8a a9       	ldd	r24, Y+50	; 0x32
     67a:	9b a9       	ldd	r25, Y+51	; 0x33
     67c:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__cmpsf2>
     680:	88 23       	and	r24, r24
     682:	2c f4       	brge	.+10     	; 0x68e <__FUSE_REGION_LENGTH__+0x28e>
		__ticks = 1;
     684:	81 e0       	ldi	r24, 0x01	; 1
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	9d ab       	std	Y+53, r25	; 0x35
     68a:	8c ab       	std	Y+52, r24	; 0x34
     68c:	75 c0       	rjmp	.+234    	; 0x778 <__FUSE_REGION_LENGTH__+0x378>
	else if (__tmp > 65535)
     68e:	20 e0       	ldi	r18, 0x00	; 0
     690:	3f ef       	ldi	r19, 0xFF	; 255
     692:	4f e7       	ldi	r20, 0x7F	; 127
     694:	57 e4       	ldi	r21, 0x47	; 71
     696:	68 a9       	ldd	r22, Y+48	; 0x30
     698:	79 a9       	ldd	r23, Y+49	; 0x31
     69a:	8a a9       	ldd	r24, Y+50	; 0x32
     69c:	9b a9       	ldd	r25, Y+51	; 0x33
     69e:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__gesf2>
     6a2:	18 16       	cp	r1, r24
     6a4:	0c f0       	brlt	.+2      	; 0x6a8 <__FUSE_REGION_LENGTH__+0x2a8>
     6a6:	52 c0       	rjmp	.+164    	; 0x74c <__FUSE_REGION_LENGTH__+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	40 e2       	ldi	r20, 0x20	; 32
     6ae:	51 e4       	ldi	r21, 0x41	; 65
     6b0:	6c a5       	ldd	r22, Y+44	; 0x2c
     6b2:	7d a5       	ldd	r23, Y+45	; 0x2d
     6b4:	8e a5       	ldd	r24, Y+46	; 0x2e
     6b6:	9f a5       	ldd	r25, Y+47	; 0x2f
     6b8:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     6bc:	c6 5f       	subi	r28, 0xF6	; 246
     6be:	de 4f       	sbci	r29, 0xFE	; 254
     6c0:	68 83       	st	Y, r22
     6c2:	79 83       	std	Y+1, r23	; 0x01
     6c4:	8a 83       	std	Y+2, r24	; 0x02
     6c6:	9b 83       	std	Y+3, r25	; 0x03
     6c8:	ca 50       	subi	r28, 0x0A	; 10
     6ca:	d1 40       	sbci	r29, 0x01	; 1
     6cc:	c6 5f       	subi	r28, 0xF6	; 246
     6ce:	de 4f       	sbci	r29, 0xFE	; 254
     6d0:	88 81       	ld	r24, Y
     6d2:	99 81       	ldd	r25, Y+1	; 0x01
     6d4:	aa 81       	ldd	r26, Y+2	; 0x02
     6d6:	bb 81       	ldd	r27, Y+3	; 0x03
     6d8:	ca 50       	subi	r28, 0x0A	; 10
     6da:	d1 40       	sbci	r29, 0x01	; 1
     6dc:	c6 54       	subi	r28, 0x46	; 70
     6de:	df 4f       	sbci	r29, 0xFF	; 255
     6e0:	88 83       	st	Y, r24
     6e2:	99 83       	std	Y+1, r25	; 0x01
     6e4:	aa 83       	std	Y+2, r26	; 0x02
     6e6:	bb 83       	std	Y+3, r27	; 0x03
     6e8:	ca 5b       	subi	r28, 0xBA	; 186
     6ea:	d0 40       	sbci	r29, 0x00	; 0
     6ec:	c6 54       	subi	r28, 0x46	; 70
     6ee:	df 4f       	sbci	r29, 0xFF	; 255
     6f0:	68 81       	ld	r22, Y
     6f2:	79 81       	ldd	r23, Y+1	; 0x01
     6f4:	8a 81       	ldd	r24, Y+2	; 0x02
     6f6:	9b 81       	ldd	r25, Y+3	; 0x03
     6f8:	ca 5b       	subi	r28, 0xBA	; 186
     6fa:	d0 40       	sbci	r29, 0x00	; 0
     6fc:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     700:	c2 5f       	subi	r28, 0xF2	; 242
     702:	de 4f       	sbci	r29, 0xFE	; 254
     704:	68 83       	st	Y, r22
     706:	79 83       	std	Y+1, r23	; 0x01
     708:	8a 83       	std	Y+2, r24	; 0x02
     70a:	9b 83       	std	Y+3, r25	; 0x03
     70c:	ce 50       	subi	r28, 0x0E	; 14
     70e:	d1 40       	sbci	r29, 0x01	; 1
     710:	c2 5f       	subi	r28, 0xF2	; 242
     712:	de 4f       	sbci	r29, 0xFE	; 254
     714:	a8 81       	ld	r26, Y
     716:	b9 81       	ldd	r27, Y+1	; 0x01
     718:	ce 50       	subi	r28, 0x0E	; 14
     71a:	d1 40       	sbci	r29, 0x01	; 1
     71c:	bd ab       	std	Y+53, r27	; 0x35
     71e:	ac ab       	std	Y+52, r26	; 0x34
		while(__ticks)
     720:	10 c0       	rjmp	.+32     	; 0x742 <__FUSE_REGION_LENGTH__+0x342>
     722:	80 e9       	ldi	r24, 0x90	; 144
     724:	91 e0       	ldi	r25, 0x01	; 1
     726:	9f ab       	std	Y+55, r25	; 0x37
     728:	8e ab       	std	Y+54, r24	; 0x36
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     72a:	8e a9       	ldd	r24, Y+54	; 0x36
     72c:	9f a9       	ldd	r25, Y+55	; 0x37
     72e:	01 97       	sbiw	r24, 0x01	; 1
     730:	f1 f7       	brne	.-4      	; 0x72e <__FUSE_REGION_LENGTH__+0x32e>
     732:	9f ab       	std	Y+55, r25	; 0x37
     734:	8e ab       	std	Y+54, r24	; 0x36
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     736:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     738:	8c a9       	ldd	r24, Y+52	; 0x34
     73a:	9d a9       	ldd	r25, Y+53	; 0x35
     73c:	01 97       	sbiw	r24, 0x01	; 1
     73e:	9d ab       	std	Y+53, r25	; 0x35
     740:	8c ab       	std	Y+52, r24	; 0x34
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     742:	8c a9       	ldd	r24, Y+52	; 0x34
     744:	9d a9       	ldd	r25, Y+53	; 0x35
     746:	89 2b       	or	r24, r25
     748:	61 f7       	brne	.-40     	; 0x722 <__FUSE_REGION_LENGTH__+0x322>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
		}
		return;
     74a:	21 c0       	rjmp	.+66     	; 0x78e <__FUSE_REGION_LENGTH__+0x38e>
	}
	else
		__ticks = (uint16_t)__tmp;
     74c:	68 a9       	ldd	r22, Y+48	; 0x30
     74e:	79 a9       	ldd	r23, Y+49	; 0x31
     750:	8a a9       	ldd	r24, Y+50	; 0x32
     752:	9b a9       	ldd	r25, Y+51	; 0x33
     754:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     758:	ce 5e       	subi	r28, 0xEE	; 238
     75a:	de 4f       	sbci	r29, 0xFE	; 254
     75c:	68 83       	st	Y, r22
     75e:	79 83       	std	Y+1, r23	; 0x01
     760:	8a 83       	std	Y+2, r24	; 0x02
     762:	9b 83       	std	Y+3, r25	; 0x03
     764:	c2 51       	subi	r28, 0x12	; 18
     766:	d1 40       	sbci	r29, 0x01	; 1
     768:	ce 5e       	subi	r28, 0xEE	; 238
     76a:	de 4f       	sbci	r29, 0xFE	; 254
     76c:	e8 81       	ld	r30, Y
     76e:	f9 81       	ldd	r31, Y+1	; 0x01
     770:	c2 51       	subi	r28, 0x12	; 18
     772:	d1 40       	sbci	r29, 0x01	; 1
     774:	fd ab       	std	Y+53, r31	; 0x35
     776:	ec ab       	std	Y+52, r30	; 0x34
     778:	8c a9       	ldd	r24, Y+52	; 0x34
     77a:	9d a9       	ldd	r25, Y+53	; 0x35
     77c:	99 af       	std	Y+57, r25	; 0x39
     77e:	88 af       	std	Y+56, r24	; 0x38
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     780:	88 ad       	ldd	r24, Y+56	; 0x38
     782:	99 ad       	ldd	r25, Y+57	; 0x39
     784:	01 97       	sbiw	r24, 0x01	; 1
     786:	f1 f7       	brne	.-4      	; 0x784 <__FUSE_REGION_LENGTH__+0x384>
     788:	99 af       	std	Y+57, r25	; 0x39
     78a:	88 af       	std	Y+56, r24	; 0x38
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     78c:	00 00       	nop
			break;

			/*shifting right every 250 ms*/
			case 0b11111011:
			PORTB=0;
			for(i=8;i>0;i--)
     78e:	89 81       	ldd	r24, Y+1	; 0x01
     790:	81 50       	subi	r24, 0x01	; 1
     792:	89 83       	std	Y+1, r24	; 0x01
     794:	89 81       	ldd	r24, Y+1	; 0x01
     796:	88 23       	and	r24, r24
     798:	09 f0       	breq	.+2      	; 0x79c <__FUSE_REGION_LENGTH__+0x39c>
     79a:	2e cf       	rjmp	.-420    	; 0x5f8 <__FUSE_REGION_LENGTH__+0x1f8>
			{
				PORTB+=(1>>i);
				_delay_ms(100);
			}

			break;
     79c:	23 c7       	rjmp	.+3654   	; 0x15e4 <__stack+0xd85>



			/*2-leds converging every 300 ms*/
			case 0b11110111:
			PORTB=0;
     79e:	88 e3       	ldi	r24, 0x38	; 56
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	dc 01       	movw	r26, r24
     7a4:	1c 92       	st	X, r1
			u16 ConvergingArr[]={0b00011000,0b00111100,0b01111110,0b11111111};
     7a6:	ce 01       	movw	r24, r28
     7a8:	82 57       	subi	r24, 0x72	; 114
     7aa:	9f 4f       	sbci	r25, 0xFF	; 255
     7ac:	28 e0       	ldi	r18, 0x08	; 8
     7ae:	e0 e6       	ldi	r30, 0x60	; 96
     7b0:	f0 e0       	ldi	r31, 0x00	; 0
     7b2:	dc 01       	movw	r26, r24
     7b4:	01 90       	ld	r0, Z+
     7b6:	0d 92       	st	X+, r0
     7b8:	2a 95       	dec	r18
     7ba:	e1 f7       	brne	.-8      	; 0x7b4 <__FUSE_REGION_LENGTH__+0x3b4>
			for(i=0;i<4;i++)
     7bc:	19 82       	std	Y+1, r1	; 0x01
     7be:	14 c0       	rjmp	.+40     	; 0x7e8 <__FUSE_REGION_LENGTH__+0x3e8>
			{
				PORTB=ConvergingArr[i];
     7c0:	89 81       	ldd	r24, Y+1	; 0x01
     7c2:	88 2f       	mov	r24, r24
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	9e 01       	movw	r18, r28
     7c8:	22 57       	subi	r18, 0x72	; 114
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	88 0f       	add	r24, r24
     7ce:	99 1f       	adc	r25, r25
     7d0:	82 0f       	add	r24, r18
     7d2:	93 1f       	adc	r25, r19
     7d4:	fc 01       	movw	r30, r24
     7d6:	20 81       	ld	r18, Z
     7d8:	31 81       	ldd	r19, Z+1	; 0x01
     7da:	88 e3       	ldi	r24, 0x38	; 56
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	dc 01       	movw	r26, r24
     7e0:	2c 93       	st	X, r18

			/*2-leds converging every 300 ms*/
			case 0b11110111:
			PORTB=0;
			u16 ConvergingArr[]={0b00011000,0b00111100,0b01111110,0b11111111};
			for(i=0;i<4;i++)
     7e2:	89 81       	ldd	r24, Y+1	; 0x01
     7e4:	8f 5f       	subi	r24, 0xFF	; 255
     7e6:	89 83       	std	Y+1, r24	; 0x01
     7e8:	89 81       	ldd	r24, Y+1	; 0x01
     7ea:	84 30       	cpi	r24, 0x04	; 4
     7ec:	48 f3       	brcs	.-46     	; 0x7c0 <__FUSE_REGION_LENGTH__+0x3c0>
			{
				PORTB=ConvergingArr[i];
			}

			break;
     7ee:	fa c6       	rjmp	.+3572   	; 0x15e4 <__stack+0xd85>


			/*2-leds Diverging every 300 ms*/
			case 0b11101111:
			PORTB=0;
     7f0:	88 e3       	ldi	r24, 0x38	; 56
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	fc 01       	movw	r30, r24
     7f6:	10 82       	st	Z, r1
			u16 DivergingArr[]={0b11111111,0b01111110,0b00111100,0b00011000};
     7f8:	ce 01       	movw	r24, r28
     7fa:	8a 56       	subi	r24, 0x6A	; 106
     7fc:	9f 4f       	sbci	r25, 0xFF	; 255
     7fe:	28 e0       	ldi	r18, 0x08	; 8
     800:	e8 e6       	ldi	r30, 0x68	; 104
     802:	f0 e0       	ldi	r31, 0x00	; 0
     804:	dc 01       	movw	r26, r24
     806:	01 90       	ld	r0, Z+
     808:	0d 92       	st	X+, r0
     80a:	2a 95       	dec	r18
     80c:	e1 f7       	brne	.-8      	; 0x806 <__FUSE_REGION_LENGTH__+0x406>
			for(i=0;i<4;i++)
     80e:	19 82       	std	Y+1, r1	; 0x01
     810:	0d c1       	rjmp	.+538    	; 0xa2c <__stack+0x1cd>
			{
				PORTB=DivergingArr[i];
     812:	89 81       	ldd	r24, Y+1	; 0x01
     814:	88 2f       	mov	r24, r24
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	9e 01       	movw	r18, r28
     81a:	2a 56       	subi	r18, 0x6A	; 106
     81c:	3f 4f       	sbci	r19, 0xFF	; 255
     81e:	88 0f       	add	r24, r24
     820:	99 1f       	adc	r25, r25
     822:	82 0f       	add	r24, r18
     824:	93 1f       	adc	r25, r19
     826:	dc 01       	movw	r26, r24
     828:	2d 91       	ld	r18, X+
     82a:	3c 91       	ld	r19, X
     82c:	88 e3       	ldi	r24, 0x38	; 56
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	fc 01       	movw	r30, r24
     832:	20 83       	st	Z, r18
     834:	80 e0       	ldi	r24, 0x00	; 0
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	a8 ec       	ldi	r26, 0xC8	; 200
     83a:	b2 e4       	ldi	r27, 0x42	; 66
     83c:	8a af       	std	Y+58, r24	; 0x3a
     83e:	9b af       	std	Y+59, r25	; 0x3b
     840:	ac af       	std	Y+60, r26	; 0x3c
     842:	bd af       	std	Y+61, r27	; 0x3d

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     844:	8e 01       	movw	r16, r28
     846:	02 5c       	subi	r16, 0xC2	; 194
     848:	1f 4f       	sbci	r17, 0xFF	; 255
     84a:	20 e0       	ldi	r18, 0x00	; 0
     84c:	30 e0       	ldi	r19, 0x00	; 0
     84e:	4a e7       	ldi	r20, 0x7A	; 122
     850:	55 e4       	ldi	r21, 0x45	; 69
     852:	6a ad       	ldd	r22, Y+58	; 0x3a
     854:	7b ad       	ldd	r23, Y+59	; 0x3b
     856:	8c ad       	ldd	r24, Y+60	; 0x3c
     858:	9d ad       	ldd	r25, Y+61	; 0x3d
     85a:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     85e:	ca 5e       	subi	r28, 0xEA	; 234
     860:	de 4f       	sbci	r29, 0xFE	; 254
     862:	68 83       	st	Y, r22
     864:	79 83       	std	Y+1, r23	; 0x01
     866:	8a 83       	std	Y+2, r24	; 0x02
     868:	9b 83       	std	Y+3, r25	; 0x03
     86a:	c6 51       	subi	r28, 0x16	; 22
     86c:	d1 40       	sbci	r29, 0x01	; 1
     86e:	ca 5e       	subi	r28, 0xEA	; 234
     870:	de 4f       	sbci	r29, 0xFE	; 254
     872:	88 81       	ld	r24, Y
     874:	99 81       	ldd	r25, Y+1	; 0x01
     876:	aa 81       	ldd	r26, Y+2	; 0x02
     878:	bb 81       	ldd	r27, Y+3	; 0x03
     87a:	c6 51       	subi	r28, 0x16	; 22
     87c:	d1 40       	sbci	r29, 0x01	; 1
     87e:	f8 01       	movw	r30, r16
     880:	80 83       	st	Z, r24
     882:	91 83       	std	Z+1, r25	; 0x01
     884:	a2 83       	std	Z+2, r26	; 0x02
     886:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     888:	ce 01       	movw	r24, r28
     88a:	ce 96       	adiw	r24, 0x3e	; 62
     88c:	20 e0       	ldi	r18, 0x00	; 0
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	40 e8       	ldi	r20, 0x80	; 128
     892:	5f e3       	ldi	r21, 0x3F	; 63
     894:	dc 01       	movw	r26, r24
     896:	6d 91       	ld	r22, X+
     898:	7d 91       	ld	r23, X+
     89a:	8d 91       	ld	r24, X+
     89c:	9c 91       	ld	r25, X
     89e:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__cmpsf2>
     8a2:	88 23       	and	r24, r24
     8a4:	4c f4       	brge	.+18     	; 0x8b8 <__stack+0x59>
		__ticks = 1;
     8a6:	ce 01       	movw	r24, r28
     8a8:	8e 5b       	subi	r24, 0xBE	; 190
     8aa:	9f 4f       	sbci	r25, 0xFF	; 255
     8ac:	21 e0       	ldi	r18, 0x01	; 1
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	fc 01       	movw	r30, r24
     8b2:	31 83       	std	Z+1, r19	; 0x01
     8b4:	20 83       	st	Z, r18
     8b6:	9c c0       	rjmp	.+312    	; 0x9f0 <__stack+0x191>
	else if (__tmp > 65535)
     8b8:	ce 01       	movw	r24, r28
     8ba:	ce 96       	adiw	r24, 0x3e	; 62
     8bc:	20 e0       	ldi	r18, 0x00	; 0
     8be:	3f ef       	ldi	r19, 0xFF	; 255
     8c0:	4f e7       	ldi	r20, 0x7F	; 127
     8c2:	57 e4       	ldi	r21, 0x47	; 71
     8c4:	dc 01       	movw	r26, r24
     8c6:	6d 91       	ld	r22, X+
     8c8:	7d 91       	ld	r23, X+
     8ca:	8d 91       	ld	r24, X+
     8cc:	9c 91       	ld	r25, X
     8ce:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__gesf2>
     8d2:	18 16       	cp	r1, r24
     8d4:	0c f0       	brlt	.+2      	; 0x8d8 <__stack+0x79>
     8d6:	6f c0       	rjmp	.+222    	; 0x9b6 <__stack+0x157>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8d8:	20 e0       	ldi	r18, 0x00	; 0
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	40 e2       	ldi	r20, 0x20	; 32
     8de:	51 e4       	ldi	r21, 0x41	; 65
     8e0:	6a ad       	ldd	r22, Y+58	; 0x3a
     8e2:	7b ad       	ldd	r23, Y+59	; 0x3b
     8e4:	8c ad       	ldd	r24, Y+60	; 0x3c
     8e6:	9d ad       	ldd	r25, Y+61	; 0x3d
     8e8:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     8ec:	c6 5e       	subi	r28, 0xE6	; 230
     8ee:	de 4f       	sbci	r29, 0xFE	; 254
     8f0:	68 83       	st	Y, r22
     8f2:	79 83       	std	Y+1, r23	; 0x01
     8f4:	8a 83       	std	Y+2, r24	; 0x02
     8f6:	9b 83       	std	Y+3, r25	; 0x03
     8f8:	ca 51       	subi	r28, 0x1A	; 26
     8fa:	d1 40       	sbci	r29, 0x01	; 1
     8fc:	c6 5e       	subi	r28, 0xE6	; 230
     8fe:	de 4f       	sbci	r29, 0xFE	; 254
     900:	88 81       	ld	r24, Y
     902:	99 81       	ldd	r25, Y+1	; 0x01
     904:	aa 81       	ldd	r26, Y+2	; 0x02
     906:	bb 81       	ldd	r27, Y+3	; 0x03
     908:	ca 51       	subi	r28, 0x1A	; 26
     90a:	d1 40       	sbci	r29, 0x01	; 1
     90c:	c2 54       	subi	r28, 0x42	; 66
     90e:	df 4f       	sbci	r29, 0xFF	; 255
     910:	88 83       	st	Y, r24
     912:	99 83       	std	Y+1, r25	; 0x01
     914:	aa 83       	std	Y+2, r26	; 0x02
     916:	bb 83       	std	Y+3, r27	; 0x03
     918:	ce 5b       	subi	r28, 0xBE	; 190
     91a:	d0 40       	sbci	r29, 0x00	; 0
     91c:	8e 01       	movw	r16, r28
     91e:	0e 5b       	subi	r16, 0xBE	; 190
     920:	1f 4f       	sbci	r17, 0xFF	; 255
     922:	c2 54       	subi	r28, 0x42	; 66
     924:	df 4f       	sbci	r29, 0xFF	; 255
     926:	68 81       	ld	r22, Y
     928:	79 81       	ldd	r23, Y+1	; 0x01
     92a:	8a 81       	ldd	r24, Y+2	; 0x02
     92c:	9b 81       	ldd	r25, Y+3	; 0x03
     92e:	ce 5b       	subi	r28, 0xBE	; 190
     930:	d0 40       	sbci	r29, 0x00	; 0
     932:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     936:	c2 5e       	subi	r28, 0xE2	; 226
     938:	de 4f       	sbci	r29, 0xFE	; 254
     93a:	68 83       	st	Y, r22
     93c:	79 83       	std	Y+1, r23	; 0x01
     93e:	8a 83       	std	Y+2, r24	; 0x02
     940:	9b 83       	std	Y+3, r25	; 0x03
     942:	ce 51       	subi	r28, 0x1E	; 30
     944:	d1 40       	sbci	r29, 0x01	; 1
     946:	c2 5e       	subi	r28, 0xE2	; 226
     948:	de 4f       	sbci	r29, 0xFE	; 254
     94a:	e8 81       	ld	r30, Y
     94c:	f9 81       	ldd	r31, Y+1	; 0x01
     94e:	ce 51       	subi	r28, 0x1E	; 30
     950:	d1 40       	sbci	r29, 0x01	; 1
     952:	d8 01       	movw	r26, r16
     954:	ed 93       	st	X+, r30
     956:	fc 93       	st	X, r31
		while(__ticks)
     958:	25 c0       	rjmp	.+74     	; 0x9a4 <__stack+0x145>
     95a:	ce 01       	movw	r24, r28
     95c:	8c 5b       	subi	r24, 0xBC	; 188
     95e:	9f 4f       	sbci	r25, 0xFF	; 255
     960:	20 e9       	ldi	r18, 0x90	; 144
     962:	31 e0       	ldi	r19, 0x01	; 1
     964:	dc 01       	movw	r26, r24
     966:	2d 93       	st	X+, r18
     968:	3c 93       	st	X, r19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     96a:	ce 01       	movw	r24, r28
     96c:	8c 5b       	subi	r24, 0xBC	; 188
     96e:	9f 4f       	sbci	r25, 0xFF	; 255
     970:	fc 01       	movw	r30, r24
     972:	80 81       	ld	r24, Z
     974:	91 81       	ldd	r25, Z+1	; 0x01
     976:	01 97       	sbiw	r24, 0x01	; 1
     978:	f1 f7       	brne	.-4      	; 0x976 <__stack+0x117>
     97a:	9e 01       	movw	r18, r28
     97c:	2c 5b       	subi	r18, 0xBC	; 188
     97e:	3f 4f       	sbci	r19, 0xFF	; 255
     980:	d9 01       	movw	r26, r18
     982:	8d 93       	st	X+, r24
     984:	9c 93       	st	X, r25
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     986:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     988:	ce 01       	movw	r24, r28
     98a:	8e 5b       	subi	r24, 0xBE	; 190
     98c:	9f 4f       	sbci	r25, 0xFF	; 255
     98e:	9e 01       	movw	r18, r28
     990:	2e 5b       	subi	r18, 0xBE	; 190
     992:	3f 4f       	sbci	r19, 0xFF	; 255
     994:	f9 01       	movw	r30, r18
     996:	20 81       	ld	r18, Z
     998:	31 81       	ldd	r19, Z+1	; 0x01
     99a:	21 50       	subi	r18, 0x01	; 1
     99c:	31 09       	sbc	r19, r1
     99e:	dc 01       	movw	r26, r24
     9a0:	2d 93       	st	X+, r18
     9a2:	3c 93       	st	X, r19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9a4:	ce 01       	movw	r24, r28
     9a6:	8e 5b       	subi	r24, 0xBE	; 190
     9a8:	9f 4f       	sbci	r25, 0xFF	; 255
     9aa:	fc 01       	movw	r30, r24
     9ac:	80 81       	ld	r24, Z
     9ae:	91 81       	ldd	r25, Z+1	; 0x01
     9b0:	89 2b       	or	r24, r25
     9b2:	99 f6       	brne	.-90     	; 0x95a <__stack+0xfb>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
		}
		return;
     9b4:	38 c0       	rjmp	.+112    	; 0xa26 <__stack+0x1c7>
	}
	else
		__ticks = (uint16_t)__tmp;
     9b6:	8e 01       	movw	r16, r28
     9b8:	0e 5b       	subi	r16, 0xBE	; 190
     9ba:	1f 4f       	sbci	r17, 0xFF	; 255
     9bc:	ce 01       	movw	r24, r28
     9be:	ce 96       	adiw	r24, 0x3e	; 62
     9c0:	dc 01       	movw	r26, r24
     9c2:	6d 91       	ld	r22, X+
     9c4:	7d 91       	ld	r23, X+
     9c6:	8d 91       	ld	r24, X+
     9c8:	9c 91       	ld	r25, X
     9ca:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     9ce:	ce 5d       	subi	r28, 0xDE	; 222
     9d0:	de 4f       	sbci	r29, 0xFE	; 254
     9d2:	68 83       	st	Y, r22
     9d4:	79 83       	std	Y+1, r23	; 0x01
     9d6:	8a 83       	std	Y+2, r24	; 0x02
     9d8:	9b 83       	std	Y+3, r25	; 0x03
     9da:	c2 52       	subi	r28, 0x22	; 34
     9dc:	d1 40       	sbci	r29, 0x01	; 1
     9de:	ce 5d       	subi	r28, 0xDE	; 222
     9e0:	de 4f       	sbci	r29, 0xFE	; 254
     9e2:	48 81       	ld	r20, Y
     9e4:	59 81       	ldd	r21, Y+1	; 0x01
     9e6:	c2 52       	subi	r28, 0x22	; 34
     9e8:	d1 40       	sbci	r29, 0x01	; 1
     9ea:	f8 01       	movw	r30, r16
     9ec:	51 83       	std	Z+1, r21	; 0x01
     9ee:	40 83       	st	Z, r20
     9f0:	ce 01       	movw	r24, r28
     9f2:	8a 5b       	subi	r24, 0xBA	; 186
     9f4:	9f 4f       	sbci	r25, 0xFF	; 255
     9f6:	9e 01       	movw	r18, r28
     9f8:	2e 5b       	subi	r18, 0xBE	; 190
     9fa:	3f 4f       	sbci	r19, 0xFF	; 255
     9fc:	d9 01       	movw	r26, r18
     9fe:	2d 91       	ld	r18, X+
     a00:	3c 91       	ld	r19, X
     a02:	fc 01       	movw	r30, r24
     a04:	31 83       	std	Z+1, r19	; 0x01
     a06:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     a08:	ce 01       	movw	r24, r28
     a0a:	8a 5b       	subi	r24, 0xBA	; 186
     a0c:	9f 4f       	sbci	r25, 0xFF	; 255
     a0e:	dc 01       	movw	r26, r24
     a10:	8d 91       	ld	r24, X+
     a12:	9c 91       	ld	r25, X
     a14:	01 97       	sbiw	r24, 0x01	; 1
     a16:	f1 f7       	brne	.-4      	; 0xa14 <__stack+0x1b5>
     a18:	9e 01       	movw	r18, r28
     a1a:	2a 5b       	subi	r18, 0xBA	; 186
     a1c:	3f 4f       	sbci	r19, 0xFF	; 255
     a1e:	f9 01       	movw	r30, r18
     a20:	91 83       	std	Z+1, r25	; 0x01
     a22:	80 83       	st	Z, r24
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     a24:	00 00       	nop

			/*2-leds Diverging every 300 ms*/
			case 0b11101111:
			PORTB=0;
			u16 DivergingArr[]={0b11111111,0b01111110,0b00111100,0b00011000};
			for(i=0;i<4;i++)
     a26:	89 81       	ldd	r24, Y+1	; 0x01
     a28:	8f 5f       	subi	r24, 0xFF	; 255
     a2a:	89 83       	std	Y+1, r24	; 0x01
     a2c:	89 81       	ldd	r24, Y+1	; 0x01
     a2e:	84 30       	cpi	r24, 0x04	; 4
     a30:	08 f4       	brcc	.+2      	; 0xa34 <__stack+0x1d5>
     a32:	ef ce       	rjmp	.-546    	; 0x812 <__FUSE_REGION_LENGTH__+0x412>
				_delay_ms(100);
			}



			break;
     a34:	d7 c5       	rjmp	.+2990   	; 0x15e4 <__stack+0xd85>


			/*Ping Pong effect every 250 ms*/
			case 0b11011111:

			PORTB=0;
     a36:	88 e3       	ldi	r24, 0x38	; 56
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	dc 01       	movw	r26, r24
     a3c:	1c 92       	st	X, r1
			for(i=0;i<8;i++)
     a3e:	19 82       	std	Y+1, r1	; 0x01
     a40:	1b c1       	rjmp	.+566    	; 0xc78 <__stack+0x419>
			{
				PORTB=(1<<i);
     a42:	89 81       	ldd	r24, Y+1	; 0x01
     a44:	28 2f       	mov	r18, r24
     a46:	30 e0       	ldi	r19, 0x00	; 0
     a48:	81 e0       	ldi	r24, 0x01	; 1
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	fc 01       	movw	r30, r24
     a4e:	02 c0       	rjmp	.+4      	; 0xa54 <__stack+0x1f5>
     a50:	ee 0f       	add	r30, r30
     a52:	ff 1f       	adc	r31, r31
     a54:	2a 95       	dec	r18
     a56:	e2 f7       	brpl	.-8      	; 0xa50 <__stack+0x1f1>
     a58:	9f 01       	movw	r18, r30
     a5a:	88 e3       	ldi	r24, 0x38	; 56
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	dc 01       	movw	r26, r24
     a60:	2c 93       	st	X, r18
     a62:	9e 01       	movw	r18, r28
     a64:	28 5b       	subi	r18, 0xB8	; 184
     a66:	3f 4f       	sbci	r19, 0xFF	; 255
     a68:	80 e0       	ldi	r24, 0x00	; 0
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	a8 ec       	ldi	r26, 0xC8	; 200
     a6e:	b2 e4       	ldi	r27, 0x42	; 66
     a70:	f9 01       	movw	r30, r18
     a72:	80 83       	st	Z, r24
     a74:	91 83       	std	Z+1, r25	; 0x01
     a76:	a2 83       	std	Z+2, r26	; 0x02
     a78:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     a7a:	8e 01       	movw	r16, r28
     a7c:	04 5b       	subi	r16, 0xB4	; 180
     a7e:	1f 4f       	sbci	r17, 0xFF	; 255
     a80:	ce 01       	movw	r24, r28
     a82:	88 5b       	subi	r24, 0xB8	; 184
     a84:	9f 4f       	sbci	r25, 0xFF	; 255
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	4a e7       	ldi	r20, 0x7A	; 122
     a8c:	55 e4       	ldi	r21, 0x45	; 69
     a8e:	dc 01       	movw	r26, r24
     a90:	6d 91       	ld	r22, X+
     a92:	7d 91       	ld	r23, X+
     a94:	8d 91       	ld	r24, X+
     a96:	9c 91       	ld	r25, X
     a98:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     a9c:	ca 5d       	subi	r28, 0xDA	; 218
     a9e:	de 4f       	sbci	r29, 0xFE	; 254
     aa0:	68 83       	st	Y, r22
     aa2:	79 83       	std	Y+1, r23	; 0x01
     aa4:	8a 83       	std	Y+2, r24	; 0x02
     aa6:	9b 83       	std	Y+3, r25	; 0x03
     aa8:	c6 52       	subi	r28, 0x26	; 38
     aaa:	d1 40       	sbci	r29, 0x01	; 1
     aac:	ca 5d       	subi	r28, 0xDA	; 218
     aae:	de 4f       	sbci	r29, 0xFE	; 254
     ab0:	88 81       	ld	r24, Y
     ab2:	99 81       	ldd	r25, Y+1	; 0x01
     ab4:	aa 81       	ldd	r26, Y+2	; 0x02
     ab6:	bb 81       	ldd	r27, Y+3	; 0x03
     ab8:	c6 52       	subi	r28, 0x26	; 38
     aba:	d1 40       	sbci	r29, 0x01	; 1
     abc:	f8 01       	movw	r30, r16
     abe:	80 83       	st	Z, r24
     ac0:	91 83       	std	Z+1, r25	; 0x01
     ac2:	a2 83       	std	Z+2, r26	; 0x02
     ac4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ac6:	ce 01       	movw	r24, r28
     ac8:	84 5b       	subi	r24, 0xB4	; 180
     aca:	9f 4f       	sbci	r25, 0xFF	; 255
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	40 e8       	ldi	r20, 0x80	; 128
     ad2:	5f e3       	ldi	r21, 0x3F	; 63
     ad4:	dc 01       	movw	r26, r24
     ad6:	6d 91       	ld	r22, X+
     ad8:	7d 91       	ld	r23, X+
     ada:	8d 91       	ld	r24, X+
     adc:	9c 91       	ld	r25, X
     ade:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__cmpsf2>
     ae2:	88 23       	and	r24, r24
     ae4:	4c f4       	brge	.+18     	; 0xaf8 <__stack+0x299>
		__ticks = 1;
     ae6:	ce 01       	movw	r24, r28
     ae8:	80 5b       	subi	r24, 0xB0	; 176
     aea:	9f 4f       	sbci	r25, 0xFF	; 255
     aec:	21 e0       	ldi	r18, 0x01	; 1
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	fc 01       	movw	r30, r24
     af2:	31 83       	std	Z+1, r19	; 0x01
     af4:	20 83       	st	Z, r18
     af6:	a2 c0       	rjmp	.+324    	; 0xc3c <__stack+0x3dd>
	else if (__tmp > 65535)
     af8:	ce 01       	movw	r24, r28
     afa:	84 5b       	subi	r24, 0xB4	; 180
     afc:	9f 4f       	sbci	r25, 0xFF	; 255
     afe:	20 e0       	ldi	r18, 0x00	; 0
     b00:	3f ef       	ldi	r19, 0xFF	; 255
     b02:	4f e7       	ldi	r20, 0x7F	; 127
     b04:	57 e4       	ldi	r21, 0x47	; 71
     b06:	dc 01       	movw	r26, r24
     b08:	6d 91       	ld	r22, X+
     b0a:	7d 91       	ld	r23, X+
     b0c:	8d 91       	ld	r24, X+
     b0e:	9c 91       	ld	r25, X
     b10:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__gesf2>
     b14:	18 16       	cp	r1, r24
     b16:	0c f0       	brlt	.+2      	; 0xb1a <__stack+0x2bb>
     b18:	73 c0       	rjmp	.+230    	; 0xc00 <__stack+0x3a1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b1a:	ce 01       	movw	r24, r28
     b1c:	88 5b       	subi	r24, 0xB8	; 184
     b1e:	9f 4f       	sbci	r25, 0xFF	; 255
     b20:	20 e0       	ldi	r18, 0x00	; 0
     b22:	30 e0       	ldi	r19, 0x00	; 0
     b24:	40 e2       	ldi	r20, 0x20	; 32
     b26:	51 e4       	ldi	r21, 0x41	; 65
     b28:	fc 01       	movw	r30, r24
     b2a:	60 81       	ld	r22, Z
     b2c:	71 81       	ldd	r23, Z+1	; 0x01
     b2e:	82 81       	ldd	r24, Z+2	; 0x02
     b30:	93 81       	ldd	r25, Z+3	; 0x03
     b32:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     b36:	c6 5d       	subi	r28, 0xD6	; 214
     b38:	de 4f       	sbci	r29, 0xFE	; 254
     b3a:	68 83       	st	Y, r22
     b3c:	79 83       	std	Y+1, r23	; 0x01
     b3e:	8a 83       	std	Y+2, r24	; 0x02
     b40:	9b 83       	std	Y+3, r25	; 0x03
     b42:	ca 52       	subi	r28, 0x2A	; 42
     b44:	d1 40       	sbci	r29, 0x01	; 1
     b46:	c6 5d       	subi	r28, 0xD6	; 214
     b48:	de 4f       	sbci	r29, 0xFE	; 254
     b4a:	88 81       	ld	r24, Y
     b4c:	99 81       	ldd	r25, Y+1	; 0x01
     b4e:	aa 81       	ldd	r26, Y+2	; 0x02
     b50:	bb 81       	ldd	r27, Y+3	; 0x03
     b52:	ca 52       	subi	r28, 0x2A	; 42
     b54:	d1 40       	sbci	r29, 0x01	; 1
     b56:	ce 53       	subi	r28, 0x3E	; 62
     b58:	df 4f       	sbci	r29, 0xFF	; 255
     b5a:	88 83       	st	Y, r24
     b5c:	99 83       	std	Y+1, r25	; 0x01
     b5e:	aa 83       	std	Y+2, r26	; 0x02
     b60:	bb 83       	std	Y+3, r27	; 0x03
     b62:	c2 5c       	subi	r28, 0xC2	; 194
     b64:	d0 40       	sbci	r29, 0x00	; 0
     b66:	8e 01       	movw	r16, r28
     b68:	00 5b       	subi	r16, 0xB0	; 176
     b6a:	1f 4f       	sbci	r17, 0xFF	; 255
     b6c:	ce 53       	subi	r28, 0x3E	; 62
     b6e:	df 4f       	sbci	r29, 0xFF	; 255
     b70:	68 81       	ld	r22, Y
     b72:	79 81       	ldd	r23, Y+1	; 0x01
     b74:	8a 81       	ldd	r24, Y+2	; 0x02
     b76:	9b 81       	ldd	r25, Y+3	; 0x03
     b78:	c2 5c       	subi	r28, 0xC2	; 194
     b7a:	d0 40       	sbci	r29, 0x00	; 0
     b7c:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     b80:	c2 5d       	subi	r28, 0xD2	; 210
     b82:	de 4f       	sbci	r29, 0xFE	; 254
     b84:	68 83       	st	Y, r22
     b86:	79 83       	std	Y+1, r23	; 0x01
     b88:	8a 83       	std	Y+2, r24	; 0x02
     b8a:	9b 83       	std	Y+3, r25	; 0x03
     b8c:	ce 52       	subi	r28, 0x2E	; 46
     b8e:	d1 40       	sbci	r29, 0x01	; 1
     b90:	c2 5d       	subi	r28, 0xD2	; 210
     b92:	de 4f       	sbci	r29, 0xFE	; 254
     b94:	e8 81       	ld	r30, Y
     b96:	f9 81       	ldd	r31, Y+1	; 0x01
     b98:	ce 52       	subi	r28, 0x2E	; 46
     b9a:	d1 40       	sbci	r29, 0x01	; 1
     b9c:	d8 01       	movw	r26, r16
     b9e:	ed 93       	st	X+, r30
     ba0:	fc 93       	st	X, r31
		while(__ticks)
     ba2:	25 c0       	rjmp	.+74     	; 0xbee <__stack+0x38f>
     ba4:	ce 01       	movw	r24, r28
     ba6:	8e 5a       	subi	r24, 0xAE	; 174
     ba8:	9f 4f       	sbci	r25, 0xFF	; 255
     baa:	20 e9       	ldi	r18, 0x90	; 144
     bac:	31 e0       	ldi	r19, 0x01	; 1
     bae:	dc 01       	movw	r26, r24
     bb0:	2d 93       	st	X+, r18
     bb2:	3c 93       	st	X, r19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     bb4:	ce 01       	movw	r24, r28
     bb6:	8e 5a       	subi	r24, 0xAE	; 174
     bb8:	9f 4f       	sbci	r25, 0xFF	; 255
     bba:	fc 01       	movw	r30, r24
     bbc:	80 81       	ld	r24, Z
     bbe:	91 81       	ldd	r25, Z+1	; 0x01
     bc0:	01 97       	sbiw	r24, 0x01	; 1
     bc2:	f1 f7       	brne	.-4      	; 0xbc0 <__stack+0x361>
     bc4:	9e 01       	movw	r18, r28
     bc6:	2e 5a       	subi	r18, 0xAE	; 174
     bc8:	3f 4f       	sbci	r19, 0xFF	; 255
     bca:	d9 01       	movw	r26, r18
     bcc:	8d 93       	st	X+, r24
     bce:	9c 93       	st	X, r25
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     bd0:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bd2:	ce 01       	movw	r24, r28
     bd4:	80 5b       	subi	r24, 0xB0	; 176
     bd6:	9f 4f       	sbci	r25, 0xFF	; 255
     bd8:	9e 01       	movw	r18, r28
     bda:	20 5b       	subi	r18, 0xB0	; 176
     bdc:	3f 4f       	sbci	r19, 0xFF	; 255
     bde:	f9 01       	movw	r30, r18
     be0:	20 81       	ld	r18, Z
     be2:	31 81       	ldd	r19, Z+1	; 0x01
     be4:	21 50       	subi	r18, 0x01	; 1
     be6:	31 09       	sbc	r19, r1
     be8:	dc 01       	movw	r26, r24
     bea:	2d 93       	st	X+, r18
     bec:	3c 93       	st	X, r19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bee:	ce 01       	movw	r24, r28
     bf0:	80 5b       	subi	r24, 0xB0	; 176
     bf2:	9f 4f       	sbci	r25, 0xFF	; 255
     bf4:	fc 01       	movw	r30, r24
     bf6:	80 81       	ld	r24, Z
     bf8:	91 81       	ldd	r25, Z+1	; 0x01
     bfa:	89 2b       	or	r24, r25
     bfc:	99 f6       	brne	.-90     	; 0xba4 <__stack+0x345>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
		}
		return;
     bfe:	39 c0       	rjmp	.+114    	; 0xc72 <__stack+0x413>
	}
	else
		__ticks = (uint16_t)__tmp;
     c00:	8e 01       	movw	r16, r28
     c02:	00 5b       	subi	r16, 0xB0	; 176
     c04:	1f 4f       	sbci	r17, 0xFF	; 255
     c06:	ce 01       	movw	r24, r28
     c08:	84 5b       	subi	r24, 0xB4	; 180
     c0a:	9f 4f       	sbci	r25, 0xFF	; 255
     c0c:	dc 01       	movw	r26, r24
     c0e:	6d 91       	ld	r22, X+
     c10:	7d 91       	ld	r23, X+
     c12:	8d 91       	ld	r24, X+
     c14:	9c 91       	ld	r25, X
     c16:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     c1a:	ce 5c       	subi	r28, 0xCE	; 206
     c1c:	de 4f       	sbci	r29, 0xFE	; 254
     c1e:	68 83       	st	Y, r22
     c20:	79 83       	std	Y+1, r23	; 0x01
     c22:	8a 83       	std	Y+2, r24	; 0x02
     c24:	9b 83       	std	Y+3, r25	; 0x03
     c26:	c2 53       	subi	r28, 0x32	; 50
     c28:	d1 40       	sbci	r29, 0x01	; 1
     c2a:	ce 5c       	subi	r28, 0xCE	; 206
     c2c:	de 4f       	sbci	r29, 0xFE	; 254
     c2e:	48 81       	ld	r20, Y
     c30:	59 81       	ldd	r21, Y+1	; 0x01
     c32:	c2 53       	subi	r28, 0x32	; 50
     c34:	d1 40       	sbci	r29, 0x01	; 1
     c36:	f8 01       	movw	r30, r16
     c38:	51 83       	std	Z+1, r21	; 0x01
     c3a:	40 83       	st	Z, r20
     c3c:	ce 01       	movw	r24, r28
     c3e:	8c 5a       	subi	r24, 0xAC	; 172
     c40:	9f 4f       	sbci	r25, 0xFF	; 255
     c42:	9e 01       	movw	r18, r28
     c44:	20 5b       	subi	r18, 0xB0	; 176
     c46:	3f 4f       	sbci	r19, 0xFF	; 255
     c48:	d9 01       	movw	r26, r18
     c4a:	2d 91       	ld	r18, X+
     c4c:	3c 91       	ld	r19, X
     c4e:	fc 01       	movw	r30, r24
     c50:	31 83       	std	Z+1, r19	; 0x01
     c52:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c54:	ce 01       	movw	r24, r28
     c56:	8c 5a       	subi	r24, 0xAC	; 172
     c58:	9f 4f       	sbci	r25, 0xFF	; 255
     c5a:	dc 01       	movw	r26, r24
     c5c:	8d 91       	ld	r24, X+
     c5e:	9c 91       	ld	r25, X
     c60:	01 97       	sbiw	r24, 0x01	; 1
     c62:	f1 f7       	brne	.-4      	; 0xc60 <__stack+0x401>
     c64:	9e 01       	movw	r18, r28
     c66:	2c 5a       	subi	r18, 0xAC	; 172
     c68:	3f 4f       	sbci	r19, 0xFF	; 255
     c6a:	f9 01       	movw	r30, r18
     c6c:	91 83       	std	Z+1, r25	; 0x01
     c6e:	80 83       	st	Z, r24
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     c70:	00 00       	nop

			/*Ping Pong effect every 250 ms*/
			case 0b11011111:

			PORTB=0;
			for(i=0;i<8;i++)
     c72:	89 81       	ldd	r24, Y+1	; 0x01
     c74:	8f 5f       	subi	r24, 0xFF	; 255
     c76:	89 83       	std	Y+1, r24	; 0x01
     c78:	89 81       	ldd	r24, Y+1	; 0x01
     c7a:	88 30       	cpi	r24, 0x08	; 8
     c7c:	08 f4       	brcc	.+2      	; 0xc80 <__stack+0x421>
     c7e:	e1 ce       	rjmp	.-574    	; 0xa42 <__stack+0x1e3>
			{
				PORTB=(1<<i);
				_delay_ms(100);
			}

			for(i=7;i>0;i--)
     c80:	87 e0       	ldi	r24, 0x07	; 7
     c82:	89 83       	std	Y+1, r24	; 0x01
     c84:	1b c1       	rjmp	.+566    	; 0xebc <__stack+0x65d>
			{
				PORTB=(1>>i);
     c86:	89 81       	ldd	r24, Y+1	; 0x01
     c88:	28 2f       	mov	r18, r24
     c8a:	30 e0       	ldi	r19, 0x00	; 0
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	ac 01       	movw	r20, r24
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <__stack+0x439>
     c94:	55 95       	asr	r21
     c96:	47 95       	ror	r20
     c98:	2a 95       	dec	r18
     c9a:	e2 f7       	brpl	.-8      	; 0xc94 <__stack+0x435>
     c9c:	9a 01       	movw	r18, r20
     c9e:	88 e3       	ldi	r24, 0x38	; 56
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	dc 01       	movw	r26, r24
     ca4:	2c 93       	st	X, r18
     ca6:	9e 01       	movw	r18, r28
     ca8:	2a 5a       	subi	r18, 0xAA	; 170
     caa:	3f 4f       	sbci	r19, 0xFF	; 255
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	aa ef       	ldi	r26, 0xFA	; 250
     cb2:	b3 e4       	ldi	r27, 0x43	; 67
     cb4:	f9 01       	movw	r30, r18
     cb6:	80 83       	st	Z, r24
     cb8:	91 83       	std	Z+1, r25	; 0x01
     cba:	a2 83       	std	Z+2, r26	; 0x02
     cbc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     cbe:	8e 01       	movw	r16, r28
     cc0:	06 5a       	subi	r16, 0xA6	; 166
     cc2:	1f 4f       	sbci	r17, 0xFF	; 255
     cc4:	ce 01       	movw	r24, r28
     cc6:	8a 5a       	subi	r24, 0xAA	; 170
     cc8:	9f 4f       	sbci	r25, 0xFF	; 255
     cca:	20 e0       	ldi	r18, 0x00	; 0
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	4a e7       	ldi	r20, 0x7A	; 122
     cd0:	55 e4       	ldi	r21, 0x45	; 69
     cd2:	dc 01       	movw	r26, r24
     cd4:	6d 91       	ld	r22, X+
     cd6:	7d 91       	ld	r23, X+
     cd8:	8d 91       	ld	r24, X+
     cda:	9c 91       	ld	r25, X
     cdc:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     ce0:	ca 5c       	subi	r28, 0xCA	; 202
     ce2:	de 4f       	sbci	r29, 0xFE	; 254
     ce4:	68 83       	st	Y, r22
     ce6:	79 83       	std	Y+1, r23	; 0x01
     ce8:	8a 83       	std	Y+2, r24	; 0x02
     cea:	9b 83       	std	Y+3, r25	; 0x03
     cec:	c6 53       	subi	r28, 0x36	; 54
     cee:	d1 40       	sbci	r29, 0x01	; 1
     cf0:	ca 5c       	subi	r28, 0xCA	; 202
     cf2:	de 4f       	sbci	r29, 0xFE	; 254
     cf4:	88 81       	ld	r24, Y
     cf6:	99 81       	ldd	r25, Y+1	; 0x01
     cf8:	aa 81       	ldd	r26, Y+2	; 0x02
     cfa:	bb 81       	ldd	r27, Y+3	; 0x03
     cfc:	c6 53       	subi	r28, 0x36	; 54
     cfe:	d1 40       	sbci	r29, 0x01	; 1
     d00:	f8 01       	movw	r30, r16
     d02:	80 83       	st	Z, r24
     d04:	91 83       	std	Z+1, r25	; 0x01
     d06:	a2 83       	std	Z+2, r26	; 0x02
     d08:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d0a:	ce 01       	movw	r24, r28
     d0c:	86 5a       	subi	r24, 0xA6	; 166
     d0e:	9f 4f       	sbci	r25, 0xFF	; 255
     d10:	20 e0       	ldi	r18, 0x00	; 0
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	40 e8       	ldi	r20, 0x80	; 128
     d16:	5f e3       	ldi	r21, 0x3F	; 63
     d18:	dc 01       	movw	r26, r24
     d1a:	6d 91       	ld	r22, X+
     d1c:	7d 91       	ld	r23, X+
     d1e:	8d 91       	ld	r24, X+
     d20:	9c 91       	ld	r25, X
     d22:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__cmpsf2>
     d26:	88 23       	and	r24, r24
     d28:	4c f4       	brge	.+18     	; 0xd3c <__stack+0x4dd>
		__ticks = 1;
     d2a:	ce 01       	movw	r24, r28
     d2c:	82 5a       	subi	r24, 0xA2	; 162
     d2e:	9f 4f       	sbci	r25, 0xFF	; 255
     d30:	21 e0       	ldi	r18, 0x01	; 1
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	fc 01       	movw	r30, r24
     d36:	31 83       	std	Z+1, r19	; 0x01
     d38:	20 83       	st	Z, r18
     d3a:	a2 c0       	rjmp	.+324    	; 0xe80 <__stack+0x621>
	else if (__tmp > 65535)
     d3c:	ce 01       	movw	r24, r28
     d3e:	86 5a       	subi	r24, 0xA6	; 166
     d40:	9f 4f       	sbci	r25, 0xFF	; 255
     d42:	20 e0       	ldi	r18, 0x00	; 0
     d44:	3f ef       	ldi	r19, 0xFF	; 255
     d46:	4f e7       	ldi	r20, 0x7F	; 127
     d48:	57 e4       	ldi	r21, 0x47	; 71
     d4a:	dc 01       	movw	r26, r24
     d4c:	6d 91       	ld	r22, X+
     d4e:	7d 91       	ld	r23, X+
     d50:	8d 91       	ld	r24, X+
     d52:	9c 91       	ld	r25, X
     d54:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__gesf2>
     d58:	18 16       	cp	r1, r24
     d5a:	0c f0       	brlt	.+2      	; 0xd5e <__stack+0x4ff>
     d5c:	73 c0       	rjmp	.+230    	; 0xe44 <__stack+0x5e5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d5e:	ce 01       	movw	r24, r28
     d60:	8a 5a       	subi	r24, 0xAA	; 170
     d62:	9f 4f       	sbci	r25, 0xFF	; 255
     d64:	20 e0       	ldi	r18, 0x00	; 0
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	40 e2       	ldi	r20, 0x20	; 32
     d6a:	51 e4       	ldi	r21, 0x41	; 65
     d6c:	fc 01       	movw	r30, r24
     d6e:	60 81       	ld	r22, Z
     d70:	71 81       	ldd	r23, Z+1	; 0x01
     d72:	82 81       	ldd	r24, Z+2	; 0x02
     d74:	93 81       	ldd	r25, Z+3	; 0x03
     d76:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     d7a:	c6 5c       	subi	r28, 0xC6	; 198
     d7c:	de 4f       	sbci	r29, 0xFE	; 254
     d7e:	68 83       	st	Y, r22
     d80:	79 83       	std	Y+1, r23	; 0x01
     d82:	8a 83       	std	Y+2, r24	; 0x02
     d84:	9b 83       	std	Y+3, r25	; 0x03
     d86:	ca 53       	subi	r28, 0x3A	; 58
     d88:	d1 40       	sbci	r29, 0x01	; 1
     d8a:	c6 5c       	subi	r28, 0xC6	; 198
     d8c:	de 4f       	sbci	r29, 0xFE	; 254
     d8e:	88 81       	ld	r24, Y
     d90:	99 81       	ldd	r25, Y+1	; 0x01
     d92:	aa 81       	ldd	r26, Y+2	; 0x02
     d94:	bb 81       	ldd	r27, Y+3	; 0x03
     d96:	ca 53       	subi	r28, 0x3A	; 58
     d98:	d1 40       	sbci	r29, 0x01	; 1
     d9a:	ca 53       	subi	r28, 0x3A	; 58
     d9c:	df 4f       	sbci	r29, 0xFF	; 255
     d9e:	88 83       	st	Y, r24
     da0:	99 83       	std	Y+1, r25	; 0x01
     da2:	aa 83       	std	Y+2, r26	; 0x02
     da4:	bb 83       	std	Y+3, r27	; 0x03
     da6:	c6 5c       	subi	r28, 0xC6	; 198
     da8:	d0 40       	sbci	r29, 0x00	; 0
     daa:	8e 01       	movw	r16, r28
     dac:	02 5a       	subi	r16, 0xA2	; 162
     dae:	1f 4f       	sbci	r17, 0xFF	; 255
     db0:	ca 53       	subi	r28, 0x3A	; 58
     db2:	df 4f       	sbci	r29, 0xFF	; 255
     db4:	68 81       	ld	r22, Y
     db6:	79 81       	ldd	r23, Y+1	; 0x01
     db8:	8a 81       	ldd	r24, Y+2	; 0x02
     dba:	9b 81       	ldd	r25, Y+3	; 0x03
     dbc:	c6 5c       	subi	r28, 0xC6	; 198
     dbe:	d0 40       	sbci	r29, 0x00	; 0
     dc0:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     dc4:	c2 5c       	subi	r28, 0xC2	; 194
     dc6:	de 4f       	sbci	r29, 0xFE	; 254
     dc8:	68 83       	st	Y, r22
     dca:	79 83       	std	Y+1, r23	; 0x01
     dcc:	8a 83       	std	Y+2, r24	; 0x02
     dce:	9b 83       	std	Y+3, r25	; 0x03
     dd0:	ce 53       	subi	r28, 0x3E	; 62
     dd2:	d1 40       	sbci	r29, 0x01	; 1
     dd4:	c2 5c       	subi	r28, 0xC2	; 194
     dd6:	de 4f       	sbci	r29, 0xFE	; 254
     dd8:	e8 81       	ld	r30, Y
     dda:	f9 81       	ldd	r31, Y+1	; 0x01
     ddc:	ce 53       	subi	r28, 0x3E	; 62
     dde:	d1 40       	sbci	r29, 0x01	; 1
     de0:	d8 01       	movw	r26, r16
     de2:	ed 93       	st	X+, r30
     de4:	fc 93       	st	X, r31
		while(__ticks)
     de6:	25 c0       	rjmp	.+74     	; 0xe32 <__stack+0x5d3>
     de8:	ce 01       	movw	r24, r28
     dea:	80 5a       	subi	r24, 0xA0	; 160
     dec:	9f 4f       	sbci	r25, 0xFF	; 255
     dee:	20 e9       	ldi	r18, 0x90	; 144
     df0:	31 e0       	ldi	r19, 0x01	; 1
     df2:	dc 01       	movw	r26, r24
     df4:	2d 93       	st	X+, r18
     df6:	3c 93       	st	X, r19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     df8:	ce 01       	movw	r24, r28
     dfa:	80 5a       	subi	r24, 0xA0	; 160
     dfc:	9f 4f       	sbci	r25, 0xFF	; 255
     dfe:	fc 01       	movw	r30, r24
     e00:	80 81       	ld	r24, Z
     e02:	91 81       	ldd	r25, Z+1	; 0x01
     e04:	01 97       	sbiw	r24, 0x01	; 1
     e06:	f1 f7       	brne	.-4      	; 0xe04 <__stack+0x5a5>
     e08:	9e 01       	movw	r18, r28
     e0a:	20 5a       	subi	r18, 0xA0	; 160
     e0c:	3f 4f       	sbci	r19, 0xFF	; 255
     e0e:	d9 01       	movw	r26, r18
     e10:	8d 93       	st	X+, r24
     e12:	9c 93       	st	X, r25
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     e14:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e16:	ce 01       	movw	r24, r28
     e18:	82 5a       	subi	r24, 0xA2	; 162
     e1a:	9f 4f       	sbci	r25, 0xFF	; 255
     e1c:	9e 01       	movw	r18, r28
     e1e:	22 5a       	subi	r18, 0xA2	; 162
     e20:	3f 4f       	sbci	r19, 0xFF	; 255
     e22:	f9 01       	movw	r30, r18
     e24:	20 81       	ld	r18, Z
     e26:	31 81       	ldd	r19, Z+1	; 0x01
     e28:	21 50       	subi	r18, 0x01	; 1
     e2a:	31 09       	sbc	r19, r1
     e2c:	dc 01       	movw	r26, r24
     e2e:	2d 93       	st	X+, r18
     e30:	3c 93       	st	X, r19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e32:	ce 01       	movw	r24, r28
     e34:	82 5a       	subi	r24, 0xA2	; 162
     e36:	9f 4f       	sbci	r25, 0xFF	; 255
     e38:	fc 01       	movw	r30, r24
     e3a:	80 81       	ld	r24, Z
     e3c:	91 81       	ldd	r25, Z+1	; 0x01
     e3e:	89 2b       	or	r24, r25
     e40:	99 f6       	brne	.-90     	; 0xde8 <__stack+0x589>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
		}
		return;
     e42:	39 c0       	rjmp	.+114    	; 0xeb6 <__stack+0x657>
	}
	else
		__ticks = (uint16_t)__tmp;
     e44:	8e 01       	movw	r16, r28
     e46:	02 5a       	subi	r16, 0xA2	; 162
     e48:	1f 4f       	sbci	r17, 0xFF	; 255
     e4a:	ce 01       	movw	r24, r28
     e4c:	86 5a       	subi	r24, 0xA6	; 166
     e4e:	9f 4f       	sbci	r25, 0xFF	; 255
     e50:	dc 01       	movw	r26, r24
     e52:	6d 91       	ld	r22, X+
     e54:	7d 91       	ld	r23, X+
     e56:	8d 91       	ld	r24, X+
     e58:	9c 91       	ld	r25, X
     e5a:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
     e5e:	ce 5b       	subi	r28, 0xBE	; 190
     e60:	de 4f       	sbci	r29, 0xFE	; 254
     e62:	68 83       	st	Y, r22
     e64:	79 83       	std	Y+1, r23	; 0x01
     e66:	8a 83       	std	Y+2, r24	; 0x02
     e68:	9b 83       	std	Y+3, r25	; 0x03
     e6a:	c2 54       	subi	r28, 0x42	; 66
     e6c:	d1 40       	sbci	r29, 0x01	; 1
     e6e:	ce 5b       	subi	r28, 0xBE	; 190
     e70:	de 4f       	sbci	r29, 0xFE	; 254
     e72:	48 81       	ld	r20, Y
     e74:	59 81       	ldd	r21, Y+1	; 0x01
     e76:	c2 54       	subi	r28, 0x42	; 66
     e78:	d1 40       	sbci	r29, 0x01	; 1
     e7a:	f8 01       	movw	r30, r16
     e7c:	51 83       	std	Z+1, r21	; 0x01
     e7e:	40 83       	st	Z, r20
     e80:	ce 01       	movw	r24, r28
     e82:	8e 59       	subi	r24, 0x9E	; 158
     e84:	9f 4f       	sbci	r25, 0xFF	; 255
     e86:	9e 01       	movw	r18, r28
     e88:	22 5a       	subi	r18, 0xA2	; 162
     e8a:	3f 4f       	sbci	r19, 0xFF	; 255
     e8c:	d9 01       	movw	r26, r18
     e8e:	2d 91       	ld	r18, X+
     e90:	3c 91       	ld	r19, X
     e92:	fc 01       	movw	r30, r24
     e94:	31 83       	std	Z+1, r19	; 0x01
     e96:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     e98:	ce 01       	movw	r24, r28
     e9a:	8e 59       	subi	r24, 0x9E	; 158
     e9c:	9f 4f       	sbci	r25, 0xFF	; 255
     e9e:	dc 01       	movw	r26, r24
     ea0:	8d 91       	ld	r24, X+
     ea2:	9c 91       	ld	r25, X
     ea4:	01 97       	sbiw	r24, 0x01	; 1
     ea6:	f1 f7       	brne	.-4      	; 0xea4 <__stack+0x645>
     ea8:	9e 01       	movw	r18, r28
     eaa:	2e 59       	subi	r18, 0x9E	; 158
     eac:	3f 4f       	sbci	r19, 0xFF	; 255
     eae:	f9 01       	movw	r30, r18
     eb0:	91 83       	std	Z+1, r25	; 0x01
     eb2:	80 83       	st	Z, r24
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     eb4:	00 00       	nop
			{
				PORTB=(1<<i);
				_delay_ms(100);
			}

			for(i=7;i>0;i--)
     eb6:	89 81       	ldd	r24, Y+1	; 0x01
     eb8:	81 50       	subi	r24, 0x01	; 1
     eba:	89 83       	std	Y+1, r24	; 0x01
     ebc:	89 81       	ldd	r24, Y+1	; 0x01
     ebe:	88 23       	and	r24, r24
     ec0:	09 f0       	breq	.+2      	; 0xec4 <__stack+0x665>
     ec2:	e1 ce       	rjmp	.-574    	; 0xc86 <__stack+0x427>
			{
				PORTB=(1>>i);
				_delay_ms(500);
			}

			break;
     ec4:	8f c3       	rjmp	.+1822   	; 0x15e4 <__stack+0xd85>


			/*incrementing (snake effect) every 300 ms*/
			case 0b10111111:
			PORTB=0;
     ec6:	88 e3       	ldi	r24, 0x38	; 56
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	dc 01       	movw	r26, r24
     ecc:	1c 92       	st	X, r1
			for(i=0;i<8;i++)
     ece:	19 82       	std	Y+1, r1	; 0x01
     ed0:	1f c1       	rjmp	.+574    	; 0x1110 <__stack+0x8b1>
			{
				PORTB+=(1<<i);
     ed2:	88 e3       	ldi	r24, 0x38	; 56
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	fc 01       	movw	r30, r24
     ed8:	40 81       	ld	r20, Z
     eda:	89 81       	ldd	r24, Y+1	; 0x01
     edc:	28 2f       	mov	r18, r24
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	81 e0       	ldi	r24, 0x01	; 1
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <__stack+0x68b>
     ee6:	88 0f       	add	r24, r24
     ee8:	99 1f       	adc	r25, r25
     eea:	2a 95       	dec	r18
     eec:	e2 f7       	brpl	.-8      	; 0xee6 <__stack+0x687>
     eee:	28 2f       	mov	r18, r24
     ef0:	88 e3       	ldi	r24, 0x38	; 56
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	24 0f       	add	r18, r20
     ef6:	dc 01       	movw	r26, r24
     ef8:	2c 93       	st	X, r18
     efa:	9e 01       	movw	r18, r28
     efc:	2c 59       	subi	r18, 0x9C	; 156
     efe:	3f 4f       	sbci	r19, 0xFF	; 255
     f00:	80 e0       	ldi	r24, 0x00	; 0
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	a6 e9       	ldi	r26, 0x96	; 150
     f06:	b3 e4       	ldi	r27, 0x43	; 67
     f08:	f9 01       	movw	r30, r18
     f0a:	80 83       	st	Z, r24
     f0c:	91 83       	std	Z+1, r25	; 0x01
     f0e:	a2 83       	std	Z+2, r26	; 0x02
     f10:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f12:	8e 01       	movw	r16, r28
     f14:	08 59       	subi	r16, 0x98	; 152
     f16:	1f 4f       	sbci	r17, 0xFF	; 255
     f18:	ce 01       	movw	r24, r28
     f1a:	8c 59       	subi	r24, 0x9C	; 156
     f1c:	9f 4f       	sbci	r25, 0xFF	; 255
     f1e:	20 e0       	ldi	r18, 0x00	; 0
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	4a e7       	ldi	r20, 0x7A	; 122
     f24:	55 e4       	ldi	r21, 0x45	; 69
     f26:	dc 01       	movw	r26, r24
     f28:	6d 91       	ld	r22, X+
     f2a:	7d 91       	ld	r23, X+
     f2c:	8d 91       	ld	r24, X+
     f2e:	9c 91       	ld	r25, X
     f30:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     f34:	ca 5b       	subi	r28, 0xBA	; 186
     f36:	de 4f       	sbci	r29, 0xFE	; 254
     f38:	68 83       	st	Y, r22
     f3a:	79 83       	std	Y+1, r23	; 0x01
     f3c:	8a 83       	std	Y+2, r24	; 0x02
     f3e:	9b 83       	std	Y+3, r25	; 0x03
     f40:	c6 54       	subi	r28, 0x46	; 70
     f42:	d1 40       	sbci	r29, 0x01	; 1
     f44:	ca 5b       	subi	r28, 0xBA	; 186
     f46:	de 4f       	sbci	r29, 0xFE	; 254
     f48:	88 81       	ld	r24, Y
     f4a:	99 81       	ldd	r25, Y+1	; 0x01
     f4c:	aa 81       	ldd	r26, Y+2	; 0x02
     f4e:	bb 81       	ldd	r27, Y+3	; 0x03
     f50:	c6 54       	subi	r28, 0x46	; 70
     f52:	d1 40       	sbci	r29, 0x01	; 1
     f54:	f8 01       	movw	r30, r16
     f56:	80 83       	st	Z, r24
     f58:	91 83       	std	Z+1, r25	; 0x01
     f5a:	a2 83       	std	Z+2, r26	; 0x02
     f5c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f5e:	ce 01       	movw	r24, r28
     f60:	88 59       	subi	r24, 0x98	; 152
     f62:	9f 4f       	sbci	r25, 0xFF	; 255
     f64:	20 e0       	ldi	r18, 0x00	; 0
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	40 e8       	ldi	r20, 0x80	; 128
     f6a:	5f e3       	ldi	r21, 0x3F	; 63
     f6c:	dc 01       	movw	r26, r24
     f6e:	6d 91       	ld	r22, X+
     f70:	7d 91       	ld	r23, X+
     f72:	8d 91       	ld	r24, X+
     f74:	9c 91       	ld	r25, X
     f76:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__cmpsf2>
     f7a:	88 23       	and	r24, r24
     f7c:	4c f4       	brge	.+18     	; 0xf90 <__stack+0x731>
		__ticks = 1;
     f7e:	ce 01       	movw	r24, r28
     f80:	84 59       	subi	r24, 0x94	; 148
     f82:	9f 4f       	sbci	r25, 0xFF	; 255
     f84:	21 e0       	ldi	r18, 0x01	; 1
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	fc 01       	movw	r30, r24
     f8a:	31 83       	std	Z+1, r19	; 0x01
     f8c:	20 83       	st	Z, r18
     f8e:	a2 c0       	rjmp	.+324    	; 0x10d4 <__stack+0x875>
	else if (__tmp > 65535)
     f90:	ce 01       	movw	r24, r28
     f92:	88 59       	subi	r24, 0x98	; 152
     f94:	9f 4f       	sbci	r25, 0xFF	; 255
     f96:	20 e0       	ldi	r18, 0x00	; 0
     f98:	3f ef       	ldi	r19, 0xFF	; 255
     f9a:	4f e7       	ldi	r20, 0x7F	; 127
     f9c:	57 e4       	ldi	r21, 0x47	; 71
     f9e:	dc 01       	movw	r26, r24
     fa0:	6d 91       	ld	r22, X+
     fa2:	7d 91       	ld	r23, X+
     fa4:	8d 91       	ld	r24, X+
     fa6:	9c 91       	ld	r25, X
     fa8:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__gesf2>
     fac:	18 16       	cp	r1, r24
     fae:	0c f0       	brlt	.+2      	; 0xfb2 <__stack+0x753>
     fb0:	73 c0       	rjmp	.+230    	; 0x1098 <__stack+0x839>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fb2:	ce 01       	movw	r24, r28
     fb4:	8c 59       	subi	r24, 0x9C	; 156
     fb6:	9f 4f       	sbci	r25, 0xFF	; 255
     fb8:	20 e0       	ldi	r18, 0x00	; 0
     fba:	30 e0       	ldi	r19, 0x00	; 0
     fbc:	40 e2       	ldi	r20, 0x20	; 32
     fbe:	51 e4       	ldi	r21, 0x41	; 65
     fc0:	fc 01       	movw	r30, r24
     fc2:	60 81       	ld	r22, Z
     fc4:	71 81       	ldd	r23, Z+1	; 0x01
     fc6:	82 81       	ldd	r24, Z+2	; 0x02
     fc8:	93 81       	ldd	r25, Z+3	; 0x03
     fca:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
     fce:	c6 5b       	subi	r28, 0xB6	; 182
     fd0:	de 4f       	sbci	r29, 0xFE	; 254
     fd2:	68 83       	st	Y, r22
     fd4:	79 83       	std	Y+1, r23	; 0x01
     fd6:	8a 83       	std	Y+2, r24	; 0x02
     fd8:	9b 83       	std	Y+3, r25	; 0x03
     fda:	ca 54       	subi	r28, 0x4A	; 74
     fdc:	d1 40       	sbci	r29, 0x01	; 1
     fde:	c6 5b       	subi	r28, 0xB6	; 182
     fe0:	de 4f       	sbci	r29, 0xFE	; 254
     fe2:	88 81       	ld	r24, Y
     fe4:	99 81       	ldd	r25, Y+1	; 0x01
     fe6:	aa 81       	ldd	r26, Y+2	; 0x02
     fe8:	bb 81       	ldd	r27, Y+3	; 0x03
     fea:	ca 54       	subi	r28, 0x4A	; 74
     fec:	d1 40       	sbci	r29, 0x01	; 1
     fee:	c6 53       	subi	r28, 0x36	; 54
     ff0:	df 4f       	sbci	r29, 0xFF	; 255
     ff2:	88 83       	st	Y, r24
     ff4:	99 83       	std	Y+1, r25	; 0x01
     ff6:	aa 83       	std	Y+2, r26	; 0x02
     ff8:	bb 83       	std	Y+3, r27	; 0x03
     ffa:	ca 5c       	subi	r28, 0xCA	; 202
     ffc:	d0 40       	sbci	r29, 0x00	; 0
     ffe:	8e 01       	movw	r16, r28
    1000:	04 59       	subi	r16, 0x94	; 148
    1002:	1f 4f       	sbci	r17, 0xFF	; 255
    1004:	c6 53       	subi	r28, 0x36	; 54
    1006:	df 4f       	sbci	r29, 0xFF	; 255
    1008:	68 81       	ld	r22, Y
    100a:	79 81       	ldd	r23, Y+1	; 0x01
    100c:	8a 81       	ldd	r24, Y+2	; 0x02
    100e:	9b 81       	ldd	r25, Y+3	; 0x03
    1010:	ca 5c       	subi	r28, 0xCA	; 202
    1012:	d0 40       	sbci	r29, 0x00	; 0
    1014:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
    1018:	c2 5b       	subi	r28, 0xB2	; 178
    101a:	de 4f       	sbci	r29, 0xFE	; 254
    101c:	68 83       	st	Y, r22
    101e:	79 83       	std	Y+1, r23	; 0x01
    1020:	8a 83       	std	Y+2, r24	; 0x02
    1022:	9b 83       	std	Y+3, r25	; 0x03
    1024:	ce 54       	subi	r28, 0x4E	; 78
    1026:	d1 40       	sbci	r29, 0x01	; 1
    1028:	c2 5b       	subi	r28, 0xB2	; 178
    102a:	de 4f       	sbci	r29, 0xFE	; 254
    102c:	e8 81       	ld	r30, Y
    102e:	f9 81       	ldd	r31, Y+1	; 0x01
    1030:	ce 54       	subi	r28, 0x4E	; 78
    1032:	d1 40       	sbci	r29, 0x01	; 1
    1034:	d8 01       	movw	r26, r16
    1036:	ed 93       	st	X+, r30
    1038:	fc 93       	st	X, r31
		while(__ticks)
    103a:	25 c0       	rjmp	.+74     	; 0x1086 <__stack+0x827>
    103c:	ce 01       	movw	r24, r28
    103e:	82 59       	subi	r24, 0x92	; 146
    1040:	9f 4f       	sbci	r25, 0xFF	; 255
    1042:	20 e9       	ldi	r18, 0x90	; 144
    1044:	31 e0       	ldi	r19, 0x01	; 1
    1046:	dc 01       	movw	r26, r24
    1048:	2d 93       	st	X+, r18
    104a:	3c 93       	st	X, r19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    104c:	ce 01       	movw	r24, r28
    104e:	82 59       	subi	r24, 0x92	; 146
    1050:	9f 4f       	sbci	r25, 0xFF	; 255
    1052:	fc 01       	movw	r30, r24
    1054:	80 81       	ld	r24, Z
    1056:	91 81       	ldd	r25, Z+1	; 0x01
    1058:	01 97       	sbiw	r24, 0x01	; 1
    105a:	f1 f7       	brne	.-4      	; 0x1058 <__stack+0x7f9>
    105c:	9e 01       	movw	r18, r28
    105e:	22 59       	subi	r18, 0x92	; 146
    1060:	3f 4f       	sbci	r19, 0xFF	; 255
    1062:	d9 01       	movw	r26, r18
    1064:	8d 93       	st	X+, r24
    1066:	9c 93       	st	X, r25
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
    1068:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    106a:	ce 01       	movw	r24, r28
    106c:	84 59       	subi	r24, 0x94	; 148
    106e:	9f 4f       	sbci	r25, 0xFF	; 255
    1070:	9e 01       	movw	r18, r28
    1072:	24 59       	subi	r18, 0x94	; 148
    1074:	3f 4f       	sbci	r19, 0xFF	; 255
    1076:	f9 01       	movw	r30, r18
    1078:	20 81       	ld	r18, Z
    107a:	31 81       	ldd	r19, Z+1	; 0x01
    107c:	21 50       	subi	r18, 0x01	; 1
    107e:	31 09       	sbc	r19, r1
    1080:	dc 01       	movw	r26, r24
    1082:	2d 93       	st	X+, r18
    1084:	3c 93       	st	X, r19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1086:	ce 01       	movw	r24, r28
    1088:	84 59       	subi	r24, 0x94	; 148
    108a:	9f 4f       	sbci	r25, 0xFF	; 255
    108c:	fc 01       	movw	r30, r24
    108e:	80 81       	ld	r24, Z
    1090:	91 81       	ldd	r25, Z+1	; 0x01
    1092:	89 2b       	or	r24, r25
    1094:	99 f6       	brne	.-90     	; 0x103c <__stack+0x7dd>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
		}
		return;
    1096:	39 c0       	rjmp	.+114    	; 0x110a <__stack+0x8ab>
	}
	else
		__ticks = (uint16_t)__tmp;
    1098:	8e 01       	movw	r16, r28
    109a:	04 59       	subi	r16, 0x94	; 148
    109c:	1f 4f       	sbci	r17, 0xFF	; 255
    109e:	ce 01       	movw	r24, r28
    10a0:	88 59       	subi	r24, 0x98	; 152
    10a2:	9f 4f       	sbci	r25, 0xFF	; 255
    10a4:	dc 01       	movw	r26, r24
    10a6:	6d 91       	ld	r22, X+
    10a8:	7d 91       	ld	r23, X+
    10aa:	8d 91       	ld	r24, X+
    10ac:	9c 91       	ld	r25, X
    10ae:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
    10b2:	ce 5a       	subi	r28, 0xAE	; 174
    10b4:	de 4f       	sbci	r29, 0xFE	; 254
    10b6:	68 83       	st	Y, r22
    10b8:	79 83       	std	Y+1, r23	; 0x01
    10ba:	8a 83       	std	Y+2, r24	; 0x02
    10bc:	9b 83       	std	Y+3, r25	; 0x03
    10be:	c2 55       	subi	r28, 0x52	; 82
    10c0:	d1 40       	sbci	r29, 0x01	; 1
    10c2:	ce 5a       	subi	r28, 0xAE	; 174
    10c4:	de 4f       	sbci	r29, 0xFE	; 254
    10c6:	48 81       	ld	r20, Y
    10c8:	59 81       	ldd	r21, Y+1	; 0x01
    10ca:	c2 55       	subi	r28, 0x52	; 82
    10cc:	d1 40       	sbci	r29, 0x01	; 1
    10ce:	f8 01       	movw	r30, r16
    10d0:	51 83       	std	Z+1, r21	; 0x01
    10d2:	40 83       	st	Z, r20
    10d4:	ce 01       	movw	r24, r28
    10d6:	80 59       	subi	r24, 0x90	; 144
    10d8:	9f 4f       	sbci	r25, 0xFF	; 255
    10da:	9e 01       	movw	r18, r28
    10dc:	24 59       	subi	r18, 0x94	; 148
    10de:	3f 4f       	sbci	r19, 0xFF	; 255
    10e0:	d9 01       	movw	r26, r18
    10e2:	2d 91       	ld	r18, X+
    10e4:	3c 91       	ld	r19, X
    10e6:	fc 01       	movw	r30, r24
    10e8:	31 83       	std	Z+1, r19	; 0x01
    10ea:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    10ec:	ce 01       	movw	r24, r28
    10ee:	80 59       	subi	r24, 0x90	; 144
    10f0:	9f 4f       	sbci	r25, 0xFF	; 255
    10f2:	dc 01       	movw	r26, r24
    10f4:	8d 91       	ld	r24, X+
    10f6:	9c 91       	ld	r25, X
    10f8:	01 97       	sbiw	r24, 0x01	; 1
    10fa:	f1 f7       	brne	.-4      	; 0x10f8 <__stack+0x899>
    10fc:	9e 01       	movw	r18, r28
    10fe:	20 59       	subi	r18, 0x90	; 144
    1100:	3f 4f       	sbci	r19, 0xFF	; 255
    1102:	f9 01       	movw	r30, r18
    1104:	91 83       	std	Z+1, r25	; 0x01
    1106:	80 83       	st	Z, r24
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
    1108:	00 00       	nop


			/*incrementing (snake effect) every 300 ms*/
			case 0b10111111:
			PORTB=0;
			for(i=0;i<8;i++)
    110a:	89 81       	ldd	r24, Y+1	; 0x01
    110c:	8f 5f       	subi	r24, 0xFF	; 255
    110e:	89 83       	std	Y+1, r24	; 0x01
    1110:	89 81       	ldd	r24, Y+1	; 0x01
    1112:	88 30       	cpi	r24, 0x08	; 8
    1114:	08 f4       	brcc	.+2      	; 0x1118 <__stack+0x8b9>
    1116:	dd ce       	rjmp	.-582    	; 0xed2 <__stack+0x673>
			{
				PORTB+=(1<<i);
				_delay_ms(300);
			}

			break;
    1118:	65 c2       	rjmp	.+1226   	; 0x15e4 <__stack+0xd85>


			/*2-leds converging/Diverging every 300 ms*/
			case 0b01111111:
			PORTB=0;
    111a:	88 e3       	ldi	r24, 0x38	; 56
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	dc 01       	movw	r26, r24
    1120:	1c 92       	st	X, r1
			u16 CConvergingArr[]={0b00011000,0b00111100,0b01111110,0b11111111};
    1122:	ce 01       	movw	r24, r28
    1124:	82 56       	subi	r24, 0x62	; 98
    1126:	9f 4f       	sbci	r25, 0xFF	; 255
    1128:	28 e0       	ldi	r18, 0x08	; 8
    112a:	e0 e6       	ldi	r30, 0x60	; 96
    112c:	f0 e0       	ldi	r31, 0x00	; 0
    112e:	dc 01       	movw	r26, r24
    1130:	01 90       	ld	r0, Z+
    1132:	0d 92       	st	X+, r0
    1134:	2a 95       	dec	r18
    1136:	e1 f7       	brne	.-8      	; 0x1130 <__stack+0x8d1>
			u16 CDivergingArr[]={0b11111111,0b01111110,0b00111100,0b00011000};
    1138:	ce 01       	movw	r24, r28
    113a:	8a 55       	subi	r24, 0x5A	; 90
    113c:	9f 4f       	sbci	r25, 0xFF	; 255
    113e:	28 e0       	ldi	r18, 0x08	; 8
    1140:	e8 e6       	ldi	r30, 0x68	; 104
    1142:	f0 e0       	ldi	r31, 0x00	; 0
    1144:	dc 01       	movw	r26, r24
    1146:	01 90       	ld	r0, Z+
    1148:	0d 92       	st	X+, r0
    114a:	2a 95       	dec	r18
    114c:	e1 f7       	brne	.-8      	; 0x1146 <__stack+0x8e7>
			for(i=0;i<4;i++)
    114e:	19 82       	std	Y+1, r1	; 0x01
    1150:	1c c1       	rjmp	.+568    	; 0x138a <__stack+0xb2b>
			{
				PORTB=CConvergingArr[i];
    1152:	89 81       	ldd	r24, Y+1	; 0x01
    1154:	88 2f       	mov	r24, r24
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	9e 01       	movw	r18, r28
    115a:	22 56       	subi	r18, 0x62	; 98
    115c:	3f 4f       	sbci	r19, 0xFF	; 255
    115e:	88 0f       	add	r24, r24
    1160:	99 1f       	adc	r25, r25
    1162:	82 0f       	add	r24, r18
    1164:	93 1f       	adc	r25, r19
    1166:	fc 01       	movw	r30, r24
    1168:	20 81       	ld	r18, Z
    116a:	31 81       	ldd	r19, Z+1	; 0x01
    116c:	88 e3       	ldi	r24, 0x38	; 56
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	dc 01       	movw	r26, r24
    1172:	2c 93       	st	X, r18
    1174:	9e 01       	movw	r18, r28
    1176:	2e 58       	subi	r18, 0x8E	; 142
    1178:	3f 4f       	sbci	r19, 0xFF	; 255
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	a8 ec       	ldi	r26, 0xC8	; 200
    1180:	b2 e4       	ldi	r27, 0x42	; 66
    1182:	f9 01       	movw	r30, r18
    1184:	80 83       	st	Z, r24
    1186:	91 83       	std	Z+1, r25	; 0x01
    1188:	a2 83       	std	Z+2, r26	; 0x02
    118a:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    118c:	8e 01       	movw	r16, r28
    118e:	0a 58       	subi	r16, 0x8A	; 138
    1190:	1f 4f       	sbci	r17, 0xFF	; 255
    1192:	ce 01       	movw	r24, r28
    1194:	8e 58       	subi	r24, 0x8E	; 142
    1196:	9f 4f       	sbci	r25, 0xFF	; 255
    1198:	20 e0       	ldi	r18, 0x00	; 0
    119a:	30 e0       	ldi	r19, 0x00	; 0
    119c:	4a e7       	ldi	r20, 0x7A	; 122
    119e:	55 e4       	ldi	r21, 0x45	; 69
    11a0:	dc 01       	movw	r26, r24
    11a2:	6d 91       	ld	r22, X+
    11a4:	7d 91       	ld	r23, X+
    11a6:	8d 91       	ld	r24, X+
    11a8:	9c 91       	ld	r25, X
    11aa:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
    11ae:	ca 5a       	subi	r28, 0xAA	; 170
    11b0:	de 4f       	sbci	r29, 0xFE	; 254
    11b2:	68 83       	st	Y, r22
    11b4:	79 83       	std	Y+1, r23	; 0x01
    11b6:	8a 83       	std	Y+2, r24	; 0x02
    11b8:	9b 83       	std	Y+3, r25	; 0x03
    11ba:	c6 55       	subi	r28, 0x56	; 86
    11bc:	d1 40       	sbci	r29, 0x01	; 1
    11be:	ca 5a       	subi	r28, 0xAA	; 170
    11c0:	de 4f       	sbci	r29, 0xFE	; 254
    11c2:	88 81       	ld	r24, Y
    11c4:	99 81       	ldd	r25, Y+1	; 0x01
    11c6:	aa 81       	ldd	r26, Y+2	; 0x02
    11c8:	bb 81       	ldd	r27, Y+3	; 0x03
    11ca:	c6 55       	subi	r28, 0x56	; 86
    11cc:	d1 40       	sbci	r29, 0x01	; 1
    11ce:	f8 01       	movw	r30, r16
    11d0:	80 83       	st	Z, r24
    11d2:	91 83       	std	Z+1, r25	; 0x01
    11d4:	a2 83       	std	Z+2, r26	; 0x02
    11d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    11d8:	ce 01       	movw	r24, r28
    11da:	8a 58       	subi	r24, 0x8A	; 138
    11dc:	9f 4f       	sbci	r25, 0xFF	; 255
    11de:	20 e0       	ldi	r18, 0x00	; 0
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	40 e8       	ldi	r20, 0x80	; 128
    11e4:	5f e3       	ldi	r21, 0x3F	; 63
    11e6:	dc 01       	movw	r26, r24
    11e8:	6d 91       	ld	r22, X+
    11ea:	7d 91       	ld	r23, X+
    11ec:	8d 91       	ld	r24, X+
    11ee:	9c 91       	ld	r25, X
    11f0:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__cmpsf2>
    11f4:	88 23       	and	r24, r24
    11f6:	4c f4       	brge	.+18     	; 0x120a <__stack+0x9ab>
		__ticks = 1;
    11f8:	ce 01       	movw	r24, r28
    11fa:	86 58       	subi	r24, 0x86	; 134
    11fc:	9f 4f       	sbci	r25, 0xFF	; 255
    11fe:	21 e0       	ldi	r18, 0x01	; 1
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	fc 01       	movw	r30, r24
    1204:	31 83       	std	Z+1, r19	; 0x01
    1206:	20 83       	st	Z, r18
    1208:	a2 c0       	rjmp	.+324    	; 0x134e <__stack+0xaef>
	else if (__tmp > 65535)
    120a:	ce 01       	movw	r24, r28
    120c:	8a 58       	subi	r24, 0x8A	; 138
    120e:	9f 4f       	sbci	r25, 0xFF	; 255
    1210:	20 e0       	ldi	r18, 0x00	; 0
    1212:	3f ef       	ldi	r19, 0xFF	; 255
    1214:	4f e7       	ldi	r20, 0x7F	; 127
    1216:	57 e4       	ldi	r21, 0x47	; 71
    1218:	dc 01       	movw	r26, r24
    121a:	6d 91       	ld	r22, X+
    121c:	7d 91       	ld	r23, X+
    121e:	8d 91       	ld	r24, X+
    1220:	9c 91       	ld	r25, X
    1222:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__gesf2>
    1226:	18 16       	cp	r1, r24
    1228:	0c f0       	brlt	.+2      	; 0x122c <__stack+0x9cd>
    122a:	73 c0       	rjmp	.+230    	; 0x1312 <__stack+0xab3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    122c:	ce 01       	movw	r24, r28
    122e:	8e 58       	subi	r24, 0x8E	; 142
    1230:	9f 4f       	sbci	r25, 0xFF	; 255
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	40 e2       	ldi	r20, 0x20	; 32
    1238:	51 e4       	ldi	r21, 0x41	; 65
    123a:	fc 01       	movw	r30, r24
    123c:	60 81       	ld	r22, Z
    123e:	71 81       	ldd	r23, Z+1	; 0x01
    1240:	82 81       	ldd	r24, Z+2	; 0x02
    1242:	93 81       	ldd	r25, Z+3	; 0x03
    1244:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
    1248:	c6 5a       	subi	r28, 0xA6	; 166
    124a:	de 4f       	sbci	r29, 0xFE	; 254
    124c:	68 83       	st	Y, r22
    124e:	79 83       	std	Y+1, r23	; 0x01
    1250:	8a 83       	std	Y+2, r24	; 0x02
    1252:	9b 83       	std	Y+3, r25	; 0x03
    1254:	ca 55       	subi	r28, 0x5A	; 90
    1256:	d1 40       	sbci	r29, 0x01	; 1
    1258:	c6 5a       	subi	r28, 0xA6	; 166
    125a:	de 4f       	sbci	r29, 0xFE	; 254
    125c:	88 81       	ld	r24, Y
    125e:	99 81       	ldd	r25, Y+1	; 0x01
    1260:	aa 81       	ldd	r26, Y+2	; 0x02
    1262:	bb 81       	ldd	r27, Y+3	; 0x03
    1264:	ca 55       	subi	r28, 0x5A	; 90
    1266:	d1 40       	sbci	r29, 0x01	; 1
    1268:	c2 53       	subi	r28, 0x32	; 50
    126a:	df 4f       	sbci	r29, 0xFF	; 255
    126c:	88 83       	st	Y, r24
    126e:	99 83       	std	Y+1, r25	; 0x01
    1270:	aa 83       	std	Y+2, r26	; 0x02
    1272:	bb 83       	std	Y+3, r27	; 0x03
    1274:	ce 5c       	subi	r28, 0xCE	; 206
    1276:	d0 40       	sbci	r29, 0x00	; 0
    1278:	8e 01       	movw	r16, r28
    127a:	06 58       	subi	r16, 0x86	; 134
    127c:	1f 4f       	sbci	r17, 0xFF	; 255
    127e:	c2 53       	subi	r28, 0x32	; 50
    1280:	df 4f       	sbci	r29, 0xFF	; 255
    1282:	68 81       	ld	r22, Y
    1284:	79 81       	ldd	r23, Y+1	; 0x01
    1286:	8a 81       	ldd	r24, Y+2	; 0x02
    1288:	9b 81       	ldd	r25, Y+3	; 0x03
    128a:	ce 5c       	subi	r28, 0xCE	; 206
    128c:	d0 40       	sbci	r29, 0x00	; 0
    128e:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
    1292:	c2 5a       	subi	r28, 0xA2	; 162
    1294:	de 4f       	sbci	r29, 0xFE	; 254
    1296:	68 83       	st	Y, r22
    1298:	79 83       	std	Y+1, r23	; 0x01
    129a:	8a 83       	std	Y+2, r24	; 0x02
    129c:	9b 83       	std	Y+3, r25	; 0x03
    129e:	ce 55       	subi	r28, 0x5E	; 94
    12a0:	d1 40       	sbci	r29, 0x01	; 1
    12a2:	c2 5a       	subi	r28, 0xA2	; 162
    12a4:	de 4f       	sbci	r29, 0xFE	; 254
    12a6:	e8 81       	ld	r30, Y
    12a8:	f9 81       	ldd	r31, Y+1	; 0x01
    12aa:	ce 55       	subi	r28, 0x5E	; 94
    12ac:	d1 40       	sbci	r29, 0x01	; 1
    12ae:	d8 01       	movw	r26, r16
    12b0:	ed 93       	st	X+, r30
    12b2:	fc 93       	st	X, r31
		while(__ticks)
    12b4:	25 c0       	rjmp	.+74     	; 0x1300 <__stack+0xaa1>
    12b6:	ce 01       	movw	r24, r28
    12b8:	84 58       	subi	r24, 0x84	; 132
    12ba:	9f 4f       	sbci	r25, 0xFF	; 255
    12bc:	20 e9       	ldi	r18, 0x90	; 144
    12be:	31 e0       	ldi	r19, 0x01	; 1
    12c0:	dc 01       	movw	r26, r24
    12c2:	2d 93       	st	X+, r18
    12c4:	3c 93       	st	X, r19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    12c6:	ce 01       	movw	r24, r28
    12c8:	84 58       	subi	r24, 0x84	; 132
    12ca:	9f 4f       	sbci	r25, 0xFF	; 255
    12cc:	fc 01       	movw	r30, r24
    12ce:	80 81       	ld	r24, Z
    12d0:	91 81       	ldd	r25, Z+1	; 0x01
    12d2:	01 97       	sbiw	r24, 0x01	; 1
    12d4:	f1 f7       	brne	.-4      	; 0x12d2 <__stack+0xa73>
    12d6:	9e 01       	movw	r18, r28
    12d8:	24 58       	subi	r18, 0x84	; 132
    12da:	3f 4f       	sbci	r19, 0xFF	; 255
    12dc:	d9 01       	movw	r26, r18
    12de:	8d 93       	st	X+, r24
    12e0:	9c 93       	st	X, r25
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
    12e2:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12e4:	ce 01       	movw	r24, r28
    12e6:	86 58       	subi	r24, 0x86	; 134
    12e8:	9f 4f       	sbci	r25, 0xFF	; 255
    12ea:	9e 01       	movw	r18, r28
    12ec:	26 58       	subi	r18, 0x86	; 134
    12ee:	3f 4f       	sbci	r19, 0xFF	; 255
    12f0:	f9 01       	movw	r30, r18
    12f2:	20 81       	ld	r18, Z
    12f4:	31 81       	ldd	r19, Z+1	; 0x01
    12f6:	21 50       	subi	r18, 0x01	; 1
    12f8:	31 09       	sbc	r19, r1
    12fa:	dc 01       	movw	r26, r24
    12fc:	2d 93       	st	X+, r18
    12fe:	3c 93       	st	X, r19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1300:	ce 01       	movw	r24, r28
    1302:	86 58       	subi	r24, 0x86	; 134
    1304:	9f 4f       	sbci	r25, 0xFF	; 255
    1306:	fc 01       	movw	r30, r24
    1308:	80 81       	ld	r24, Z
    130a:	91 81       	ldd	r25, Z+1	; 0x01
    130c:	89 2b       	or	r24, r25
    130e:	99 f6       	brne	.-90     	; 0x12b6 <__stack+0xa57>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
		}
		return;
    1310:	39 c0       	rjmp	.+114    	; 0x1384 <__stack+0xb25>
	}
	else
		__ticks = (uint16_t)__tmp;
    1312:	8e 01       	movw	r16, r28
    1314:	06 58       	subi	r16, 0x86	; 134
    1316:	1f 4f       	sbci	r17, 0xFF	; 255
    1318:	ce 01       	movw	r24, r28
    131a:	8a 58       	subi	r24, 0x8A	; 138
    131c:	9f 4f       	sbci	r25, 0xFF	; 255
    131e:	dc 01       	movw	r26, r24
    1320:	6d 91       	ld	r22, X+
    1322:	7d 91       	ld	r23, X+
    1324:	8d 91       	ld	r24, X+
    1326:	9c 91       	ld	r25, X
    1328:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
    132c:	ce 59       	subi	r28, 0x9E	; 158
    132e:	de 4f       	sbci	r29, 0xFE	; 254
    1330:	68 83       	st	Y, r22
    1332:	79 83       	std	Y+1, r23	; 0x01
    1334:	8a 83       	std	Y+2, r24	; 0x02
    1336:	9b 83       	std	Y+3, r25	; 0x03
    1338:	c2 56       	subi	r28, 0x62	; 98
    133a:	d1 40       	sbci	r29, 0x01	; 1
    133c:	ce 59       	subi	r28, 0x9E	; 158
    133e:	de 4f       	sbci	r29, 0xFE	; 254
    1340:	48 81       	ld	r20, Y
    1342:	59 81       	ldd	r21, Y+1	; 0x01
    1344:	c2 56       	subi	r28, 0x62	; 98
    1346:	d1 40       	sbci	r29, 0x01	; 1
    1348:	f8 01       	movw	r30, r16
    134a:	51 83       	std	Z+1, r21	; 0x01
    134c:	40 83       	st	Z, r20
    134e:	ce 01       	movw	r24, r28
    1350:	82 58       	subi	r24, 0x82	; 130
    1352:	9f 4f       	sbci	r25, 0xFF	; 255
    1354:	9e 01       	movw	r18, r28
    1356:	26 58       	subi	r18, 0x86	; 134
    1358:	3f 4f       	sbci	r19, 0xFF	; 255
    135a:	d9 01       	movw	r26, r18
    135c:	2d 91       	ld	r18, X+
    135e:	3c 91       	ld	r19, X
    1360:	fc 01       	movw	r30, r24
    1362:	31 83       	std	Z+1, r19	; 0x01
    1364:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1366:	ce 01       	movw	r24, r28
    1368:	82 58       	subi	r24, 0x82	; 130
    136a:	9f 4f       	sbci	r25, 0xFF	; 255
    136c:	dc 01       	movw	r26, r24
    136e:	8d 91       	ld	r24, X+
    1370:	9c 91       	ld	r25, X
    1372:	01 97       	sbiw	r24, 0x01	; 1
    1374:	f1 f7       	brne	.-4      	; 0x1372 <__stack+0xb13>
    1376:	9e 01       	movw	r18, r28
    1378:	22 58       	subi	r18, 0x82	; 130
    137a:	3f 4f       	sbci	r19, 0xFF	; 255
    137c:	f9 01       	movw	r30, r18
    137e:	91 83       	std	Z+1, r25	; 0x01
    1380:	80 83       	st	Z, r24
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
    1382:	00 00       	nop
			/*2-leds converging/Diverging every 300 ms*/
			case 0b01111111:
			PORTB=0;
			u16 CConvergingArr[]={0b00011000,0b00111100,0b01111110,0b11111111};
			u16 CDivergingArr[]={0b11111111,0b01111110,0b00111100,0b00011000};
			for(i=0;i<4;i++)
    1384:	89 81       	ldd	r24, Y+1	; 0x01
    1386:	8f 5f       	subi	r24, 0xFF	; 255
    1388:	89 83       	std	Y+1, r24	; 0x01
    138a:	89 81       	ldd	r24, Y+1	; 0x01
    138c:	84 30       	cpi	r24, 0x04	; 4
    138e:	08 f4       	brcc	.+2      	; 0x1392 <__stack+0xb33>
    1390:	e0 ce       	rjmp	.-576    	; 0x1152 <__stack+0x8f3>
				PORTB=CConvergingArr[i];
				_delay_ms(100);
			}


			for(i=3;i>0;i--)
    1392:	83 e0       	ldi	r24, 0x03	; 3
    1394:	89 83       	std	Y+1, r24	; 0x01
    1396:	1c c1       	rjmp	.+568    	; 0x15d0 <__stack+0xd71>
			{
				PORTB=CDivergingArr[i];
    1398:	89 81       	ldd	r24, Y+1	; 0x01
    139a:	88 2f       	mov	r24, r24
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	9e 01       	movw	r18, r28
    13a0:	2a 55       	subi	r18, 0x5A	; 90
    13a2:	3f 4f       	sbci	r19, 0xFF	; 255
    13a4:	88 0f       	add	r24, r24
    13a6:	99 1f       	adc	r25, r25
    13a8:	82 0f       	add	r24, r18
    13aa:	93 1f       	adc	r25, r19
    13ac:	dc 01       	movw	r26, r24
    13ae:	2d 91       	ld	r18, X+
    13b0:	3c 91       	ld	r19, X
    13b2:	88 e3       	ldi	r24, 0x38	; 56
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	fc 01       	movw	r30, r24
    13b8:	20 83       	st	Z, r18
    13ba:	9e 01       	movw	r18, r28
    13bc:	20 58       	subi	r18, 0x80	; 128
    13be:	3f 4f       	sbci	r19, 0xFF	; 255
    13c0:	80 e0       	ldi	r24, 0x00	; 0
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	a8 ec       	ldi	r26, 0xC8	; 200
    13c6:	b2 e4       	ldi	r27, 0x42	; 66
    13c8:	f9 01       	movw	r30, r18
    13ca:	80 83       	st	Z, r24
    13cc:	91 83       	std	Z+1, r25	; 0x01
    13ce:	a2 83       	std	Z+2, r26	; 0x02
    13d0:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    13d2:	8e 01       	movw	r16, r28
    13d4:	0c 57       	subi	r16, 0x7C	; 124
    13d6:	1f 4f       	sbci	r17, 0xFF	; 255
    13d8:	ce 01       	movw	r24, r28
    13da:	80 58       	subi	r24, 0x80	; 128
    13dc:	9f 4f       	sbci	r25, 0xFF	; 255
    13de:	20 e0       	ldi	r18, 0x00	; 0
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	4a e7       	ldi	r20, 0x7A	; 122
    13e4:	55 e4       	ldi	r21, 0x45	; 69
    13e6:	dc 01       	movw	r26, r24
    13e8:	6d 91       	ld	r22, X+
    13ea:	7d 91       	ld	r23, X+
    13ec:	8d 91       	ld	r24, X+
    13ee:	9c 91       	ld	r25, X
    13f0:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
    13f4:	ca 59       	subi	r28, 0x9A	; 154
    13f6:	de 4f       	sbci	r29, 0xFE	; 254
    13f8:	68 83       	st	Y, r22
    13fa:	79 83       	std	Y+1, r23	; 0x01
    13fc:	8a 83       	std	Y+2, r24	; 0x02
    13fe:	9b 83       	std	Y+3, r25	; 0x03
    1400:	c6 56       	subi	r28, 0x66	; 102
    1402:	d1 40       	sbci	r29, 0x01	; 1
    1404:	ca 59       	subi	r28, 0x9A	; 154
    1406:	de 4f       	sbci	r29, 0xFE	; 254
    1408:	88 81       	ld	r24, Y
    140a:	99 81       	ldd	r25, Y+1	; 0x01
    140c:	aa 81       	ldd	r26, Y+2	; 0x02
    140e:	bb 81       	ldd	r27, Y+3	; 0x03
    1410:	c6 56       	subi	r28, 0x66	; 102
    1412:	d1 40       	sbci	r29, 0x01	; 1
    1414:	f8 01       	movw	r30, r16
    1416:	80 83       	st	Z, r24
    1418:	91 83       	std	Z+1, r25	; 0x01
    141a:	a2 83       	std	Z+2, r26	; 0x02
    141c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    141e:	ce 01       	movw	r24, r28
    1420:	8c 57       	subi	r24, 0x7C	; 124
    1422:	9f 4f       	sbci	r25, 0xFF	; 255
    1424:	20 e0       	ldi	r18, 0x00	; 0
    1426:	30 e0       	ldi	r19, 0x00	; 0
    1428:	40 e8       	ldi	r20, 0x80	; 128
    142a:	5f e3       	ldi	r21, 0x3F	; 63
    142c:	dc 01       	movw	r26, r24
    142e:	6d 91       	ld	r22, X+
    1430:	7d 91       	ld	r23, X+
    1432:	8d 91       	ld	r24, X+
    1434:	9c 91       	ld	r25, X
    1436:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__cmpsf2>
    143a:	88 23       	and	r24, r24
    143c:	4c f4       	brge	.+18     	; 0x1450 <__stack+0xbf1>
		__ticks = 1;
    143e:	ce 01       	movw	r24, r28
    1440:	88 57       	subi	r24, 0x78	; 120
    1442:	9f 4f       	sbci	r25, 0xFF	; 255
    1444:	21 e0       	ldi	r18, 0x01	; 1
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	fc 01       	movw	r30, r24
    144a:	31 83       	std	Z+1, r19	; 0x01
    144c:	20 83       	st	Z, r18
    144e:	a2 c0       	rjmp	.+324    	; 0x1594 <__stack+0xd35>
	else if (__tmp > 65535)
    1450:	ce 01       	movw	r24, r28
    1452:	8c 57       	subi	r24, 0x7C	; 124
    1454:	9f 4f       	sbci	r25, 0xFF	; 255
    1456:	20 e0       	ldi	r18, 0x00	; 0
    1458:	3f ef       	ldi	r19, 0xFF	; 255
    145a:	4f e7       	ldi	r20, 0x7F	; 127
    145c:	57 e4       	ldi	r21, 0x47	; 71
    145e:	dc 01       	movw	r26, r24
    1460:	6d 91       	ld	r22, X+
    1462:	7d 91       	ld	r23, X+
    1464:	8d 91       	ld	r24, X+
    1466:	9c 91       	ld	r25, X
    1468:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__gesf2>
    146c:	18 16       	cp	r1, r24
    146e:	0c f0       	brlt	.+2      	; 0x1472 <__stack+0xc13>
    1470:	73 c0       	rjmp	.+230    	; 0x1558 <__stack+0xcf9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1472:	ce 01       	movw	r24, r28
    1474:	80 58       	subi	r24, 0x80	; 128
    1476:	9f 4f       	sbci	r25, 0xFF	; 255
    1478:	20 e0       	ldi	r18, 0x00	; 0
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	40 e2       	ldi	r20, 0x20	; 32
    147e:	51 e4       	ldi	r21, 0x41	; 65
    1480:	fc 01       	movw	r30, r24
    1482:	60 81       	ld	r22, Z
    1484:	71 81       	ldd	r23, Z+1	; 0x01
    1486:	82 81       	ldd	r24, Z+2	; 0x02
    1488:	93 81       	ldd	r25, Z+3	; 0x03
    148a:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__mulsf3>
    148e:	c6 59       	subi	r28, 0x96	; 150
    1490:	de 4f       	sbci	r29, 0xFE	; 254
    1492:	68 83       	st	Y, r22
    1494:	79 83       	std	Y+1, r23	; 0x01
    1496:	8a 83       	std	Y+2, r24	; 0x02
    1498:	9b 83       	std	Y+3, r25	; 0x03
    149a:	ca 56       	subi	r28, 0x6A	; 106
    149c:	d1 40       	sbci	r29, 0x01	; 1
    149e:	c6 59       	subi	r28, 0x96	; 150
    14a0:	de 4f       	sbci	r29, 0xFE	; 254
    14a2:	88 81       	ld	r24, Y
    14a4:	99 81       	ldd	r25, Y+1	; 0x01
    14a6:	aa 81       	ldd	r26, Y+2	; 0x02
    14a8:	bb 81       	ldd	r27, Y+3	; 0x03
    14aa:	ca 56       	subi	r28, 0x6A	; 106
    14ac:	d1 40       	sbci	r29, 0x01	; 1
    14ae:	ce 52       	subi	r28, 0x2E	; 46
    14b0:	df 4f       	sbci	r29, 0xFF	; 255
    14b2:	88 83       	st	Y, r24
    14b4:	99 83       	std	Y+1, r25	; 0x01
    14b6:	aa 83       	std	Y+2, r26	; 0x02
    14b8:	bb 83       	std	Y+3, r27	; 0x03
    14ba:	c2 5d       	subi	r28, 0xD2	; 210
    14bc:	d0 40       	sbci	r29, 0x00	; 0
    14be:	8e 01       	movw	r16, r28
    14c0:	08 57       	subi	r16, 0x78	; 120
    14c2:	1f 4f       	sbci	r17, 0xFF	; 255
    14c4:	ce 52       	subi	r28, 0x2E	; 46
    14c6:	df 4f       	sbci	r29, 0xFF	; 255
    14c8:	68 81       	ld	r22, Y
    14ca:	79 81       	ldd	r23, Y+1	; 0x01
    14cc:	8a 81       	ldd	r24, Y+2	; 0x02
    14ce:	9b 81       	ldd	r25, Y+3	; 0x03
    14d0:	c2 5d       	subi	r28, 0xD2	; 210
    14d2:	d0 40       	sbci	r29, 0x00	; 0
    14d4:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
    14d8:	c2 59       	subi	r28, 0x92	; 146
    14da:	de 4f       	sbci	r29, 0xFE	; 254
    14dc:	68 83       	st	Y, r22
    14de:	79 83       	std	Y+1, r23	; 0x01
    14e0:	8a 83       	std	Y+2, r24	; 0x02
    14e2:	9b 83       	std	Y+3, r25	; 0x03
    14e4:	ce 56       	subi	r28, 0x6E	; 110
    14e6:	d1 40       	sbci	r29, 0x01	; 1
    14e8:	c2 59       	subi	r28, 0x92	; 146
    14ea:	de 4f       	sbci	r29, 0xFE	; 254
    14ec:	e8 81       	ld	r30, Y
    14ee:	f9 81       	ldd	r31, Y+1	; 0x01
    14f0:	ce 56       	subi	r28, 0x6E	; 110
    14f2:	d1 40       	sbci	r29, 0x01	; 1
    14f4:	d8 01       	movw	r26, r16
    14f6:	ed 93       	st	X+, r30
    14f8:	fc 93       	st	X, r31
		while(__ticks)
    14fa:	25 c0       	rjmp	.+74     	; 0x1546 <__stack+0xce7>
    14fc:	ce 01       	movw	r24, r28
    14fe:	86 57       	subi	r24, 0x76	; 118
    1500:	9f 4f       	sbci	r25, 0xFF	; 255
    1502:	20 e9       	ldi	r18, 0x90	; 144
    1504:	31 e0       	ldi	r19, 0x01	; 1
    1506:	dc 01       	movw	r26, r24
    1508:	2d 93       	st	X+, r18
    150a:	3c 93       	st	X, r19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    150c:	ce 01       	movw	r24, r28
    150e:	86 57       	subi	r24, 0x76	; 118
    1510:	9f 4f       	sbci	r25, 0xFF	; 255
    1512:	fc 01       	movw	r30, r24
    1514:	80 81       	ld	r24, Z
    1516:	91 81       	ldd	r25, Z+1	; 0x01
    1518:	01 97       	sbiw	r24, 0x01	; 1
    151a:	f1 f7       	brne	.-4      	; 0x1518 <__stack+0xcb9>
    151c:	9e 01       	movw	r18, r28
    151e:	26 57       	subi	r18, 0x76	; 118
    1520:	3f 4f       	sbci	r19, 0xFF	; 255
    1522:	d9 01       	movw	r26, r18
    1524:	8d 93       	st	X+, r24
    1526:	9c 93       	st	X, r25
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
    1528:	00 00       	nop
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    152a:	ce 01       	movw	r24, r28
    152c:	88 57       	subi	r24, 0x78	; 120
    152e:	9f 4f       	sbci	r25, 0xFF	; 255
    1530:	9e 01       	movw	r18, r28
    1532:	28 57       	subi	r18, 0x78	; 120
    1534:	3f 4f       	sbci	r19, 0xFF	; 255
    1536:	f9 01       	movw	r30, r18
    1538:	20 81       	ld	r18, Z
    153a:	31 81       	ldd	r19, Z+1	; 0x01
    153c:	21 50       	subi	r18, 0x01	; 1
    153e:	31 09       	sbc	r19, r1
    1540:	dc 01       	movw	r26, r24
    1542:	2d 93       	st	X+, r18
    1544:	3c 93       	st	X, r19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1546:	ce 01       	movw	r24, r28
    1548:	88 57       	subi	r24, 0x78	; 120
    154a:	9f 4f       	sbci	r25, 0xFF	; 255
    154c:	fc 01       	movw	r30, r24
    154e:	80 81       	ld	r24, Z
    1550:	91 81       	ldd	r25, Z+1	; 0x01
    1552:	89 2b       	or	r24, r25
    1554:	99 f6       	brne	.-90     	; 0x14fc <__stack+0xc9d>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
		}
		return;
    1556:	39 c0       	rjmp	.+114    	; 0x15ca <__stack+0xd6b>
	}
	else
		__ticks = (uint16_t)__tmp;
    1558:	8e 01       	movw	r16, r28
    155a:	08 57       	subi	r16, 0x78	; 120
    155c:	1f 4f       	sbci	r17, 0xFF	; 255
    155e:	ce 01       	movw	r24, r28
    1560:	8c 57       	subi	r24, 0x7C	; 124
    1562:	9f 4f       	sbci	r25, 0xFF	; 255
    1564:	dc 01       	movw	r26, r24
    1566:	6d 91       	ld	r22, X+
    1568:	7d 91       	ld	r23, X+
    156a:	8d 91       	ld	r24, X+
    156c:	9c 91       	ld	r25, X
    156e:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fixunssfsi>
    1572:	ce 58       	subi	r28, 0x8E	; 142
    1574:	de 4f       	sbci	r29, 0xFE	; 254
    1576:	68 83       	st	Y, r22
    1578:	79 83       	std	Y+1, r23	; 0x01
    157a:	8a 83       	std	Y+2, r24	; 0x02
    157c:	9b 83       	std	Y+3, r25	; 0x03
    157e:	c2 57       	subi	r28, 0x72	; 114
    1580:	d1 40       	sbci	r29, 0x01	; 1
    1582:	ce 58       	subi	r28, 0x8E	; 142
    1584:	de 4f       	sbci	r29, 0xFE	; 254
    1586:	48 81       	ld	r20, Y
    1588:	59 81       	ldd	r21, Y+1	; 0x01
    158a:	c2 57       	subi	r28, 0x72	; 114
    158c:	d1 40       	sbci	r29, 0x01	; 1
    158e:	f8 01       	movw	r30, r16
    1590:	51 83       	std	Z+1, r21	; 0x01
    1592:	40 83       	st	Z, r20
    1594:	ce 01       	movw	r24, r28
    1596:	84 57       	subi	r24, 0x74	; 116
    1598:	9f 4f       	sbci	r25, 0xFF	; 255
    159a:	9e 01       	movw	r18, r28
    159c:	28 57       	subi	r18, 0x78	; 120
    159e:	3f 4f       	sbci	r19, 0xFF	; 255
    15a0:	d9 01       	movw	r26, r18
    15a2:	2d 91       	ld	r18, X+
    15a4:	3c 91       	ld	r19, X
    15a6:	fc 01       	movw	r30, r24
    15a8:	31 83       	std	Z+1, r19	; 0x01
    15aa:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15ac:	ce 01       	movw	r24, r28
    15ae:	84 57       	subi	r24, 0x74	; 116
    15b0:	9f 4f       	sbci	r25, 0xFF	; 255
    15b2:	dc 01       	movw	r26, r24
    15b4:	8d 91       	ld	r24, X+
    15b6:	9c 91       	ld	r25, X
    15b8:	01 97       	sbiw	r24, 0x01	; 1
    15ba:	f1 f7       	brne	.-4      	; 0x15b8 <__stack+0xd59>
    15bc:	9e 01       	movw	r18, r28
    15be:	24 57       	subi	r18, 0x74	; 116
    15c0:	3f 4f       	sbci	r19, 0xFF	; 255
    15c2:	f9 01       	movw	r30, r18
    15c4:	91 83       	std	Z+1, r25	; 0x01
    15c6:	80 83       	st	Z, r24
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
    15c8:	00 00       	nop
				PORTB=CConvergingArr[i];
				_delay_ms(100);
			}


			for(i=3;i>0;i--)
    15ca:	89 81       	ldd	r24, Y+1	; 0x01
    15cc:	81 50       	subi	r24, 0x01	; 1
    15ce:	89 83       	std	Y+1, r24	; 0x01
    15d0:	89 81       	ldd	r24, Y+1	; 0x01
    15d2:	88 23       	and	r24, r24
    15d4:	09 f0       	breq	.+2      	; 0x15d8 <__stack+0xd79>
    15d6:	e0 ce       	rjmp	.-576    	; 0x1398 <__stack+0xb39>
				PORTB=CDivergingArr[i];
				_delay_ms(100);

			}

			break;
    15d8:	05 c0       	rjmp	.+10     	; 0x15e4 <__stack+0xd85>

			default:
			PORTB=0xff;
    15da:	88 e3       	ldi	r24, 0x38	; 56
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	2f ef       	ldi	r18, 0xFF	; 255
    15e0:	dc 01       	movw	r26, r24
    15e2:	2c 93       	st	X, r18
	PORTA=0xff;// internal pullup resistor activation for all pins in portB
	DDRB=0xff;
	u8 i;/*counter*/
	while(1)
	{
		switch (PINA)
    15e4:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <main+0x36>

000015e8 <__cmpsf2>:
    15e8:	0e 94 28 0b 	call	0x1650	; 0x1650 <__fp_cmp>
    15ec:	08 f4       	brcc	.+2      	; 0x15f0 <__cmpsf2+0x8>
    15ee:	81 e0       	ldi	r24, 0x01	; 1
    15f0:	08 95       	ret

000015f2 <__fixunssfsi>:
    15f2:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <__fp_splitA>
    15f6:	88 f0       	brcs	.+34     	; 0x161a <__fixunssfsi+0x28>
    15f8:	9f 57       	subi	r25, 0x7F	; 127
    15fa:	98 f0       	brcs	.+38     	; 0x1622 <__fixunssfsi+0x30>
    15fc:	b9 2f       	mov	r27, r25
    15fe:	99 27       	eor	r25, r25
    1600:	b7 51       	subi	r27, 0x17	; 23
    1602:	b0 f0       	brcs	.+44     	; 0x1630 <__fixunssfsi+0x3e>
    1604:	e1 f0       	breq	.+56     	; 0x163e <__fixunssfsi+0x4c>
    1606:	66 0f       	add	r22, r22
    1608:	77 1f       	adc	r23, r23
    160a:	88 1f       	adc	r24, r24
    160c:	99 1f       	adc	r25, r25
    160e:	1a f0       	brmi	.+6      	; 0x1616 <__fixunssfsi+0x24>
    1610:	ba 95       	dec	r27
    1612:	c9 f7       	brne	.-14     	; 0x1606 <__fixunssfsi+0x14>
    1614:	14 c0       	rjmp	.+40     	; 0x163e <__fixunssfsi+0x4c>
    1616:	b1 30       	cpi	r27, 0x01	; 1
    1618:	91 f0       	breq	.+36     	; 0x163e <__fixunssfsi+0x4c>
    161a:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fp_zero>
    161e:	b1 e0       	ldi	r27, 0x01	; 1
    1620:	08 95       	ret
    1622:	0c 94 6e 0b 	jmp	0x16dc	; 0x16dc <__fp_zero>
    1626:	67 2f       	mov	r22, r23
    1628:	78 2f       	mov	r23, r24
    162a:	88 27       	eor	r24, r24
    162c:	b8 5f       	subi	r27, 0xF8	; 248
    162e:	39 f0       	breq	.+14     	; 0x163e <__fixunssfsi+0x4c>
    1630:	b9 3f       	cpi	r27, 0xF9	; 249
    1632:	cc f3       	brlt	.-14     	; 0x1626 <__fixunssfsi+0x34>
    1634:	86 95       	lsr	r24
    1636:	77 95       	ror	r23
    1638:	67 95       	ror	r22
    163a:	b3 95       	inc	r27
    163c:	d9 f7       	brne	.-10     	; 0x1634 <__fixunssfsi+0x42>
    163e:	3e f4       	brtc	.+14     	; 0x164e <__fixunssfsi+0x5c>
    1640:	90 95       	com	r25
    1642:	80 95       	com	r24
    1644:	70 95       	com	r23
    1646:	61 95       	neg	r22
    1648:	7f 4f       	sbci	r23, 0xFF	; 255
    164a:	8f 4f       	sbci	r24, 0xFF	; 255
    164c:	9f 4f       	sbci	r25, 0xFF	; 255
    164e:	08 95       	ret

00001650 <__fp_cmp>:
    1650:	99 0f       	add	r25, r25
    1652:	00 08       	sbc	r0, r0
    1654:	55 0f       	add	r21, r21
    1656:	aa 0b       	sbc	r26, r26
    1658:	e0 e8       	ldi	r30, 0x80	; 128
    165a:	fe ef       	ldi	r31, 0xFE	; 254
    165c:	16 16       	cp	r1, r22
    165e:	17 06       	cpc	r1, r23
    1660:	e8 07       	cpc	r30, r24
    1662:	f9 07       	cpc	r31, r25
    1664:	c0 f0       	brcs	.+48     	; 0x1696 <__fp_cmp+0x46>
    1666:	12 16       	cp	r1, r18
    1668:	13 06       	cpc	r1, r19
    166a:	e4 07       	cpc	r30, r20
    166c:	f5 07       	cpc	r31, r21
    166e:	98 f0       	brcs	.+38     	; 0x1696 <__fp_cmp+0x46>
    1670:	62 1b       	sub	r22, r18
    1672:	73 0b       	sbc	r23, r19
    1674:	84 0b       	sbc	r24, r20
    1676:	95 0b       	sbc	r25, r21
    1678:	39 f4       	brne	.+14     	; 0x1688 <__fp_cmp+0x38>
    167a:	0a 26       	eor	r0, r26
    167c:	61 f0       	breq	.+24     	; 0x1696 <__fp_cmp+0x46>
    167e:	23 2b       	or	r18, r19
    1680:	24 2b       	or	r18, r20
    1682:	25 2b       	or	r18, r21
    1684:	21 f4       	brne	.+8      	; 0x168e <__fp_cmp+0x3e>
    1686:	08 95       	ret
    1688:	0a 26       	eor	r0, r26
    168a:	09 f4       	brne	.+2      	; 0x168e <__fp_cmp+0x3e>
    168c:	a1 40       	sbci	r26, 0x01	; 1
    168e:	a6 95       	lsr	r26
    1690:	8f ef       	ldi	r24, 0xFF	; 255
    1692:	81 1d       	adc	r24, r1
    1694:	81 1d       	adc	r24, r1
    1696:	08 95       	ret

00001698 <__fp_split3>:
    1698:	57 fd       	sbrc	r21, 7
    169a:	90 58       	subi	r25, 0x80	; 128
    169c:	44 0f       	add	r20, r20
    169e:	55 1f       	adc	r21, r21
    16a0:	59 f0       	breq	.+22     	; 0x16b8 <__fp_splitA+0x10>
    16a2:	5f 3f       	cpi	r21, 0xFF	; 255
    16a4:	71 f0       	breq	.+28     	; 0x16c2 <__fp_splitA+0x1a>
    16a6:	47 95       	ror	r20

000016a8 <__fp_splitA>:
    16a8:	88 0f       	add	r24, r24
    16aa:	97 fb       	bst	r25, 7
    16ac:	99 1f       	adc	r25, r25
    16ae:	61 f0       	breq	.+24     	; 0x16c8 <__fp_splitA+0x20>
    16b0:	9f 3f       	cpi	r25, 0xFF	; 255
    16b2:	79 f0       	breq	.+30     	; 0x16d2 <__fp_splitA+0x2a>
    16b4:	87 95       	ror	r24
    16b6:	08 95       	ret
    16b8:	12 16       	cp	r1, r18
    16ba:	13 06       	cpc	r1, r19
    16bc:	14 06       	cpc	r1, r20
    16be:	55 1f       	adc	r21, r21
    16c0:	f2 cf       	rjmp	.-28     	; 0x16a6 <__fp_split3+0xe>
    16c2:	46 95       	lsr	r20
    16c4:	f1 df       	rcall	.-30     	; 0x16a8 <__fp_splitA>
    16c6:	08 c0       	rjmp	.+16     	; 0x16d8 <__fp_splitA+0x30>
    16c8:	16 16       	cp	r1, r22
    16ca:	17 06       	cpc	r1, r23
    16cc:	18 06       	cpc	r1, r24
    16ce:	99 1f       	adc	r25, r25
    16d0:	f1 cf       	rjmp	.-30     	; 0x16b4 <__fp_splitA+0xc>
    16d2:	86 95       	lsr	r24
    16d4:	71 05       	cpc	r23, r1
    16d6:	61 05       	cpc	r22, r1
    16d8:	08 94       	sec
    16da:	08 95       	ret

000016dc <__fp_zero>:
    16dc:	e8 94       	clt

000016de <__fp_szero>:
    16de:	bb 27       	eor	r27, r27
    16e0:	66 27       	eor	r22, r22
    16e2:	77 27       	eor	r23, r23
    16e4:	cb 01       	movw	r24, r22
    16e6:	97 f9       	bld	r25, 7
    16e8:	08 95       	ret

000016ea <__gesf2>:
    16ea:	0e 94 28 0b 	call	0x1650	; 0x1650 <__fp_cmp>
    16ee:	08 f4       	brcc	.+2      	; 0x16f2 <__gesf2+0x8>
    16f0:	8f ef       	ldi	r24, 0xFF	; 255
    16f2:	08 95       	ret

000016f4 <__mulsf3>:
    16f4:	0e 94 8d 0b 	call	0x171a	; 0x171a <__mulsf3x>
    16f8:	0c 94 fe 0b 	jmp	0x17fc	; 0x17fc <__fp_round>
    16fc:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <__fp_pscA>
    1700:	38 f0       	brcs	.+14     	; 0x1710 <__mulsf3+0x1c>
    1702:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <__fp_pscB>
    1706:	20 f0       	brcs	.+8      	; 0x1710 <__mulsf3+0x1c>
    1708:	95 23       	and	r25, r21
    170a:	11 f0       	breq	.+4      	; 0x1710 <__mulsf3+0x1c>
    170c:	0c 94 e7 0b 	jmp	0x17ce	; 0x17ce <__fp_inf>
    1710:	0c 94 ed 0b 	jmp	0x17da	; 0x17da <__fp_nan>
    1714:	11 24       	eor	r1, r1
    1716:	0c 94 6f 0b 	jmp	0x16de	; 0x16de <__fp_szero>

0000171a <__mulsf3x>:
    171a:	0e 94 4c 0b 	call	0x1698	; 0x1698 <__fp_split3>
    171e:	70 f3       	brcs	.-36     	; 0x16fc <__mulsf3+0x8>

00001720 <__mulsf3_pse>:
    1720:	95 9f       	mul	r25, r21
    1722:	c1 f3       	breq	.-16     	; 0x1714 <__mulsf3+0x20>
    1724:	95 0f       	add	r25, r21
    1726:	50 e0       	ldi	r21, 0x00	; 0
    1728:	55 1f       	adc	r21, r21
    172a:	62 9f       	mul	r22, r18
    172c:	f0 01       	movw	r30, r0
    172e:	72 9f       	mul	r23, r18
    1730:	bb 27       	eor	r27, r27
    1732:	f0 0d       	add	r31, r0
    1734:	b1 1d       	adc	r27, r1
    1736:	63 9f       	mul	r22, r19
    1738:	aa 27       	eor	r26, r26
    173a:	f0 0d       	add	r31, r0
    173c:	b1 1d       	adc	r27, r1
    173e:	aa 1f       	adc	r26, r26
    1740:	64 9f       	mul	r22, r20
    1742:	66 27       	eor	r22, r22
    1744:	b0 0d       	add	r27, r0
    1746:	a1 1d       	adc	r26, r1
    1748:	66 1f       	adc	r22, r22
    174a:	82 9f       	mul	r24, r18
    174c:	22 27       	eor	r18, r18
    174e:	b0 0d       	add	r27, r0
    1750:	a1 1d       	adc	r26, r1
    1752:	62 1f       	adc	r22, r18
    1754:	73 9f       	mul	r23, r19
    1756:	b0 0d       	add	r27, r0
    1758:	a1 1d       	adc	r26, r1
    175a:	62 1f       	adc	r22, r18
    175c:	83 9f       	mul	r24, r19
    175e:	a0 0d       	add	r26, r0
    1760:	61 1d       	adc	r22, r1
    1762:	22 1f       	adc	r18, r18
    1764:	74 9f       	mul	r23, r20
    1766:	33 27       	eor	r19, r19
    1768:	a0 0d       	add	r26, r0
    176a:	61 1d       	adc	r22, r1
    176c:	23 1f       	adc	r18, r19
    176e:	84 9f       	mul	r24, r20
    1770:	60 0d       	add	r22, r0
    1772:	21 1d       	adc	r18, r1
    1774:	82 2f       	mov	r24, r18
    1776:	76 2f       	mov	r23, r22
    1778:	6a 2f       	mov	r22, r26
    177a:	11 24       	eor	r1, r1
    177c:	9f 57       	subi	r25, 0x7F	; 127
    177e:	50 40       	sbci	r21, 0x00	; 0
    1780:	9a f0       	brmi	.+38     	; 0x17a8 <__mulsf3_pse+0x88>
    1782:	f1 f0       	breq	.+60     	; 0x17c0 <__mulsf3_pse+0xa0>
    1784:	88 23       	and	r24, r24
    1786:	4a f0       	brmi	.+18     	; 0x179a <__mulsf3_pse+0x7a>
    1788:	ee 0f       	add	r30, r30
    178a:	ff 1f       	adc	r31, r31
    178c:	bb 1f       	adc	r27, r27
    178e:	66 1f       	adc	r22, r22
    1790:	77 1f       	adc	r23, r23
    1792:	88 1f       	adc	r24, r24
    1794:	91 50       	subi	r25, 0x01	; 1
    1796:	50 40       	sbci	r21, 0x00	; 0
    1798:	a9 f7       	brne	.-22     	; 0x1784 <__mulsf3_pse+0x64>
    179a:	9e 3f       	cpi	r25, 0xFE	; 254
    179c:	51 05       	cpc	r21, r1
    179e:	80 f0       	brcs	.+32     	; 0x17c0 <__mulsf3_pse+0xa0>
    17a0:	0c 94 e7 0b 	jmp	0x17ce	; 0x17ce <__fp_inf>
    17a4:	0c 94 6f 0b 	jmp	0x16de	; 0x16de <__fp_szero>
    17a8:	5f 3f       	cpi	r21, 0xFF	; 255
    17aa:	e4 f3       	brlt	.-8      	; 0x17a4 <__mulsf3_pse+0x84>
    17ac:	98 3e       	cpi	r25, 0xE8	; 232
    17ae:	d4 f3       	brlt	.-12     	; 0x17a4 <__mulsf3_pse+0x84>
    17b0:	86 95       	lsr	r24
    17b2:	77 95       	ror	r23
    17b4:	67 95       	ror	r22
    17b6:	b7 95       	ror	r27
    17b8:	f7 95       	ror	r31
    17ba:	e7 95       	ror	r30
    17bc:	9f 5f       	subi	r25, 0xFF	; 255
    17be:	c1 f7       	brne	.-16     	; 0x17b0 <__mulsf3_pse+0x90>
    17c0:	fe 2b       	or	r31, r30
    17c2:	88 0f       	add	r24, r24
    17c4:	91 1d       	adc	r25, r1
    17c6:	96 95       	lsr	r25
    17c8:	87 95       	ror	r24
    17ca:	97 f9       	bld	r25, 7
    17cc:	08 95       	ret

000017ce <__fp_inf>:
    17ce:	97 f9       	bld	r25, 7
    17d0:	9f 67       	ori	r25, 0x7F	; 127
    17d2:	80 e8       	ldi	r24, 0x80	; 128
    17d4:	70 e0       	ldi	r23, 0x00	; 0
    17d6:	60 e0       	ldi	r22, 0x00	; 0
    17d8:	08 95       	ret

000017da <__fp_nan>:
    17da:	9f ef       	ldi	r25, 0xFF	; 255
    17dc:	80 ec       	ldi	r24, 0xC0	; 192
    17de:	08 95       	ret

000017e0 <__fp_pscA>:
    17e0:	00 24       	eor	r0, r0
    17e2:	0a 94       	dec	r0
    17e4:	16 16       	cp	r1, r22
    17e6:	17 06       	cpc	r1, r23
    17e8:	18 06       	cpc	r1, r24
    17ea:	09 06       	cpc	r0, r25
    17ec:	08 95       	ret

000017ee <__fp_pscB>:
    17ee:	00 24       	eor	r0, r0
    17f0:	0a 94       	dec	r0
    17f2:	12 16       	cp	r1, r18
    17f4:	13 06       	cpc	r1, r19
    17f6:	14 06       	cpc	r1, r20
    17f8:	05 06       	cpc	r0, r21
    17fa:	08 95       	ret

000017fc <__fp_round>:
    17fc:	09 2e       	mov	r0, r25
    17fe:	03 94       	inc	r0
    1800:	00 0c       	add	r0, r0
    1802:	11 f4       	brne	.+4      	; 0x1808 <__fp_round+0xc>
    1804:	88 23       	and	r24, r24
    1806:	52 f0       	brmi	.+20     	; 0x181c <__fp_round+0x20>
    1808:	bb 0f       	add	r27, r27
    180a:	40 f4       	brcc	.+16     	; 0x181c <__fp_round+0x20>
    180c:	bf 2b       	or	r27, r31
    180e:	11 f4       	brne	.+4      	; 0x1814 <__fp_round+0x18>
    1810:	60 ff       	sbrs	r22, 0
    1812:	04 c0       	rjmp	.+8      	; 0x181c <__fp_round+0x20>
    1814:	6f 5f       	subi	r22, 0xFF	; 255
    1816:	7f 4f       	sbci	r23, 0xFF	; 255
    1818:	8f 4f       	sbci	r24, 0xFF	; 255
    181a:	9f 4f       	sbci	r25, 0xFF	; 255
    181c:	08 95       	ret

0000181e <_exit>:
    181e:	f8 94       	cli

00001820 <__stop_program>:
    1820:	ff cf       	rjmp	.-2      	; 0x1820 <__stop_program>
