
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000070e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000070e  000007a2  2**0
                  ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  000007a2  2**0
                  ALLOC
  3 .stab         00000d80  00000000  00000000  000007a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000985  00000000  00000000  00001524  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00001ea9  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001ebc  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000040  00000000  00000000  00001ef8  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00000532  00000000  00000000  00001f38  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000004cb  00000000  00000000  0000246a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000103  00000000  00000000  00002935  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000001f4  00000000  00000000  00002a38  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 61 03 	call	0x6c2	; 0x6c2 <main>
  74:	0c 94 85 03 	jmp	0x70a	; 0x70a <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_u8SetPinDirection>:




u8 DIO_u8SetPinDirection(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Direction)
{
  7c:	cf 93       	push	r28
  7e:	df 93       	push	r29
  80:	00 d0       	rcall	.+0      	; 0x82 <DIO_u8SetPinDirection+0x6>
  82:	00 d0       	rcall	.+0      	; 0x84 <DIO_u8SetPinDirection+0x8>
  84:	0f 92       	push	r0
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	8b 83       	std	Y+3, r24	; 0x03
  8c:	6c 83       	std	Y+4, r22	; 0x04
  8e:	4d 83       	std	Y+5, r20	; 0x05
	u8 Local_u8ErrorState=0;
  90:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8Pin<=DIO_u8PIN7)
  92:	8c 81       	ldd	r24, Y+4	; 0x04
  94:	88 30       	cpi	r24, 0x08	; 8
  96:	08 f0       	brcs	.+2      	; 0x9a <DIO_u8SetPinDirection+0x1e>
  98:	f3 c0       	rjmp	.+486    	; 0x280 <DIO_u8SetPinDirection+0x204>
	{
		if(Copy_u8Direction==DIO_u8PIN_INPUT)
  9a:	8d 81       	ldd	r24, Y+5	; 0x05
  9c:	88 23       	and	r24, r24
  9e:	09 f0       	breq	.+2      	; 0xa2 <DIO_u8SetPinDirection+0x26>
  a0:	76 c0       	rjmp	.+236    	; 0x18e <DIO_u8SetPinDirection+0x112>
		{
			switch(Copy_u8Port)
  a2:	8b 81       	ldd	r24, Y+3	; 0x03
  a4:	88 2f       	mov	r24, r24
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	84 30       	cpi	r24, 0x04	; 4
  aa:	91 05       	cpc	r25, r1
  ac:	09 f4       	brne	.+2      	; 0xb0 <DIO_u8SetPinDirection+0x34>
  ae:	55 c0       	rjmp	.+170    	; 0x15a <DIO_u8SetPinDirection+0xde>
  b0:	85 30       	cpi	r24, 0x05	; 5
  b2:	91 05       	cpc	r25, r1
  b4:	0c f0       	brlt	.+2      	; 0xb8 <DIO_u8SetPinDirection+0x3c>
  b6:	68 c0       	rjmp	.+208    	; 0x188 <DIO_u8SetPinDirection+0x10c>
  b8:	83 30       	cpi	r24, 0x03	; 3
  ba:	91 05       	cpc	r25, r1
  bc:	b9 f1       	breq	.+110    	; 0x12c <DIO_u8SetPinDirection+0xb0>
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	0c f0       	brlt	.+2      	; 0xc6 <DIO_u8SetPinDirection+0x4a>
  c4:	61 c0       	rjmp	.+194    	; 0x188 <DIO_u8SetPinDirection+0x10c>
  c6:	00 97       	sbiw	r24, 0x00	; 0
  c8:	19 f0       	breq	.+6      	; 0xd0 <DIO_u8SetPinDirection+0x54>
  ca:	01 97       	sbiw	r24, 0x01	; 1
  cc:	c1 f0       	breq	.+48     	; 0xfe <DIO_u8SetPinDirection+0x82>
  ce:	5c c0       	rjmp	.+184    	; 0x188 <DIO_u8SetPinDirection+0x10c>
			{
			case DIO_u8PORTA: CLR_BIT(DDRA,Copy_u8Pin); break;
  d0:	8a e3       	ldi	r24, 0x3A	; 58
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	fc 01       	movw	r30, r24
  d6:	80 81       	ld	r24, Z
  d8:	48 2f       	mov	r20, r24
  da:	8c 81       	ldd	r24, Y+4	; 0x04
  dc:	28 2f       	mov	r18, r24
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_u8SetPinDirection+0x6e>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	2a 95       	dec	r18
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_u8SetPinDirection+0x6a>
  ee:	80 95       	com	r24
  f0:	24 2f       	mov	r18, r20
  f2:	28 23       	and	r18, r24
  f4:	8a e3       	ldi	r24, 0x3A	; 58
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	fc 01       	movw	r30, r24
  fa:	20 83       	st	Z, r18
  fc:	c3 c0       	rjmp	.+390    	; 0x284 <DIO_u8SetPinDirection+0x208>
			case DIO_u8PORTB: CLR_BIT(DDRB,Copy_u8Pin); break;
  fe:	87 e3       	ldi	r24, 0x37	; 55
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	fc 01       	movw	r30, r24
 104:	80 81       	ld	r24, Z
 106:	48 2f       	mov	r20, r24
 108:	8c 81       	ldd	r24, Y+4	; 0x04
 10a:	28 2f       	mov	r18, r24
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_u8SetPinDirection+0x9c>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	2a 95       	dec	r18
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_u8SetPinDirection+0x98>
 11c:	80 95       	com	r24
 11e:	24 2f       	mov	r18, r20
 120:	28 23       	and	r18, r24
 122:	87 e3       	ldi	r24, 0x37	; 55
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	fc 01       	movw	r30, r24
 128:	20 83       	st	Z, r18
 12a:	ac c0       	rjmp	.+344    	; 0x284 <DIO_u8SetPinDirection+0x208>
			case DIO_u8PORTC: CLR_BIT(DDRC,Copy_u8Pin); break;
 12c:	84 e3       	ldi	r24, 0x34	; 52
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	fc 01       	movw	r30, r24
 132:	80 81       	ld	r24, Z
 134:	48 2f       	mov	r20, r24
 136:	8c 81       	ldd	r24, Y+4	; 0x04
 138:	28 2f       	mov	r18, r24
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	02 c0       	rjmp	.+4      	; 0x146 <DIO_u8SetPinDirection+0xca>
 142:	88 0f       	add	r24, r24
 144:	99 1f       	adc	r25, r25
 146:	2a 95       	dec	r18
 148:	e2 f7       	brpl	.-8      	; 0x142 <DIO_u8SetPinDirection+0xc6>
 14a:	80 95       	com	r24
 14c:	24 2f       	mov	r18, r20
 14e:	28 23       	and	r18, r24
 150:	84 e3       	ldi	r24, 0x34	; 52
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	fc 01       	movw	r30, r24
 156:	20 83       	st	Z, r18
 158:	95 c0       	rjmp	.+298    	; 0x284 <DIO_u8SetPinDirection+0x208>
			case DIO_u8PORTD: CLR_BIT(DDRD,Copy_u8Pin); break;
 15a:	81 e3       	ldi	r24, 0x31	; 49
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	fc 01       	movw	r30, r24
 160:	80 81       	ld	r24, Z
 162:	48 2f       	mov	r20, r24
 164:	8c 81       	ldd	r24, Y+4	; 0x04
 166:	28 2f       	mov	r18, r24
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_u8SetPinDirection+0xf8>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	2a 95       	dec	r18
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_u8SetPinDirection+0xf4>
 178:	80 95       	com	r24
 17a:	24 2f       	mov	r18, r20
 17c:	28 23       	and	r18, r24
 17e:	81 e3       	ldi	r24, 0x31	; 49
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	fc 01       	movw	r30, r24
 184:	20 83       	st	Z, r18
 186:	7e c0       	rjmp	.+252    	; 0x284 <DIO_u8SetPinDirection+0x208>
			default:Local_u8ErrorState=1;  break;
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	89 83       	std	Y+1, r24	; 0x01
 18c:	7b c0       	rjmp	.+246    	; 0x284 <DIO_u8SetPinDirection+0x208>
			}

		}
		else if(Copy_u8Direction==DIO_u8PIN_OUTPUT)
 18e:	8d 81       	ldd	r24, Y+5	; 0x05
 190:	81 30       	cpi	r24, 0x01	; 1
 192:	09 f0       	breq	.+2      	; 0x196 <DIO_u8SetPinDirection+0x11a>
 194:	72 c0       	rjmp	.+228    	; 0x27a <DIO_u8SetPinDirection+0x1fe>
		{
			switch(Copy_u8Port)
 196:	8b 81       	ldd	r24, Y+3	; 0x03
 198:	88 2f       	mov	r24, r24
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	84 30       	cpi	r24, 0x04	; 4
 19e:	91 05       	cpc	r25, r1
 1a0:	09 f4       	brne	.+2      	; 0x1a4 <DIO_u8SetPinDirection+0x128>
 1a2:	52 c0       	rjmp	.+164    	; 0x248 <DIO_u8SetPinDirection+0x1cc>
 1a4:	85 30       	cpi	r24, 0x05	; 5
 1a6:	91 05       	cpc	r25, r1
 1a8:	0c f0       	brlt	.+2      	; 0x1ac <DIO_u8SetPinDirection+0x130>
 1aa:	64 c0       	rjmp	.+200    	; 0x274 <DIO_u8SetPinDirection+0x1f8>
 1ac:	83 30       	cpi	r24, 0x03	; 3
 1ae:	91 05       	cpc	r25, r1
 1b0:	a9 f1       	breq	.+106    	; 0x21c <DIO_u8SetPinDirection+0x1a0>
 1b2:	84 30       	cpi	r24, 0x04	; 4
 1b4:	91 05       	cpc	r25, r1
 1b6:	0c f0       	brlt	.+2      	; 0x1ba <DIO_u8SetPinDirection+0x13e>
 1b8:	5d c0       	rjmp	.+186    	; 0x274 <DIO_u8SetPinDirection+0x1f8>
 1ba:	00 97       	sbiw	r24, 0x00	; 0
 1bc:	19 f0       	breq	.+6      	; 0x1c4 <DIO_u8SetPinDirection+0x148>
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	b9 f0       	breq	.+46     	; 0x1f0 <DIO_u8SetPinDirection+0x174>
 1c2:	58 c0       	rjmp	.+176    	; 0x274 <DIO_u8SetPinDirection+0x1f8>
			{
			case DIO_u8PORTA: SET_BIT(DDRA,Copy_u8Pin); break;
 1c4:	8a e3       	ldi	r24, 0x3A	; 58
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	fc 01       	movw	r30, r24
 1ca:	80 81       	ld	r24, Z
 1cc:	48 2f       	mov	r20, r24
 1ce:	8c 81       	ldd	r24, Y+4	; 0x04
 1d0:	28 2f       	mov	r18, r24
 1d2:	30 e0       	ldi	r19, 0x00	; 0
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_u8SetPinDirection+0x162>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	2a 95       	dec	r18
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_u8SetPinDirection+0x15e>
 1e2:	24 2f       	mov	r18, r20
 1e4:	28 2b       	or	r18, r24
 1e6:	8a e3       	ldi	r24, 0x3A	; 58
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	fc 01       	movw	r30, r24
 1ec:	20 83       	st	Z, r18
 1ee:	4a c0       	rjmp	.+148    	; 0x284 <DIO_u8SetPinDirection+0x208>
			case DIO_u8PORTB: SET_BIT(DDRB,Copy_u8Pin); break;
 1f0:	87 e3       	ldi	r24, 0x37	; 55
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	fc 01       	movw	r30, r24
 1f6:	80 81       	ld	r24, Z
 1f8:	48 2f       	mov	r20, r24
 1fa:	8c 81       	ldd	r24, Y+4	; 0x04
 1fc:	28 2f       	mov	r18, r24
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_u8SetPinDirection+0x18e>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	2a 95       	dec	r18
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_u8SetPinDirection+0x18a>
 20e:	24 2f       	mov	r18, r20
 210:	28 2b       	or	r18, r24
 212:	87 e3       	ldi	r24, 0x37	; 55
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	fc 01       	movw	r30, r24
 218:	20 83       	st	Z, r18
 21a:	34 c0       	rjmp	.+104    	; 0x284 <DIO_u8SetPinDirection+0x208>
			case DIO_u8PORTC: SET_BIT(DDRC,Copy_u8Pin); break;
 21c:	84 e3       	ldi	r24, 0x34	; 52
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	fc 01       	movw	r30, r24
 222:	80 81       	ld	r24, Z
 224:	48 2f       	mov	r20, r24
 226:	8c 81       	ldd	r24, Y+4	; 0x04
 228:	28 2f       	mov	r18, r24
 22a:	30 e0       	ldi	r19, 0x00	; 0
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_u8SetPinDirection+0x1ba>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	2a 95       	dec	r18
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_u8SetPinDirection+0x1b6>
 23a:	24 2f       	mov	r18, r20
 23c:	28 2b       	or	r18, r24
 23e:	84 e3       	ldi	r24, 0x34	; 52
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	fc 01       	movw	r30, r24
 244:	20 83       	st	Z, r18
 246:	1e c0       	rjmp	.+60     	; 0x284 <DIO_u8SetPinDirection+0x208>
			case DIO_u8PORTD: SET_BIT(DDRD,Copy_u8Pin); break;
 248:	81 e3       	ldi	r24, 0x31	; 49
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	fc 01       	movw	r30, r24
 24e:	80 81       	ld	r24, Z
 250:	48 2f       	mov	r20, r24
 252:	8c 81       	ldd	r24, Y+4	; 0x04
 254:	28 2f       	mov	r18, r24
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_u8SetPinDirection+0x1e6>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	2a 95       	dec	r18
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_u8SetPinDirection+0x1e2>
 266:	24 2f       	mov	r18, r20
 268:	28 2b       	or	r18, r24
 26a:	81 e3       	ldi	r24, 0x31	; 49
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	fc 01       	movw	r30, r24
 270:	20 83       	st	Z, r18
 272:	08 c0       	rjmp	.+16     	; 0x284 <DIO_u8SetPinDirection+0x208>
			default: Local_u8ErrorState=1;  break;
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	89 83       	std	Y+1, r24	; 0x01
 278:	05 c0       	rjmp	.+10     	; 0x284 <DIO_u8SetPinDirection+0x208>
			}

		}
		else
		{
			Local_u8ErrorState=1;
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	89 83       	std	Y+1, r24	; 0x01
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_u8SetPinDirection+0x208>


	}
	else
	{
		u8 Local_u8ErrorState=1;
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	8a 83       	std	Y+2, r24	; 0x02

	}


	return Local_u8ErrorState;
 284:	89 81       	ldd	r24, Y+1	; 0x01

}
 286:	0f 90       	pop	r0
 288:	0f 90       	pop	r0
 28a:	0f 90       	pop	r0
 28c:	0f 90       	pop	r0
 28e:	0f 90       	pop	r0
 290:	df 91       	pop	r29
 292:	cf 91       	pop	r28
 294:	08 95       	ret

00000296 <DIO_u8SetPortDirection>:
			/******************************************/
u8 DIO_u8SetPortDirection(u8 Copy_u8Port,u8 Copy_u8Direction)
{
 296:	cf 93       	push	r28
 298:	df 93       	push	r29
 29a:	00 d0       	rcall	.+0      	; 0x29c <DIO_u8SetPortDirection+0x6>
 29c:	0f 92       	push	r0
 29e:	cd b7       	in	r28, 0x3d	; 61
 2a0:	de b7       	in	r29, 0x3e	; 62
 2a2:	8a 83       	std	Y+2, r24	; 0x02
 2a4:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
 2a6:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8Port)
 2a8:	8a 81       	ldd	r24, Y+2	; 0x02
 2aa:	88 2f       	mov	r24, r24
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	84 30       	cpi	r24, 0x04	; 4
 2b0:	91 05       	cpc	r25, r1
 2b2:	01 f1       	breq	.+64     	; 0x2f4 <DIO_u8SetPortDirection+0x5e>
 2b4:	85 30       	cpi	r24, 0x05	; 5
 2b6:	91 05       	cpc	r25, r1
 2b8:	1c f5       	brge	.+70     	; 0x300 <DIO_u8SetPortDirection+0x6a>
 2ba:	83 30       	cpi	r24, 0x03	; 3
 2bc:	91 05       	cpc	r25, r1
 2be:	a1 f0       	breq	.+40     	; 0x2e8 <DIO_u8SetPortDirection+0x52>
 2c0:	84 30       	cpi	r24, 0x04	; 4
 2c2:	91 05       	cpc	r25, r1
 2c4:	ec f4       	brge	.+58     	; 0x300 <DIO_u8SetPortDirection+0x6a>
 2c6:	00 97       	sbiw	r24, 0x00	; 0
 2c8:	19 f0       	breq	.+6      	; 0x2d0 <DIO_u8SetPortDirection+0x3a>
 2ca:	01 97       	sbiw	r24, 0x01	; 1
 2cc:	39 f0       	breq	.+14     	; 0x2dc <DIO_u8SetPortDirection+0x46>
 2ce:	18 c0       	rjmp	.+48     	; 0x300 <DIO_u8SetPortDirection+0x6a>
				{
				case DIO_u8PORTA: DDRA=Copy_u8Direction; break;
 2d0:	8a e3       	ldi	r24, 0x3A	; 58
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	2b 81       	ldd	r18, Y+3	; 0x03
 2d6:	fc 01       	movw	r30, r24
 2d8:	20 83       	st	Z, r18
 2da:	15 c0       	rjmp	.+42     	; 0x306 <DIO_u8SetPortDirection+0x70>
				case DIO_u8PORTB: DDRB=Copy_u8Direction; break;
 2dc:	87 e3       	ldi	r24, 0x37	; 55
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	2b 81       	ldd	r18, Y+3	; 0x03
 2e2:	fc 01       	movw	r30, r24
 2e4:	20 83       	st	Z, r18
 2e6:	0f c0       	rjmp	.+30     	; 0x306 <DIO_u8SetPortDirection+0x70>
				case DIO_u8PORTC: DDRC=Copy_u8Direction; break;
 2e8:	84 e3       	ldi	r24, 0x34	; 52
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	2b 81       	ldd	r18, Y+3	; 0x03
 2ee:	fc 01       	movw	r30, r24
 2f0:	20 83       	st	Z, r18
 2f2:	09 c0       	rjmp	.+18     	; 0x306 <DIO_u8SetPortDirection+0x70>
				case DIO_u8PORTD: DDRD=Copy_u8Direction; break;
 2f4:	81 e3       	ldi	r24, 0x31	; 49
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	2b 81       	ldd	r18, Y+3	; 0x03
 2fa:	fc 01       	movw	r30, r24
 2fc:	20 83       	st	Z, r18
 2fe:	03 c0       	rjmp	.+6      	; 0x306 <DIO_u8SetPortDirection+0x70>
				default: Local_u8ErrorState=1; break;
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	89 83       	std	Y+1, r24	; 0x01
 304:	00 00       	nop

				}

	return Local_u8ErrorState;
 306:	89 81       	ldd	r24, Y+1	; 0x01


}
 308:	0f 90       	pop	r0
 30a:	0f 90       	pop	r0
 30c:	0f 90       	pop	r0
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	08 95       	ret

00000314 <DIO_u8SetPinValue>:
			/**********************************************/
u8 DIO_u8SetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Value)
{
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	00 d0       	rcall	.+0      	; 0x31a <DIO_u8SetPinValue+0x6>
 31a:	00 d0       	rcall	.+0      	; 0x31c <DIO_u8SetPinValue+0x8>
 31c:	cd b7       	in	r28, 0x3d	; 61
 31e:	de b7       	in	r29, 0x3e	; 62
 320:	8a 83       	std	Y+2, r24	; 0x02
 322:	6b 83       	std	Y+3, r22	; 0x03
 324:	4c 83       	std	Y+4, r20	; 0x04

u8 Local_u8ErrorState=0;
 326:	19 82       	std	Y+1, r1	; 0x01

if(Copy_u8Pin<=DIO_u8PIN7)
 328:	8b 81       	ldd	r24, Y+3	; 0x03
 32a:	88 30       	cpi	r24, 0x08	; 8
 32c:	08 f0       	brcs	.+2      	; 0x330 <DIO_u8SetPinValue+0x1c>
 32e:	f1 c0       	rjmp	.+482    	; 0x512 <__FUSE_REGION_LENGTH__+0x112>
{
	if(Copy_u8Value==DIO_u8PIN_HIGH)
 330:	8c 81       	ldd	r24, Y+4	; 0x04
 332:	81 30       	cpi	r24, 0x01	; 1
 334:	09 f0       	breq	.+2      	; 0x338 <DIO_u8SetPinValue+0x24>
 336:	71 c0       	rjmp	.+226    	; 0x41a <__FUSE_REGION_LENGTH__+0x1a>
		{
		switch(Copy_u8Port)
 338:	8a 81       	ldd	r24, Y+2	; 0x02
 33a:	88 2f       	mov	r24, r24
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	84 30       	cpi	r24, 0x04	; 4
 340:	91 05       	cpc	r25, r1
 342:	09 f4       	brne	.+2      	; 0x346 <DIO_u8SetPinValue+0x32>
 344:	52 c0       	rjmp	.+164    	; 0x3ea <DIO_u8SetPinValue+0xd6>
 346:	85 30       	cpi	r24, 0x05	; 5
 348:	91 05       	cpc	r25, r1
 34a:	0c f0       	brlt	.+2      	; 0x34e <DIO_u8SetPinValue+0x3a>
 34c:	64 c0       	rjmp	.+200    	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
 34e:	83 30       	cpi	r24, 0x03	; 3
 350:	91 05       	cpc	r25, r1
 352:	a9 f1       	breq	.+106    	; 0x3be <DIO_u8SetPinValue+0xaa>
 354:	84 30       	cpi	r24, 0x04	; 4
 356:	91 05       	cpc	r25, r1
 358:	0c f0       	brlt	.+2      	; 0x35c <DIO_u8SetPinValue+0x48>
 35a:	5d c0       	rjmp	.+186    	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
 35c:	00 97       	sbiw	r24, 0x00	; 0
 35e:	19 f0       	breq	.+6      	; 0x366 <DIO_u8SetPinValue+0x52>
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	b9 f0       	breq	.+46     	; 0x392 <DIO_u8SetPinValue+0x7e>
 364:	58 c0       	rjmp	.+176    	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
		{
			case DIO_u8PORTA:SET_BIT(PORTA,Copy_u8Pin);break;
 366:	8b e3       	ldi	r24, 0x3B	; 59
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	fc 01       	movw	r30, r24
 36c:	80 81       	ld	r24, Z
 36e:	48 2f       	mov	r20, r24
 370:	8b 81       	ldd	r24, Y+3	; 0x03
 372:	28 2f       	mov	r18, r24
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	02 c0       	rjmp	.+4      	; 0x380 <DIO_u8SetPinValue+0x6c>
 37c:	88 0f       	add	r24, r24
 37e:	99 1f       	adc	r25, r25
 380:	2a 95       	dec	r18
 382:	e2 f7       	brpl	.-8      	; 0x37c <DIO_u8SetPinValue+0x68>
 384:	24 2f       	mov	r18, r20
 386:	28 2b       	or	r18, r24
 388:	8b e3       	ldi	r24, 0x3B	; 59
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	fc 01       	movw	r30, r24
 38e:	20 83       	st	Z, r18
 390:	c2 c0       	rjmp	.+388    	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
			case DIO_u8PORTB:SET_BIT(PORTB,Copy_u8Pin);break;
 392:	88 e3       	ldi	r24, 0x38	; 56
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	fc 01       	movw	r30, r24
 398:	80 81       	ld	r24, Z
 39a:	48 2f       	mov	r20, r24
 39c:	8b 81       	ldd	r24, Y+3	; 0x03
 39e:	28 2f       	mov	r18, r24
 3a0:	30 e0       	ldi	r19, 0x00	; 0
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <DIO_u8SetPinValue+0x98>
 3a8:	88 0f       	add	r24, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	2a 95       	dec	r18
 3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <DIO_u8SetPinValue+0x94>
 3b0:	24 2f       	mov	r18, r20
 3b2:	28 2b       	or	r18, r24
 3b4:	88 e3       	ldi	r24, 0x38	; 56
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	fc 01       	movw	r30, r24
 3ba:	20 83       	st	Z, r18
 3bc:	ac c0       	rjmp	.+344    	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
			case DIO_u8PORTC:SET_BIT(PORTC,Copy_u8Pin);break;
 3be:	85 e3       	ldi	r24, 0x35	; 53
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	fc 01       	movw	r30, r24
 3c4:	80 81       	ld	r24, Z
 3c6:	48 2f       	mov	r20, r24
 3c8:	8b 81       	ldd	r24, Y+3	; 0x03
 3ca:	28 2f       	mov	r18, r24
 3cc:	30 e0       	ldi	r19, 0x00	; 0
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <DIO_u8SetPinValue+0xc4>
 3d4:	88 0f       	add	r24, r24
 3d6:	99 1f       	adc	r25, r25
 3d8:	2a 95       	dec	r18
 3da:	e2 f7       	brpl	.-8      	; 0x3d4 <DIO_u8SetPinValue+0xc0>
 3dc:	24 2f       	mov	r18, r20
 3de:	28 2b       	or	r18, r24
 3e0:	85 e3       	ldi	r24, 0x35	; 53
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	fc 01       	movw	r30, r24
 3e6:	20 83       	st	Z, r18
 3e8:	96 c0       	rjmp	.+300    	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
			case DIO_u8PORTD:SET_BIT(PORTD,Copy_u8Pin);break;
 3ea:	82 e3       	ldi	r24, 0x32	; 50
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	fc 01       	movw	r30, r24
 3f0:	80 81       	ld	r24, Z
 3f2:	48 2f       	mov	r20, r24
 3f4:	8b 81       	ldd	r24, Y+3	; 0x03
 3f6:	28 2f       	mov	r18, r24
 3f8:	30 e0       	ldi	r19, 0x00	; 0
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	02 c0       	rjmp	.+4      	; 0x404 <__FUSE_REGION_LENGTH__+0x4>
 400:	88 0f       	add	r24, r24
 402:	99 1f       	adc	r25, r25
 404:	2a 95       	dec	r18
 406:	e2 f7       	brpl	.-8      	; 0x400 <__FUSE_REGION_LENGTH__>
 408:	24 2f       	mov	r18, r20
 40a:	28 2b       	or	r18, r24
 40c:	82 e3       	ldi	r24, 0x32	; 50
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	fc 01       	movw	r30, r24
 412:	20 83       	st	Z, r18
 414:	80 c0       	rjmp	.+256    	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
			default :Local_u8ErrorState=0;;break;
 416:	19 82       	std	Y+1, r1	; 0x01
 418:	7e c0       	rjmp	.+252    	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
		}



		}
		else if(Copy_u8Value==DIO_u8PIN_LOW)
 41a:	8c 81       	ldd	r24, Y+4	; 0x04
 41c:	88 23       	and	r24, r24
 41e:	09 f0       	breq	.+2      	; 0x422 <__FUSE_REGION_LENGTH__+0x22>
 420:	75 c0       	rjmp	.+234    	; 0x50c <__FUSE_REGION_LENGTH__+0x10c>
		{
			switch(Copy_u8Port)
 422:	8a 81       	ldd	r24, Y+2	; 0x02
 424:	88 2f       	mov	r24, r24
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	84 30       	cpi	r24, 0x04	; 4
 42a:	91 05       	cpc	r25, r1
 42c:	09 f4       	brne	.+2      	; 0x430 <__FUSE_REGION_LENGTH__+0x30>
 42e:	55 c0       	rjmp	.+170    	; 0x4da <__FUSE_REGION_LENGTH__+0xda>
 430:	85 30       	cpi	r24, 0x05	; 5
 432:	91 05       	cpc	r25, r1
 434:	0c f0       	brlt	.+2      	; 0x438 <__FUSE_REGION_LENGTH__+0x38>
 436:	68 c0       	rjmp	.+208    	; 0x508 <__FUSE_REGION_LENGTH__+0x108>
 438:	83 30       	cpi	r24, 0x03	; 3
 43a:	91 05       	cpc	r25, r1
 43c:	b9 f1       	breq	.+110    	; 0x4ac <__FUSE_REGION_LENGTH__+0xac>
 43e:	84 30       	cpi	r24, 0x04	; 4
 440:	91 05       	cpc	r25, r1
 442:	0c f0       	brlt	.+2      	; 0x446 <__FUSE_REGION_LENGTH__+0x46>
 444:	61 c0       	rjmp	.+194    	; 0x508 <__FUSE_REGION_LENGTH__+0x108>
 446:	00 97       	sbiw	r24, 0x00	; 0
 448:	19 f0       	breq	.+6      	; 0x450 <__FUSE_REGION_LENGTH__+0x50>
 44a:	01 97       	sbiw	r24, 0x01	; 1
 44c:	c1 f0       	breq	.+48     	; 0x47e <__FUSE_REGION_LENGTH__+0x7e>
 44e:	5c c0       	rjmp	.+184    	; 0x508 <__FUSE_REGION_LENGTH__+0x108>
		{
			case DIO_u8PORTA:CLR_BIT(PORTA,Copy_u8Pin);break;
 450:	8b e3       	ldi	r24, 0x3B	; 59
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	fc 01       	movw	r30, r24
 456:	80 81       	ld	r24, Z
 458:	48 2f       	mov	r20, r24
 45a:	8b 81       	ldd	r24, Y+3	; 0x03
 45c:	28 2f       	mov	r18, r24
 45e:	30 e0       	ldi	r19, 0x00	; 0
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	02 c0       	rjmp	.+4      	; 0x46a <__FUSE_REGION_LENGTH__+0x6a>
 466:	88 0f       	add	r24, r24
 468:	99 1f       	adc	r25, r25
 46a:	2a 95       	dec	r18
 46c:	e2 f7       	brpl	.-8      	; 0x466 <__FUSE_REGION_LENGTH__+0x66>
 46e:	80 95       	com	r24
 470:	24 2f       	mov	r18, r20
 472:	28 23       	and	r18, r24
 474:	8b e3       	ldi	r24, 0x3B	; 59
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	fc 01       	movw	r30, r24
 47a:	20 83       	st	Z, r18
 47c:	4c c0       	rjmp	.+152    	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
			case DIO_u8PORTB:CLR_BIT(PORTB,Copy_u8Pin);break;
 47e:	88 e3       	ldi	r24, 0x38	; 56
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	fc 01       	movw	r30, r24
 484:	80 81       	ld	r24, Z
 486:	48 2f       	mov	r20, r24
 488:	8b 81       	ldd	r24, Y+3	; 0x03
 48a:	28 2f       	mov	r18, r24
 48c:	30 e0       	ldi	r19, 0x00	; 0
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	02 c0       	rjmp	.+4      	; 0x498 <__FUSE_REGION_LENGTH__+0x98>
 494:	88 0f       	add	r24, r24
 496:	99 1f       	adc	r25, r25
 498:	2a 95       	dec	r18
 49a:	e2 f7       	brpl	.-8      	; 0x494 <__FUSE_REGION_LENGTH__+0x94>
 49c:	80 95       	com	r24
 49e:	24 2f       	mov	r18, r20
 4a0:	28 23       	and	r18, r24
 4a2:	88 e3       	ldi	r24, 0x38	; 56
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	fc 01       	movw	r30, r24
 4a8:	20 83       	st	Z, r18
 4aa:	35 c0       	rjmp	.+106    	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
			case DIO_u8PORTC:CLR_BIT(PORTC,Copy_u8Pin);break;
 4ac:	85 e3       	ldi	r24, 0x35	; 53
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	fc 01       	movw	r30, r24
 4b2:	80 81       	ld	r24, Z
 4b4:	48 2f       	mov	r20, r24
 4b6:	8b 81       	ldd	r24, Y+3	; 0x03
 4b8:	28 2f       	mov	r18, r24
 4ba:	30 e0       	ldi	r19, 0x00	; 0
 4bc:	81 e0       	ldi	r24, 0x01	; 1
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <__FUSE_REGION_LENGTH__+0xc6>
 4c2:	88 0f       	add	r24, r24
 4c4:	99 1f       	adc	r25, r25
 4c6:	2a 95       	dec	r18
 4c8:	e2 f7       	brpl	.-8      	; 0x4c2 <__FUSE_REGION_LENGTH__+0xc2>
 4ca:	80 95       	com	r24
 4cc:	24 2f       	mov	r18, r20
 4ce:	28 23       	and	r18, r24
 4d0:	85 e3       	ldi	r24, 0x35	; 53
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	fc 01       	movw	r30, r24
 4d6:	20 83       	st	Z, r18
 4d8:	1e c0       	rjmp	.+60     	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
			case DIO_u8PORTD:CLR_BIT(PORTD,Copy_u8Pin);break;
 4da:	82 e3       	ldi	r24, 0x32	; 50
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	fc 01       	movw	r30, r24
 4e0:	80 81       	ld	r24, Z
 4e2:	48 2f       	mov	r20, r24
 4e4:	8b 81       	ldd	r24, Y+3	; 0x03
 4e6:	28 2f       	mov	r18, r24
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <__FUSE_REGION_LENGTH__+0xf4>
 4f0:	88 0f       	add	r24, r24
 4f2:	99 1f       	adc	r25, r25
 4f4:	2a 95       	dec	r18
 4f6:	e2 f7       	brpl	.-8      	; 0x4f0 <__FUSE_REGION_LENGTH__+0xf0>
 4f8:	80 95       	com	r24
 4fa:	24 2f       	mov	r18, r20
 4fc:	28 23       	and	r18, r24
 4fe:	82 e3       	ldi	r24, 0x32	; 50
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	fc 01       	movw	r30, r24
 504:	20 83       	st	Z, r18
 506:	07 c0       	rjmp	.+14     	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
			default :Local_u8ErrorState=0;;break;
 508:	19 82       	std	Y+1, r1	; 0x01
 50a:	05 c0       	rjmp	.+10     	; 0x516 <__FUSE_REGION_LENGTH__+0x116>


		}
		else
		{
		Local_u8ErrorState=1;
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	89 83       	std	Y+1, r24	; 0x01
 510:	02 c0       	rjmp	.+4      	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
		}


}
else{
	 Local_u8ErrorState=1;
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	89 83       	std	Y+1, r24	; 0x01

}
return Local_u8ErrorState;
 516:	89 81       	ldd	r24, Y+1	; 0x01

}
 518:	0f 90       	pop	r0
 51a:	0f 90       	pop	r0
 51c:	0f 90       	pop	r0
 51e:	0f 90       	pop	r0
 520:	df 91       	pop	r29
 522:	cf 91       	pop	r28
 524:	08 95       	ret

00000526 <DIO_u8SetPortValue>:
					/***************************************/
u8 DIO_u8SetPortValue(u8 Copy_u8Port,u8 Copy_u8Value)
{
 526:	cf 93       	push	r28
 528:	df 93       	push	r29
 52a:	00 d0       	rcall	.+0      	; 0x52c <DIO_u8SetPortValue+0x6>
 52c:	0f 92       	push	r0
 52e:	cd b7       	in	r28, 0x3d	; 61
 530:	de b7       	in	r29, 0x3e	; 62
 532:	8a 83       	std	Y+2, r24	; 0x02
 534:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
 536:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
 538:	8a 81       	ldd	r24, Y+2	; 0x02
 53a:	88 2f       	mov	r24, r24
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	84 30       	cpi	r24, 0x04	; 4
 540:	91 05       	cpc	r25, r1
 542:	01 f1       	breq	.+64     	; 0x584 <DIO_u8SetPortValue+0x5e>
 544:	85 30       	cpi	r24, 0x05	; 5
 546:	91 05       	cpc	r25, r1
 548:	1c f5       	brge	.+70     	; 0x590 <DIO_u8SetPortValue+0x6a>
 54a:	83 30       	cpi	r24, 0x03	; 3
 54c:	91 05       	cpc	r25, r1
 54e:	a1 f0       	breq	.+40     	; 0x578 <DIO_u8SetPortValue+0x52>
 550:	84 30       	cpi	r24, 0x04	; 4
 552:	91 05       	cpc	r25, r1
 554:	ec f4       	brge	.+58     	; 0x590 <DIO_u8SetPortValue+0x6a>
 556:	00 97       	sbiw	r24, 0x00	; 0
 558:	19 f0       	breq	.+6      	; 0x560 <DIO_u8SetPortValue+0x3a>
 55a:	01 97       	sbiw	r24, 0x01	; 1
 55c:	39 f0       	breq	.+14     	; 0x56c <DIO_u8SetPortValue+0x46>
 55e:	18 c0       	rjmp	.+48     	; 0x590 <DIO_u8SetPortValue+0x6a>
				{
					case DIO_u8PORTA: PORTA=Copy_u8Value; break;
 560:	8b e3       	ldi	r24, 0x3B	; 59
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	2b 81       	ldd	r18, Y+3	; 0x03
 566:	fc 01       	movw	r30, r24
 568:	20 83       	st	Z, r18
 56a:	15 c0       	rjmp	.+42     	; 0x596 <DIO_u8SetPortValue+0x70>
				    case DIO_u8PORTB: PORTB=Copy_u8Value; break;
 56c:	88 e3       	ldi	r24, 0x38	; 56
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	2b 81       	ldd	r18, Y+3	; 0x03
 572:	fc 01       	movw	r30, r24
 574:	20 83       	st	Z, r18
 576:	0f c0       	rjmp	.+30     	; 0x596 <DIO_u8SetPortValue+0x70>
				    case DIO_u8PORTC: PORTC=Copy_u8Value; break;
 578:	85 e3       	ldi	r24, 0x35	; 53
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	2b 81       	ldd	r18, Y+3	; 0x03
 57e:	fc 01       	movw	r30, r24
 580:	20 83       	st	Z, r18
 582:	09 c0       	rjmp	.+18     	; 0x596 <DIO_u8SetPortValue+0x70>
				    case DIO_u8PORTD: PORTD=Copy_u8Value; break;
 584:	82 e3       	ldi	r24, 0x32	; 50
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	2b 81       	ldd	r18, Y+3	; 0x03
 58a:	fc 01       	movw	r30, r24
 58c:	20 83       	st	Z, r18
 58e:	03 c0       	rjmp	.+6      	; 0x596 <DIO_u8SetPortValue+0x70>
				    default :Local_u8ErrorState=1; break;
 590:	81 e0       	ldi	r24, 0x01	; 1
 592:	89 83       	std	Y+1, r24	; 0x01
 594:	00 00       	nop
				}


	return Local_u8ErrorState;
 596:	89 81       	ldd	r24, Y+1	; 0x01

}
 598:	0f 90       	pop	r0
 59a:	0f 90       	pop	r0
 59c:	0f 90       	pop	r0
 59e:	df 91       	pop	r29
 5a0:	cf 91       	pop	r28
 5a2:	08 95       	ret

000005a4 <DIO_u8GetPinValue>:

				/******************************************/
u8 DIO_u8GetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8* Copy_pu8Value)
{
 5a4:	cf 93       	push	r28
 5a6:	df 93       	push	r29
 5a8:	00 d0       	rcall	.+0      	; 0x5aa <DIO_u8GetPinValue+0x6>
 5aa:	00 d0       	rcall	.+0      	; 0x5ac <DIO_u8GetPinValue+0x8>
 5ac:	0f 92       	push	r0
 5ae:	cd b7       	in	r28, 0x3d	; 61
 5b0:	de b7       	in	r29, 0x3e	; 62
 5b2:	8a 83       	std	Y+2, r24	; 0x02
 5b4:	6b 83       	std	Y+3, r22	; 0x03
 5b6:	5d 83       	std	Y+5, r21	; 0x05
 5b8:	4c 83       	std	Y+4, r20	; 0x04

	u8 Local_u8ErrorState=0;
 5ba:	19 82       	std	Y+1, r1	; 0x01
	if( (Copy_pu8Value!=NULL) && (Copy_u8Pin<=DIO_u8PIN7) )
 5bc:	8c 81       	ldd	r24, Y+4	; 0x04
 5be:	9d 81       	ldd	r25, Y+5	; 0x05
 5c0:	89 2b       	or	r24, r25
 5c2:	09 f4       	brne	.+2      	; 0x5c6 <DIO_u8GetPinValue+0x22>
 5c4:	73 c0       	rjmp	.+230    	; 0x6ac <DIO_u8GetPinValue+0x108>
 5c6:	8b 81       	ldd	r24, Y+3	; 0x03
 5c8:	88 30       	cpi	r24, 0x08	; 8
 5ca:	08 f0       	brcs	.+2      	; 0x5ce <DIO_u8GetPinValue+0x2a>
 5cc:	6f c0       	rjmp	.+222    	; 0x6ac <DIO_u8GetPinValue+0x108>
				{
					switch(Copy_u8Port)
 5ce:	8a 81       	ldd	r24, Y+2	; 0x02
 5d0:	88 2f       	mov	r24, r24
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	84 30       	cpi	r24, 0x04	; 4
 5d6:	91 05       	cpc	r25, r1
 5d8:	09 f4       	brne	.+2      	; 0x5dc <DIO_u8GetPinValue+0x38>
 5da:	4f c0       	rjmp	.+158    	; 0x67a <DIO_u8GetPinValue+0xd6>
 5dc:	85 30       	cpi	r24, 0x05	; 5
 5de:	91 05       	cpc	r25, r1
 5e0:	0c f0       	brlt	.+2      	; 0x5e4 <DIO_u8GetPinValue+0x40>
 5e2:	60 c0       	rjmp	.+192    	; 0x6a4 <DIO_u8GetPinValue+0x100>
 5e4:	83 30       	cpi	r24, 0x03	; 3
 5e6:	91 05       	cpc	r25, r1
 5e8:	99 f1       	breq	.+102    	; 0x650 <DIO_u8GetPinValue+0xac>
 5ea:	84 30       	cpi	r24, 0x04	; 4
 5ec:	91 05       	cpc	r25, r1
 5ee:	0c f0       	brlt	.+2      	; 0x5f2 <DIO_u8GetPinValue+0x4e>
 5f0:	59 c0       	rjmp	.+178    	; 0x6a4 <DIO_u8GetPinValue+0x100>
 5f2:	00 97       	sbiw	r24, 0x00	; 0
 5f4:	19 f0       	breq	.+6      	; 0x5fc <DIO_u8GetPinValue+0x58>
 5f6:	01 97       	sbiw	r24, 0x01	; 1
 5f8:	b1 f0       	breq	.+44     	; 0x626 <DIO_u8GetPinValue+0x82>
 5fa:	54 c0       	rjmp	.+168    	; 0x6a4 <DIO_u8GetPinValue+0x100>
					{
						 case DIO_u8PORTA: *Copy_pu8Value=GET_BIT(PINA,Copy_u8Pin); break;
 5fc:	89 e3       	ldi	r24, 0x39	; 57
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	fc 01       	movw	r30, r24
 602:	80 81       	ld	r24, Z
 604:	88 2f       	mov	r24, r24
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	2b 81       	ldd	r18, Y+3	; 0x03
 60a:	22 2f       	mov	r18, r18
 60c:	30 e0       	ldi	r19, 0x00	; 0
 60e:	02 c0       	rjmp	.+4      	; 0x614 <DIO_u8GetPinValue+0x70>
 610:	95 95       	asr	r25
 612:	87 95       	ror	r24
 614:	2a 95       	dec	r18
 616:	e2 f7       	brpl	.-8      	; 0x610 <DIO_u8GetPinValue+0x6c>
 618:	28 2f       	mov	r18, r24
 61a:	21 70       	andi	r18, 0x01	; 1
 61c:	8c 81       	ldd	r24, Y+4	; 0x04
 61e:	9d 81       	ldd	r25, Y+5	; 0x05
 620:	fc 01       	movw	r30, r24
 622:	20 83       	st	Z, r18
 624:	42 c0       	rjmp	.+132    	; 0x6aa <DIO_u8GetPinValue+0x106>
					     case DIO_u8PORTB: *Copy_pu8Value=GET_BIT(PINB,Copy_u8Pin); break;
 626:	86 e3       	ldi	r24, 0x36	; 54
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	fc 01       	movw	r30, r24
 62c:	80 81       	ld	r24, Z
 62e:	88 2f       	mov	r24, r24
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	2b 81       	ldd	r18, Y+3	; 0x03
 634:	22 2f       	mov	r18, r18
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	02 c0       	rjmp	.+4      	; 0x63e <DIO_u8GetPinValue+0x9a>
 63a:	95 95       	asr	r25
 63c:	87 95       	ror	r24
 63e:	2a 95       	dec	r18
 640:	e2 f7       	brpl	.-8      	; 0x63a <DIO_u8GetPinValue+0x96>
 642:	28 2f       	mov	r18, r24
 644:	21 70       	andi	r18, 0x01	; 1
 646:	8c 81       	ldd	r24, Y+4	; 0x04
 648:	9d 81       	ldd	r25, Y+5	; 0x05
 64a:	fc 01       	movw	r30, r24
 64c:	20 83       	st	Z, r18
 64e:	2d c0       	rjmp	.+90     	; 0x6aa <DIO_u8GetPinValue+0x106>
					     case DIO_u8PORTC: *Copy_pu8Value=GET_BIT(PINC,Copy_u8Pin); break;
 650:	83 e3       	ldi	r24, 0x33	; 51
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	fc 01       	movw	r30, r24
 656:	80 81       	ld	r24, Z
 658:	88 2f       	mov	r24, r24
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	2b 81       	ldd	r18, Y+3	; 0x03
 65e:	22 2f       	mov	r18, r18
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	02 c0       	rjmp	.+4      	; 0x668 <DIO_u8GetPinValue+0xc4>
 664:	95 95       	asr	r25
 666:	87 95       	ror	r24
 668:	2a 95       	dec	r18
 66a:	e2 f7       	brpl	.-8      	; 0x664 <DIO_u8GetPinValue+0xc0>
 66c:	28 2f       	mov	r18, r24
 66e:	21 70       	andi	r18, 0x01	; 1
 670:	8c 81       	ldd	r24, Y+4	; 0x04
 672:	9d 81       	ldd	r25, Y+5	; 0x05
 674:	fc 01       	movw	r30, r24
 676:	20 83       	st	Z, r18
 678:	18 c0       	rjmp	.+48     	; 0x6aa <DIO_u8GetPinValue+0x106>
					     case DIO_u8PORTD: *Copy_pu8Value=GET_BIT(PIND,Copy_u8Pin); break;
 67a:	80 e3       	ldi	r24, 0x30	; 48
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	fc 01       	movw	r30, r24
 680:	80 81       	ld	r24, Z
 682:	88 2f       	mov	r24, r24
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	2b 81       	ldd	r18, Y+3	; 0x03
 688:	22 2f       	mov	r18, r18
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	02 c0       	rjmp	.+4      	; 0x692 <DIO_u8GetPinValue+0xee>
 68e:	95 95       	asr	r25
 690:	87 95       	ror	r24
 692:	2a 95       	dec	r18
 694:	e2 f7       	brpl	.-8      	; 0x68e <DIO_u8GetPinValue+0xea>
 696:	28 2f       	mov	r18, r24
 698:	21 70       	andi	r18, 0x01	; 1
 69a:	8c 81       	ldd	r24, Y+4	; 0x04
 69c:	9d 81       	ldd	r25, Y+5	; 0x05
 69e:	fc 01       	movw	r30, r24
 6a0:	20 83       	st	Z, r18
 6a2:	03 c0       	rjmp	.+6      	; 0x6aa <DIO_u8GetPinValue+0x106>
					     default : Local_u8ErrorState=1; break;
 6a4:	81 e0       	ldi	r24, 0x01	; 1
 6a6:	89 83       	std	Y+1, r24	; 0x01
 6a8:	00 00       	nop
{

	u8 Local_u8ErrorState=0;
	if( (Copy_pu8Value!=NULL) && (Copy_u8Pin<=DIO_u8PIN7) )
				{
					switch(Copy_u8Port)
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <DIO_u8GetPinValue+0x10c>
					}

				}
				else
				{
				Local_u8ErrorState=1;
 6ac:	81 e0       	ldi	r24, 0x01	; 1
 6ae:	89 83       	std	Y+1, r24	; 0x01

				}


	return Local_u8ErrorState;
 6b0:	89 81       	ldd	r24, Y+1	; 0x01


}
 6b2:	0f 90       	pop	r0
 6b4:	0f 90       	pop	r0
 6b6:	0f 90       	pop	r0
 6b8:	0f 90       	pop	r0
 6ba:	0f 90       	pop	r0
 6bc:	df 91       	pop	r29
 6be:	cf 91       	pop	r28
 6c0:	08 95       	ret

000006c2 <main>:



u8 Local_u8InputValue;
void main(void)
{
 6c2:	cf 93       	push	r28
 6c4:	df 93       	push	r29
 6c6:	cd b7       	in	r28, 0x3d	; 61
 6c8:	de b7       	in	r29, 0x3e	; 62
	 DIO_u8SetPinDirection(DIO_u8PORTA , DIO_u8PIN1,DIO_u8PIN_INPUT);
 6ca:	40 e0       	ldi	r20, 0x00	; 0
 6cc:	61 e0       	ldi	r22, 0x01	; 1
 6ce:	80 e0       	ldi	r24, 0x00	; 0
 6d0:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_u8SetPinDirection>
	 DIO_u8SetPinDirection(DIO_u8PORTA , DIO_u8PIN0,DIO_u8PIN_OUTPUT);
 6d4:	41 e0       	ldi	r20, 0x01	; 1
 6d6:	60 e0       	ldi	r22, 0x00	; 0
 6d8:	80 e0       	ldi	r24, 0x00	; 0
 6da:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_u8SetPinDirection>
while(1)
{
 DIO_u8GetPinValue(DIO_u8PORTA,DIO_u8PIN1,&Local_u8InputValue);
 6de:	40 e6       	ldi	r20, 0x60	; 96
 6e0:	50 e0       	ldi	r21, 0x00	; 0
 6e2:	61 e0       	ldi	r22, 0x01	; 1
 6e4:	80 e0       	ldi	r24, 0x00	; 0
 6e6:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <DIO_u8GetPinValue>
	if(Local_u8InputValue==0)
 6ea:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 6ee:	88 23       	and	r24, r24
 6f0:	31 f4       	brne	.+12     	; 0x6fe <main+0x3c>
	{
		DIO_u8SetPinValue(DIO_u8PORTA,DIO_u8PIN0,DIO_u8PIN_HIGH);
 6f2:	41 e0       	ldi	r20, 0x01	; 1
 6f4:	60 e0       	ldi	r22, 0x00	; 0
 6f6:	80 e0       	ldi	r24, 0x00	; 0
 6f8:	0e 94 8a 01 	call	0x314	; 0x314 <DIO_u8SetPinValue>
 6fc:	f0 cf       	rjmp	.-32     	; 0x6de <main+0x1c>


	}
	else
	{
		DIO_u8SetPinValue(DIO_u8PORTA,DIO_u8PIN0,DIO_u8PIN_LOW);
 6fe:	40 e0       	ldi	r20, 0x00	; 0
 700:	60 e0       	ldi	r22, 0x00	; 0
 702:	80 e0       	ldi	r24, 0x00	; 0
 704:	0e 94 8a 01 	call	0x314	; 0x314 <DIO_u8SetPinValue>
{
	 DIO_u8SetPinDirection(DIO_u8PORTA , DIO_u8PIN1,DIO_u8PIN_INPUT);
	 DIO_u8SetPinDirection(DIO_u8PORTA , DIO_u8PIN0,DIO_u8PIN_OUTPUT);
while(1)
{
 DIO_u8GetPinValue(DIO_u8PORTA,DIO_u8PIN1,&Local_u8InputValue);
 708:	ea cf       	rjmp	.-44     	; 0x6de <main+0x1c>

0000070a <_exit>:
 70a:	f8 94       	cli

0000070c <__stop_program>:
 70c:	ff cf       	rjmp	.-2      	; 0x70c <__stop_program>
